<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="Decode_8h" kind="file">
    <compoundname>Decode.h</compoundname>
    <includes refid="Subgradient_8h" local="yes">Subgradient.h</includes>
    <includes refid="Forest_8h" local="no">Forest.h</includes>
    <includes refid="ForestLattice_8h" local="no">ForestLattice.h</includes>
    <includes refid="HypergraphAlgorithms_8h" local="no">HypergraphAlgorithms.h</includes>
    <includes local="no">vector</includes>
    <includes refid="third-party_2svector_2svector_8hpp" local="yes">svector.hpp</includes>
    <includes local="no">Ngram.h</includes>
    <includes refid="dual__subproblem_8h" local="yes">dual_subproblem.h</includes>
    <includes refid="EdgeCache_8h" local="yes">EdgeCache.h</includes>
    <includes refid="ExtendCKY_8h" local="yes">ExtendCKY.h</includes>
    <includedby refid="Run_8cpp" local="yes">Run.cpp</includedby>
    <incdepgraph>
      <node id="3057">
        <label>Subgradient.h</label>
        <link refid="Subgradient_8h_source"/>
        <childnode refid="3058" relation="include">
        </childnode>
        <childnode refid="3062" relation="include">
        </childnode>
      </node>
      <node id="3098">
        <label>queue</label>
      </node>
      <node id="3065">
        <label>assert.h</label>
      </node>
      <node id="3091">
        <label>GraphDecompose.h</label>
        <link refid="GraphDecompose_8h_source"/>
        <childnode refid="3062" relation="include">
        </childnode>
        <childnode refid="3088" relation="include">
        </childnode>
        <childnode refid="3083" relation="include">
        </childnode>
      </node>
      <node id="3097">
        <label>cmath</label>
      </node>
      <node id="3061">
        <label>cassert</label>
      </node>
      <node id="3060">
        <label>tr1/unordered_map</label>
      </node>
      <node id="3058">
        <label>svector.hpp</label>
        <link refid="third-party_2svector_2svector_8hpp_source"/>
        <childnode refid="3059" relation="include">
        </childnode>
        <childnode refid="3060" relation="include">
        </childnode>
        <childnode refid="3061" relation="include">
        </childnode>
      </node>
      <node id="3081">
        <label>features.pb.h</label>
        <link refid="gen__cpp_2features_8pb_8h_source"/>
        <childnode refid="3064" relation="include">
        </childnode>
        <childnode refid="3076" relation="include">
        </childnode>
        <childnode refid="3077" relation="include">
        </childnode>
        <childnode refid="3078" relation="include">
        </childnode>
        <childnode refid="3079" relation="include">
        </childnode>
        <childnode refid="3080" relation="include">
        </childnode>
        <childnode refid="3075" relation="include">
        </childnode>
      </node>
      <node id="3064">
        <label>string</label>
      </node>
      <node id="3059">
        <label>map</label>
      </node>
      <node id="3087">
        <label>EdgeCache.h</label>
        <link refid="EdgeCache_8h_source"/>
        <childnode refid="3062" relation="include">
        </childnode>
        <childnode refid="3088" relation="include">
        </childnode>
        <childnode refid="3065" relation="include">
        </childnode>
      </node>
      <node id="3074">
        <label>HypergraphImpl.h</label>
        <link refid="HypergraphImpl_8h_source"/>
        <childnode refid="3066" relation="include">
        </childnode>
        <childnode refid="3075" relation="include">
        </childnode>
        <childnode refid="3081" relation="include">
        </childnode>
        <childnode refid="3067" relation="include">
        </childnode>
        <childnode refid="3082" relation="include">
        </childnode>
        <childnode refid="3062" relation="include">
        </childnode>
        <childnode refid="3073" relation="include">
        </childnode>
      </node>
      <node id="3066">
        <label>Hypergraph.h</label>
        <link refid="Hypergraph_8h_source"/>
        <childnode refid="3067" relation="include">
        </childnode>
        <childnode refid="3062" relation="include">
        </childnode>
        <childnode refid="3073" relation="include">
        </childnode>
        <childnode refid="3064" relation="include">
        </childnode>
      </node>
      <node id="3069">
        <label>fstream</label>
      </node>
      <node id="3085">
        <label>Graph.h</label>
        <link refid="Graph_8h_source"/>
        <childnode refid="3062" relation="include">
        </childnode>
        <childnode refid="3064" relation="include">
        </childnode>
        <childnode refid="3082" relation="include">
        </childnode>
      </node>
      <node id="3093">
        <label>NGramCache.h</label>
        <link refid="NGramCache_8h_source"/>
        <childnode refid="3089" relation="include">
        </childnode>
        <childnode refid="3094" relation="include">
        </childnode>
      </node>
      <node id="3095">
        <label>ExtendCKY.h</label>
        <link refid="ExtendCKY_8h_source"/>
        <childnode refid="3087" relation="include">
        </childnode>
        <childnode refid="3066" relation="include">
        </childnode>
        <childnode refid="3096" relation="include">
        </childnode>
        <childnode refid="3065" relation="include">
        </childnode>
        <childnode refid="3059" relation="include">
        </childnode>
        <childnode refid="3098" relation="include">
        </childnode>
        <childnode refid="3073" relation="include">
        </childnode>
        <childnode refid="3062" relation="include">
        </childnode>
        <childnode refid="3099" relation="include">
        </childnode>
      </node>
      <node id="3075">
        <label>hypergraph.pb.h</label>
        <link refid="gen__cpp_2hypergraph_8pb_8h_source"/>
        <childnode refid="3064" relation="include">
        </childnode>
        <childnode refid="3076" relation="include">
        </childnode>
        <childnode refid="3077" relation="include">
        </childnode>
        <childnode refid="3078" relation="include">
        </childnode>
        <childnode refid="3079" relation="include">
        </childnode>
        <childnode refid="3080" relation="include">
        </childnode>
      </node>
      <node id="3067">
        <label>Weights.h</label>
        <link refid="Weights_8h_source"/>
        <childnode refid="3068" relation="include">
        </childnode>
        <childnode refid="3069" relation="include">
        </childnode>
        <childnode refid="3070" relation="include">
        </childnode>
        <childnode refid="3058" relation="include">
        </childnode>
      </node>
      <node id="3077">
        <label>google/protobuf/generated_message_util.h</label>
      </node>
      <node id="3089">
        <label>Ngram.h</label>
      </node>
      <node id="3082">
        <label>../common.h</label>
      </node>
      <node id="3088">
        <label>bitset</label>
      </node>
      <node id="3084">
        <label>lattice.pb.h</label>
        <link refid="lattice_8pb_8h_source"/>
        <childnode refid="3064" relation="include">
        </childnode>
        <childnode refid="3076" relation="include">
        </childnode>
        <childnode refid="3077" relation="include">
        </childnode>
        <childnode refid="3078" relation="include">
        </childnode>
        <childnode refid="3079" relation="include">
        </childnode>
        <childnode refid="3080" relation="include">
        </childnode>
      </node>
      <node id="3076">
        <label>google/protobuf/stubs/common.h</label>
      </node>
      <node id="3096">
        <label>Hypothesis.h</label>
        <link refid="Hypothesis_8h_source"/>
        <childnode refid="3065" relation="include">
        </childnode>
        <childnode refid="3059" relation="include">
        </childnode>
        <childnode refid="3062" relation="include">
        </childnode>
        <childnode refid="3066" relation="include">
        </childnode>
        <childnode refid="3087" relation="include">
        </childnode>
        <childnode refid="3082" relation="include">
        </childnode>
        <childnode refid="3097" relation="include">
        </childnode>
      </node>
      <node id="3062">
        <label>vector</label>
      </node>
      <node id="3094">
        <label>Prob.h</label>
      </node>
      <node id="3056">
        <label>trans_decode/Decode.h</label>
        <link refid="Decode.h"/>
        <childnode refid="3057" relation="include">
        </childnode>
        <childnode refid="3063" relation="include">
        </childnode>
        <childnode refid="3083" relation="include">
        </childnode>
        <childnode refid="3086" relation="include">
        </childnode>
        <childnode refid="3062" relation="include">
        </childnode>
        <childnode refid="3058" relation="include">
        </childnode>
        <childnode refid="3089" relation="include">
        </childnode>
        <childnode refid="3090" relation="include">
        </childnode>
        <childnode refid="3087" relation="include">
        </childnode>
        <childnode refid="3095" relation="include">
        </childnode>
      </node>
      <node id="3092">
        <label>BigramRescore.h</label>
        <link refid="BigramRescore_8h_source"/>
        <childnode refid="3083" relation="include">
        </childnode>
        <childnode refid="3091" relation="include">
        </childnode>
        <childnode refid="3068" relation="include">
        </childnode>
        <childnode refid="3082" relation="include">
        </childnode>
        <childnode refid="3062" relation="include">
        </childnode>
      </node>
      <node id="3090">
        <label>dual_subproblem.h</label>
        <link refid="dual__subproblem_8h_source"/>
        <childnode refid="3083" relation="include">
        </childnode>
        <childnode refid="3087" relation="include">
        </childnode>
        <childnode refid="3091" relation="include">
        </childnode>
        <childnode refid="3092" relation="include">
        </childnode>
        <childnode refid="3093" relation="include">
        </childnode>
        <childnode refid="3082" relation="include">
        </childnode>
        <childnode refid="3069" relation="include">
        </childnode>
        <childnode refid="3073" relation="include">
        </childnode>
      </node>
      <node id="3086">
        <label>HypergraphAlgorithms.h</label>
        <link refid="HypergraphAlgorithms_8h_source"/>
        <childnode refid="3058" relation="include">
        </childnode>
        <childnode refid="3087" relation="include">
        </childnode>
        <childnode refid="3066" relation="include">
        </childnode>
      </node>
      <node id="3063">
        <label>Forest.h</label>
        <link refid="Forest_8h_source"/>
        <childnode refid="3062" relation="include">
        </childnode>
        <childnode refid="3058" relation="include">
        </childnode>
        <childnode refid="3064" relation="include">
        </childnode>
        <childnode refid="3065" relation="include">
        </childnode>
        <childnode refid="3066" relation="include">
        </childnode>
        <childnode refid="3074" relation="include">
        </childnode>
        <childnode refid="3075" relation="include">
        </childnode>
      </node>
      <node id="3083">
        <label>ForestLattice.h</label>
        <link refid="ForestLattice_8h_source"/>
        <childnode refid="3064" relation="include">
        </childnode>
        <childnode refid="3084" relation="include">
        </childnode>
        <childnode refid="3062" relation="include">
        </childnode>
        <childnode refid="3085" relation="include">
        </childnode>
      </node>
      <node id="3071">
        <label>sstream</label>
      </node>
      <node id="3079">
        <label>google/protobuf/extension_set.h</label>
      </node>
      <node id="3078">
        <label>google/protobuf/repeated_field.h</label>
      </node>
      <node id="3072">
        <label>cstdlib</label>
      </node>
      <node id="3070">
        <label>cy_svector.hpp</label>
        <link refid="cy__svector_8hpp_source"/>
        <childnode refid="3064" relation="include">
        </childnode>
        <childnode refid="3071" relation="include">
        </childnode>
        <childnode refid="3072" relation="include">
        </childnode>
        <childnode refid="3070" relation="include">
        </childnode>
        <childnode refid="3059" relation="include">
        </childnode>
        <childnode refid="3060" relation="include">
        </childnode>
        <childnode refid="3061" relation="include">
        </childnode>
        <childnode refid="3062" relation="include">
        </childnode>
        <childnode refid="3068" relation="include">
        </childnode>
      </node>
      <node id="3068">
        <label>iostream</label>
      </node>
      <node id="3073">
        <label>set</label>
      </node>
      <node id="3099">
        <label>BestHyp.h</label>
        <link refid="BestHyp_8h_source"/>
        <childnode refid="3065" relation="include">
        </childnode>
        <childnode refid="3059" relation="include">
        </childnode>
        <childnode refid="3062" relation="include">
        </childnode>
        <childnode refid="3066" relation="include">
        </childnode>
        <childnode refid="3096" relation="include">
        </childnode>
        <childnode refid="3086" relation="include">
        </childnode>
      </node>
      <node id="3080">
        <label>google/protobuf/generated_message_reflection.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="classDecode" prot="public">Decode</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="Decode_8h_1a42a2b350f79a3e23df9e612029bc1017" prot="public" static="no">
        <name>GRAMSPLIT</name>
        <initializer>100000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/trans_decode/Decode.h" line="16" bodyfile="/home/srush/Projects/relax_decode/trans_decode/Decode.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Decode_8h_1a5d8c5913792a4d0cd781a040895ee6df" prot="public" static="no">
        <name>GRAMSPLIT2</name>
        <initializer>200000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/trans_decode/Decode.h" line="17" bodyfile="/home/srush/Projects/relax_decode/trans_decode/Decode.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="Decode_8h_1ae908848834ffe0602906f263f3582c8b" prot="public" static="no">
        <type><ref refid="classsvector" kindref="compound">svector</ref>&lt; int, double &gt;</type>
        <definition>typedef svector&lt;int, double&gt; wvector</definition>
        <argsstring></argsstring>
        <name>wvector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/trans_decode/Decode.h" line="19" bodyfile="/home/srush/Projects/relax_decode/trans_decode/Decode.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>DECODE_H_</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DECODE_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Subgradient.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Forest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ForestLattice.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;HypergraphAlgorithms.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;svector.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Ngram.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dual_subproblem.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;EdgeCache.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ExtendCKY.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GRAMSPLIT<sp/>100000</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GRAMSPLIT2<sp/>200000</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classsvector" kindref="compound">svector&lt;int, double&gt;</ref><sp/><ref refid="classsvector" kindref="compound">wvector</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Scarab::HG;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classDecode" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classDecode" kindref="compound">Decode</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classSubgradientProducer" kindref="compound">SubgradientProducer</ref><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><ref refid="classDecode" kindref="compound">Decode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classForest" kindref="compound">Forest</ref><sp/>&amp;<sp/>forest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classForestLattice" kindref="compound">ForestLattice</ref><sp/>&amp;<sp/>lattice,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsvector" kindref="compound">wvector</ref><sp/>&amp;<sp/>weight,<sp/><ref refid="classNgramCache" kindref="compound">NgramCache</ref><sp/>&amp;<sp/>lm)<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>:_forest(forest),<sp/>_lattice(lattice),<sp/>_weight(weight),<sp/>_lm(lm)<sp/></highlight><highlight class="comment">//,<sp/>ecky(forest)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>_cached_weights<sp/>=<sp/><ref refid="classScarab_1_1HG_1_1HypergraphAlgorithms" kindref="compound">HypergraphAlgorithms</ref>(forest).cache_edge_weights(weight);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;decomposing&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>_gd.decompose(&amp;lattice);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;done<sp/>decomposing&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>sync_lattice_lm();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>_subproblem<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classSubproblem" kindref="compound">Subproblem</ref>(&amp;lattice,<sp/>&amp;<sp/>lm,<sp/>&amp;_gd,<sp/>*_cached_words);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>_lagrange_weights<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsvector" kindref="compound">svector&lt;int, double&gt;</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>_maintain_constraints<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>_is_stuck_round<sp/>=<sp/>10000;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;ready<sp/>to<sp/>roll&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_projection<sp/>=<sp/>_subproblem-&gt;rand_projection(2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>_constraints.resize(_lattice.num_word_nodes);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classDecode" kindref="compound">Decode</ref>()<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>_subproblem;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>_lagrange_weights;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>_cached_words;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>solve(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>primal,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>dual,<sp/><ref refid="classsvector" kindref="compound">wvector</ref><sp/>&amp;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update_weights(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsvector" kindref="compound">wvector</ref><sp/>&amp;<sp/>updates,<sp/><sp/><ref refid="classsvector" kindref="compound">wvector</ref><sp/>*<sp/>weights<sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>debug(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start_from,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dual_mid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dual_end,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>primal_mid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>primal_end);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>greedy_projection(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dual_mid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dual_end,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>primal_mid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>primal_end);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>add_subgrad(<sp/><ref refid="classsvector" kindref="compound">wvector</ref><sp/>&amp;<sp/>subgrad,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start_from,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mid_at,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_at,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>compute_primal(HEdges<sp/>used_edges,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector<sp/>&lt;const<sp/>ForestNode<sp/>*&gt;<sp/>used_nodes);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lookup_string(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>word);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="classSubproblem" kindref="compound">Subproblem</ref><sp/>*<sp/>_subproblem;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classForest" kindref="compound">Forest</ref><sp/>&amp;<sp/>_forest;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classForestLattice" kindref="compound">ForestLattice</ref><sp/>&amp;<sp/>_lattice;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsvector" kindref="compound">wvector</ref><sp/>&amp;<sp/>_weight;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="classsvector" kindref="compound">wvector</ref><sp/>*<sp/>_lagrange_weights;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="classNgramCache" kindref="compound">NgramCache</ref><sp/>&amp;<sp/>_lm;<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="classGraphDecompose" kindref="compound">GraphDecompose</ref><sp/>_gd;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="classCache" kindref="compound">Cache &lt;Hyperedge, double&gt;</ref><sp/>*<sp/>_cached_weights;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="classCache" kindref="compound">Cache &lt;Graphnode, int&gt;</ref><sp/>*<sp/>_cached_words;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>vector<sp/>&lt;int<sp/>&gt;<sp/>get_lat_edges(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge_id);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>vector<sp/>&lt;int<sp/>&gt;<sp/>get_lex_lat_edges(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge_id);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sync_lattice_lm();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print_output(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsvector" kindref="compound">wvector</ref><sp/>&amp;<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>vector<sp/>&lt;int<sp/>&gt;<sp/>_projection;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_proj_dim;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lm_total,<sp/>o_total,<sp/>lag_total;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>map<sp/>&lt;int,<sp/>set<sp/>&lt;int&gt;<sp/>&gt;<sp/>_constraints;<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_maintain_constraints;<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_is_stuck_round;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//ExtendCKY<sp/>ecky;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/srush/Projects/relax_decode/trans_decode/Decode.h"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="protoc_8py" kind="file">
    <compoundname>protoc.py</compoundname>
    <innernamespace refid="namespaceprotoc">protoc</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceprotoc" refkind="compound"><highlight class="stringliteral">&quot;&quot;&quot;<sp/></highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral">protoc.py:<sp/>Protoc<sp/>Builder<sp/>for<sp/>SCons</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral">This<sp/>Builder<sp/>invokes<sp/>protoc<sp/>to<sp/>generate<sp/>C++<sp/>and<sp/>Python<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral">from<sp/>a<sp/>.proto<sp/>file.<sp/><sp/></highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral">NOTE:<sp/>Java<sp/>is<sp/>not<sp/>currently<sp/>supported.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">__author__<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Scott<sp/>Stafford&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>SCons.Action</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>SCons.Builder</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>SCons.Defaults</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>SCons.Node.FS</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>SCons.Util</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>SCons.Script<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>File,<sp/>Dir</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os.path</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">protocs<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;protoc&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">ProtocAction<sp/>=<sp/>SCons.Action.Action(</highlight><highlight class="stringliteral">&apos;$PROTOCCOM&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;$PROTOCCOMSTR&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">ProtocEmitter(target,<sp/>source,<sp/>env):</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>dirOfCallingSConscript<sp/>=<sp/>Dir(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">).srcnode()</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>env.Prepend(PROTOCPROTOPATH<sp/>=<sp/>dirOfCallingSConscript.path)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>source_with_corrected_path<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>src<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>source:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commonprefix<sp/>=<sp/>os.path.commonprefix([dirOfCallingSConscript.path,<sp/>src.srcnode().path])</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(commonprefix)&gt;0:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source_with_corrected_path.append(<sp/>src.srcnode().path[len(commonprefix<sp/>+<sp/>os.sep):]<sp/>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source_with_corrected_path.append(<sp/>src.srcnode().path<sp/>)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>source<sp/>=<sp/>source_with_corrected_path</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>src<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>source:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modulename<sp/>=<sp/>os.path.splitext(src)[0]</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>env[</highlight><highlight class="stringliteral">&apos;PROTOCOUTDIR&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base<sp/>=<sp/>os.path.join(env[</highlight><highlight class="stringliteral">&apos;PROTOCOUTDIR&apos;</highlight><highlight class="normal">]<sp/>,<sp/>modulename)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.extend(<sp/>[<sp/>base<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;.pb.cc&apos;</highlight><highlight class="normal">,<sp/>base<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;.pb.h&apos;</highlight><highlight class="normal"><sp/>]<sp/>)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>env[</highlight><highlight class="stringliteral">&apos;PROTOCPYTHONOUTDIR&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base<sp/>=<sp/>os.path.join(env[</highlight><highlight class="stringliteral">&apos;PROTOCPYTHONOUTDIR&apos;</highlight><highlight class="normal">]<sp/>,<sp/>modulename)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.append(<sp/>base<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;_pb2.py&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.append(env[</highlight><highlight class="stringliteral">&apos;PROTOCFDSOUT&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>KeyError:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#~<sp/>print<sp/>&quot;PROTOC<sp/>SOURCE:&quot;,<sp/>[str(s)<sp/>for<sp/>s<sp/>in<sp/>source]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#~<sp/>print<sp/>&quot;PROTOC<sp/>TARGET:&quot;,<sp/>[str(s)<sp/>for<sp/>s<sp/>in<sp/>target]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>target,<sp/>source</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">ProtocBuilder<sp/>=<sp/>SCons.Builder.Builder(action<sp/>=<sp/>ProtocAction,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emitter<sp/>=<sp/>ProtocEmitter,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcsuffix<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;$PROTOCSRCSUFFIX&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceprotoc_1ad49cf73a0ff7f84b18cbcfbf8d76de0d" kindref="member">generate</ref>(env):</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Add<sp/>Builders<sp/>and<sp/>construction<sp/>variables<sp/>for<sp/>protoc<sp/>to<sp/>an<sp/>Environment.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bld<sp/>=<sp/>env[</highlight><highlight class="stringliteral">&apos;BUILDERS&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;Protoc&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>KeyError:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bld<sp/>=<sp/>ProtocBuilder</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env[</highlight><highlight class="stringliteral">&apos;BUILDERS&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;Protoc&apos;</highlight><highlight class="normal">]<sp/>=<sp/>bld</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>env[</highlight><highlight class="stringliteral">&apos;PROTOC&apos;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>env.Detect(protocs)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;protoc&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>env[</highlight><highlight class="stringliteral">&apos;PROTOCFLAGS&apos;</highlight><highlight class="normal">]<sp/><sp/><sp/>=<sp/>SCons.Util.CLVar(</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>env[</highlight><highlight class="stringliteral">&apos;PROTOCPROTOPATH&apos;</highlight><highlight class="normal">]<sp/>=<sp/>SCons.Util.CLVar(</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>env[</highlight><highlight class="stringliteral">&apos;PROTOCCOM&apos;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;$PROTOC<sp/>${[&quot;-I%s&quot;%x<sp/>for<sp/>x<sp/>in<sp/>PROTOCPROTOPATH]}<sp/>$PROTOCFLAGS<sp/>--cpp_out=$PROTOCCPPOUTFLAGS$PROTOCOUTDIR<sp/>${PROTOCPYTHONOUTDIR<sp/>and<sp/>(&quot;--python_out=&quot;+PROTOCPYTHONOUTDIR)<sp/>or<sp/>&quot;&quot;}<sp/>${PROTOCFDSOUT<sp/>and<sp/>(&quot;-o&quot;+PROTOCFDSOUT)<sp/>or<sp/>&quot;&quot;}<sp/>${SOURCES}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>env[</highlight><highlight class="stringliteral">&apos;PROTOCOUTDIR&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;${SOURCE.dir}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>env[</highlight><highlight class="stringliteral">&apos;PROTOCPYTHONOUTDIR&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;python&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>env[</highlight><highlight class="stringliteral">&apos;PROTOCSRCSUFFIX&apos;</highlight><highlight class="normal">]<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;.proto&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">exists(env):</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>env.Detect(protocs)</highlight></codeline>
    </programlisting>
    <location file="/home/srush/Projects/relax_decode/protoc.py"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="svector_8cpp" kind="file">
    <compoundname>svector.cpp</compoundname>
    <includes local="yes">Python.h</includes>
    <includes local="yes">structmember.h</includes>
    <includes local="no">math.h</includes>
    <includes local="yes">string</includes>
    <includes local="yes">numberizer.hpp</includes>
    <includes local="yes">cmath</includes>
    <includes local="yes">svector.hpp</includes>
    <includes local="yes">cy_svector.hpp</includes>
    <includes local="yes">stdexcept</includes>
    <includes local="yes">compile.h</includes>
    <includes local="yes">frameobject.h</includes>
    <includes local="yes">traceback.h</includes>
    <incdepgraph>
      <node id="594">
        <label>structmember.h</label>
      </node>
      <node id="604">
        <label>traceback.h</label>
      </node>
      <node id="592">
        <label>hypergraph/svector.cpp</label>
        <link refid="svector.cpp"/>
        <childnode refid="593" relation="include">
        </childnode>
        <childnode refid="594" relation="include">
        </childnode>
        <childnode refid="595" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
        <childnode refid="597" relation="include">
        </childnode>
        <childnode refid="598" relation="include">
        </childnode>
        <childnode refid="599" relation="include">
        </childnode>
        <childnode refid="600" relation="include">
        </childnode>
        <childnode refid="601" relation="include">
        </childnode>
        <childnode refid="602" relation="include">
        </childnode>
        <childnode refid="603" relation="include">
        </childnode>
        <childnode refid="604" relation="include">
        </childnode>
      </node>
      <node id="598">
        <label>cmath</label>
      </node>
      <node id="601">
        <label>stdexcept</label>
      </node>
      <node id="596">
        <label>string</label>
      </node>
      <node id="599">
        <label>svector.hpp</label>
      </node>
      <node id="603">
        <label>frameobject.h</label>
      </node>
      <node id="593">
        <label>Python.h</label>
      </node>
      <node id="602">
        <label>compile.h</label>
      </node>
      <node id="595">
        <label>math.h</label>
      </node>
      <node id="600">
        <label>cy_svector.hpp</label>
      </node>
      <node id="597">
        <label>numberizer.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="structPy__buffer" prot="public">Py_buffer</innerclass>
    <innerclass refid="struct____Pyx__StringTabEntry" prot="public">__Pyx_StringTabEntry</innerclass>
    <innerclass refid="struct____pyx__obj__7svector__Vector" prot="public">__pyx_obj_7svector_Vector</innerclass>
    <innerclass refid="struct____pyx__obj__7svector__KeyIterator" prot="public">__pyx_obj_7svector_KeyIterator</innerclass>
    <innerclass refid="struct____pyx__obj__7svector__KeyValueIterator" prot="public">__pyx_obj_7svector_KeyValueIterator</innerclass>
    <innerclass refid="struct____pyx__obj__7svector__ValueIterator" prot="public">__pyx_obj_7svector_ValueIterator</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="svector_8cpp_1ac9efdaac9411d0868b715edccca3269d" prot="public" static="no">
        <name>PY_SSIZE_T_CLEAN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1ac59f6326f13ae94773afcb6d6b741a33" prot="public" static="no">
        <name>DL_EXPORT</name>
        <param><defname>t</defname></param>
        <initializer>t</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="13" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1af1096f0a899e6894666570a6753de2d6" prot="public" static="no">
        <name>METH_COEXIST</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="16" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a97c330228b2a8632942ea1e8477b091d" prot="public" static="no">
        <name>PyDict_CheckExact</name>
        <param><defname>op</defname></param>
        <initializer>(Py_TYPE(op) == &amp;PyDict_Type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="17" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1aa5b5990f814eb53730c24c7f911f9132" prot="public" static="no">
        <name>PY_SSIZE_T_MAX</name>
        <initializer>INT_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="21" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a9fbcf3e88f34de99fb3bd045cffd6ce4" prot="public" static="no">
        <name>PY_SSIZE_T_MIN</name>
        <initializer>INT_MIN</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="22" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a3477b9ca630aca5fd47d385c41efcbc4" prot="public" static="no">
        <name>PY_FORMAT_SIZE_T</name>
        <initializer>&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="23" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a55e75a527a49bd8f65add775f95969e8" prot="public" static="no">
        <name>PyInt_FromSsize_t</name>
        <param><defname>z</defname></param>
        <initializer>PyInt_FromLong(z)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="24" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1ae28f01df381297b7e79a81ea13d5e480" prot="public" static="no">
        <name>PyInt_AsSsize_t</name>
        <param><defname>o</defname></param>
        <initializer>PyInt_AsLong(o)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="25" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a9dea2e00480e0628bcfdad3d07eb3891" prot="public" static="no">
        <name>PyNumber_Index</name>
        <param><defname>o</defname></param>
        <initializer>PyNumber_Int(o)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="26" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a61821b56bf1c83820764d3777f7e39c3" prot="public" static="no">
        <name>PyIndex_Check</name>
        <param><defname>o</defname></param>
        <initializer>PyNumber_Check(o)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="27" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a1cd6a39fecc0dd7c56b90e133987c3c9" prot="public" static="no">
        <name>Py_REFCNT</name>
        <param><defname>ob</defname></param>
        <initializer>(((PyObject*)(ob))-&gt;ob_refcnt)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="30" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a02507aa5ff002289d6f1ad2e93351b8a" prot="public" static="no">
        <name>Py_TYPE</name>
        <param><defname>ob</defname></param>
        <initializer>(((PyObject*)(ob))-&gt;ob_type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="31" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a1ea4afed41d83b1e1d991de286b4a79f" prot="public" static="no">
        <name>Py_SIZE</name>
        <param><defname>ob</defname></param>
        <initializer>(((PyVarObject*)(ob))-&gt;ob_size)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="32" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1af7bf798fd1fb10467244bfb9d0dc12d5" prot="public" static="no">
        <name>PyVarObject_HEAD_INIT</name>
        <param><defname>type</defname></param>
        <param><defname>size</defname></param>
        <initializer>PyObject_HEAD_INIT(type) size,</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="34" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1afa8740ed8c16452e6ee85ed6a5ed280b" prot="public" static="no">
        <name>PyType_Modified</name>
        <param><defname>t</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="35" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a734b71480a0ce09f2fbd994bbf61703d" prot="public" static="no">
        <name>PyBUF_SIMPLE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="51" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1acdd49fc839910bf2c301039c77e45848" prot="public" static="no">
        <name>PyBUF_WRITABLE</name>
        <initializer>0x0001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="52" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a4e375ce7d7017f36f419a927879e22cf" prot="public" static="no">
        <name>PyBUF_FORMAT</name>
        <initializer>0x0004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="53" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a114c8c1fa379eaa820e4bec834e687ff" prot="public" static="no">
        <name>PyBUF_ND</name>
        <initializer>0x0008</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="54" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1ae8025f91cf2b9fef985381a46198cf25" prot="public" static="no">
        <name>PyBUF_STRIDES</name>
        <initializer>(0x0010 | PyBUF_ND)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="55" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a5925988be85b809111189d82f9db7f18" prot="public" static="no">
        <name>PyBUF_C_CONTIGUOUS</name>
        <initializer>(0x0020 | PyBUF_STRIDES)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="56" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a907837985e8a3bc707c66be5a83a88ac" prot="public" static="no">
        <name>PyBUF_F_CONTIGUOUS</name>
        <initializer>(0x0040 | PyBUF_STRIDES)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="57" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1af70e6eaf86795a6477bad8f89f5781fd" prot="public" static="no">
        <name>PyBUF_ANY_CONTIGUOUS</name>
        <initializer>(0x0080 | PyBUF_STRIDES)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="58" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a032e746e03b1a5844382dfc442ec3f54" prot="public" static="no">
        <name>PyBUF_INDIRECT</name>
        <initializer>(0x0100 | PyBUF_STRIDES)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="59" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a6d210a7909f538f9caa7ceeca1616d5c" prot="public" static="no">
        <name>__Pyx_BUILTIN_MODULE_NAME</name>
        <initializer>&quot;__builtin__&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="63" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a2fe0e378e6dc845c1108aba296d1bb7c" prot="public" static="no">
        <name>Py_TPFLAGS_HAVE_NEWBUFFER</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="72" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1af470e450bd3168f92fb8c990fe92b2d4" prot="public" static="no">
        <name>__Pyx_PyNumber_Divide</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>PyNumber_Divide(x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="93" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1ac8d439c9e6572bcc726f0714112ac627" prot="public" static="no">
        <name>PyBytes_Type</name>
        <initializer>PyString_Type</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="94" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1ad16f14718feefaa629b3b7601ac9fdeb" prot="public" static="no">
        <name>__stdcall</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="101" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a238347d7669f8f1e9c83bfe63a2730c4" prot="public" static="no">
        <name>__cdecl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="104" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a1d606e5c51fb29814027e012057397bc" prot="public" static="no">
        <name>__fastcall</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="107" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1ae7a96ab3a24d880fae08175efdb7b5a5" prot="public" static="no">
        <name>__Pyx_GetAttrString</name>
        <param><defname>o</defname></param>
        <param><defname>n</defname></param>
        <initializer>PyObject_GetAttrString((o),((char *)(n)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="113" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1aab8fc2633f02b32e377eda1afb1c7c99" prot="public" static="no">
        <name>__Pyx_SetAttrString</name>
        <param><defname>o</defname></param>
        <param><defname>n</defname></param>
        <param><defname>a</defname></param>
        <initializer>PyObject_SetAttrString((o),((char *)(n)),(a))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="114" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1ac9d490bff75d25d9c73ce6a3fe3dcff1" prot="public" static="no">
        <name>__Pyx_DelAttrString</name>
        <param><defname>o</defname></param>
        <param><defname>n</defname></param>
        <initializer>PyObject_DelAttrString((o),((char *)(n)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="115" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1ab14c5934ccdb763f3891c05c540f89b4" prot="public" static="no">
        <name>__Pyx_NAMESTR</name>
        <param><defname>n</defname></param>
        <initializer>((char *)(n))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="122" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a7a94eb3ea2426bf418e5507c627801a3" prot="public" static="no">
        <name>__Pyx_DOCSTR</name>
        <param><defname>n</defname></param>
        <initializer>((char *)(n))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="123" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a1f8c53f8bf2de248911af7d6094febf1" prot="public" static="no">
        <name>__PYX_EXTERN_C</name>
        <initializer>extern</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="131" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a8c716bd591139fadc40524b1790b4b5b" prot="public" static="no">
        <name>__PYX_HAVE_API__svector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="134" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a66dd2f80821f31e6358f453f1e6f5021" prot="public" static="no">
        <name>__PYX_USE_C99_COMPLEX</name>
        <initializer>defined(_Complex_I)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="141" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a2eb6f9e0395b47b8d5e3eeae4fe0c116" prot="public" static="no">
        <name>INLINE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="149" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a641cf235f00c3ac2d5c0a500b30d89e8" prot="public" static="no">
        <name>__Pyx_PyBytes_FromString</name>
        <initializer>PyString_FromString</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="162" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a024864d65adfe96f430d5677267836c7" prot="public" static="no">
        <name>__Pyx_PyBytes_FromStringAndSize</name>
        <initializer>PyString_FromStringAndSize</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="163" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1aa45840a16e4bc4919e465034bb3a99e4" prot="public" static="no">
        <name>__Pyx_PyBytes_AsString</name>
        <initializer>PyString_AsString</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="164" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1acb89f211642b56ab9f4b8173eb9b16ff" prot="public" static="no">
        <name>__Pyx_PyBool_FromLong</name>
        <param><defname>b</defname></param>
        <initializer>((b) ? (Py_INCREF(Py_True), Py_True) : (Py_INCREF(Py_False), Py_False))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="171" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1ac715b2f74550bcf2810f56a5dde24514" prot="public" static="no">
        <name>T_PYSSIZET</name>
        <initializer>T_INT</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="177" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a0b54e60593ef980db1a66d6a44135be8" prot="public" static="no">
        <name>T_SIZET</name>
        <initializer>((sizeof(size_t) == sizeof(unsigned int))  ? T_UINT  : \
        ((sizeof(size_t) == sizeof(unsigned long)) ? T_ULONG : -1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="194" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a3d430f342b05b292adc4633cbacd6978" prot="public" static="no">
        <name>__pyx_PyFloat_AsDouble</name>
        <param><defname>x</defname></param>
        <initializer>(PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="207" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a217a0bd562b98ae8c2ffce44935351e1" prot="public" static="no">
        <name>likely</name>
        <param><defname>x</defname></param>
        <initializer>(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="220" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1ac6c45889010c1bd68631771b64f18101" prot="public" static="no">
        <name>unlikely</name>
        <param><defname>x</defname></param>
        <initializer>(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="221" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1aedd61f3c020c90455ce2f76642fb66c6" prot="public" static="no">
        <name>__Pyx_INCREF</name>
        <param><defname>r</defname></param>
        <initializer>Py_INCREF(r)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="253" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1ae01d1868743d3cfc51a7496e2210f754" prot="public" static="no">
        <name>__Pyx_DECREF</name>
        <param><defname>r</defname></param>
        <initializer>Py_DECREF(r)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="254" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1ac973f5dccc812963f246a70758f82404" prot="public" static="no">
        <name>__Pyx_GOTREF</name>
        <param><defname>r</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="255" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a71a6952a87b9c660b79639cb88896cd1" prot="public" static="no">
        <name>__Pyx_GIVEREF</name>
        <param><defname>r</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="256" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a74d4e5a0d7f19394da74e190754e19df" prot="public" static="no">
        <name>__Pyx_XDECREF</name>
        <param><defname>r</defname></param>
        <initializer>Py_XDECREF(r)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="257" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a538d0157b78201f5bf2bdfc44f63e16d" prot="public" static="no">
        <name>__Pyx_SetupRefcountContext</name>
        <param><defname>name</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="258" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a6f537869f92a9d5944f0ffa28bec5785" prot="public" static="no">
        <name>__Pyx_FinishRefcountContext</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="259" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1aab945eaa16141aab67c030d29114c9f0" prot="public" static="no">
        <name>__Pyx_XGIVEREF</name>
        <param><defname>r</defname></param>
        <initializer>if((r) == NULL) ; else __Pyx_GIVEREF(r)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="261" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1ad5916c8120b465121a4afb2ff3edc378" prot="public" static="no">
        <name>__Pyx_XGOTREF</name>
        <param><defname>r</defname></param>
        <initializer>if((r) == NULL) ; else __Pyx_GOTREF(r)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="262" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1ab3eb57b7eb81aa1c99a7d8ffa72b3f9c" prot="public" static="no">
        <name>__Pyx_GetItemInt_List</name>
        <param><defname>o</defname></param>
        <param><defname>i</defname></param>
        <param><defname>size</defname></param>
        <param><defname>to_py_func</defname></param>
        <initializer>((size &lt;= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_List_Fast(o, i, size &lt;= sizeof(long)) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="287" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a594bef60c9b22e42a2f19fb63c1d1075" prot="public" static="no">
        <name>__Pyx_GetItemInt_Tuple</name>
        <param><defname>o</defname></param>
        <param><defname>i</defname></param>
        <param><defname>size</defname></param>
        <param><defname>to_py_func</defname></param>
        <initializer>((size &lt;= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_Tuple_Fast(o, i, size &lt;= sizeof(long)) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="307" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1ae3e60aa2771f5fd832650e0184617a4e" prot="public" static="no">
        <name>__Pyx_GetItemInt</name>
        <param><defname>o</defname></param>
        <param><defname>i</defname></param>
        <param><defname>size</defname></param>
        <param><defname>to_py_func</defname></param>
        <initializer>((size &lt;= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_Fast(o, i, size &lt;= sizeof(long)) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="328" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="svector_8cpp_1a4f83958854e234a5ac159e757e0469bd" prot="public" static="no">
        <name>__Pyx_MODULE_NAME</name>
        <initializer>&quot;svector&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="487" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="487" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="svector_8cpp_1a47424a8953c340f500027db7e6c00173" prot="public" static="no">
        <type>int</type>
        <definition>typedef int Py_ssize_t</definition>
        <argsstring></argsstring>
        <name>Py_ssize_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="20" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="svector_8cpp_1a6430008cd45ba9e72a8c46b3175946d7" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int __pyx_skip_dispatch</definition>
        <argsstring></argsstring>
        <name>__pyx_skip_dispatch</name>
        <initializer> 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="156" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1ace38fc91c76cc8ca1c3930f673241890" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_m</definition>
        <argsstring></argsstring>
        <name>__pyx_m</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="224" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a2fffb3a1bc7d4402ecbf70f5312ad414" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_b</definition>
        <argsstring></argsstring>
        <name>__pyx_b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="225" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a8e48da940a2f3a3fde1fb14b0f32aee7" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_empty_tuple</definition>
        <argsstring></argsstring>
        <name>__pyx_empty_tuple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="226" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a26433d0830765240c6d81bf63d01ef7d" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int __pyx_lineno</definition>
        <argsstring></argsstring>
        <name>__pyx_lineno</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="227" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a8d52fcb929016dded4b9dedd5be7391d" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int __pyx_clineno</definition>
        <argsstring></argsstring>
        <name>__pyx_clineno</name>
        <initializer> 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="228" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1abe76330ea9df376455e947dc21237806" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __pyx_cfilenm</definition>
        <argsstring></argsstring>
        <name>__pyx_cfilenm</name>
        <initializer> __FILE__</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="229" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a588d62667dde4fa319680036833d9ade" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __pyx_filename</definition>
        <argsstring></argsstring>
        <name>__pyx_filename</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="230" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a601b483514e5dc73f226f48f9f4f6532" prot="public" static="yes" mutable="no">
        <type>const char **</type>
        <definition>const char** __pyx_f</definition>
        <argsstring></argsstring>
        <name>__pyx_f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="231" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a4551bd0f36cd0a17b20d77833b4988f8" prot="public" static="yes" mutable="no">
        <type>PyTypeObject *</type>
        <definition>PyTypeObject* __pyx_ptype_7svector_Vector</definition>
        <argsstring></argsstring>
        <name>__pyx_ptype_7svector_Vector</name>
        <initializer> 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="482" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="482" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a07139933df5077a08f8bfd9c4c3e799e" prot="public" static="yes" mutable="no">
        <type>PyTypeObject *</type>
        <definition>PyTypeObject* __pyx_ptype_7svector_KeyIterator</definition>
        <argsstring></argsstring>
        <name>__pyx_ptype_7svector_KeyIterator</name>
        <initializer> 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="483" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="483" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a9dd5bacdf452239cac9908b21053b37c" prot="public" static="yes" mutable="no">
        <type>PyTypeObject *</type>
        <definition>PyTypeObject* __pyx_ptype_7svector_ValueIterator</definition>
        <argsstring></argsstring>
        <name>__pyx_ptype_7svector_ValueIterator</name>
        <initializer> 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="484" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="484" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1ab77c225a8f06af8bb1bd7877ac21756b" prot="public" static="yes" mutable="no">
        <type>PyTypeObject *</type>
        <definition>PyTypeObject* __pyx_ptype_7svector_KeyValueIterator</definition>
        <argsstring></argsstring>
        <name>__pyx_ptype_7svector_KeyValueIterator</name>
        <initializer> 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="485" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="485" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a8626574cd79137147448936a99bed8f3" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int __pyx_module_is_main_svector</definition>
        <argsstring></argsstring>
        <name>__pyx_module_is_main_svector</name>
        <initializer> 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="488" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="488" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a86268c6702cc89be7b1275997a69a71a" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k___main__[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k___main__</name>
        <initializer> &quot;__main__&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="491" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="491" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a59fc972608c9242807533f481f30de0f" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp___main__</definition>
        <argsstring></argsstring>
        <name>__pyx_kp___main__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="492" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="492" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a672f106755b1ac8c991ebf1244a88c57" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k___cinit__[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k___cinit__</name>
        <initializer> &quot;__cinit__&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="493" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a7d9296d33b8f284c8ff2ca24b407be7b" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp___cinit__</definition>
        <argsstring></argsstring>
        <name>__pyx_kp___cinit__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="494" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1aa0b2ff487966f2dc75cbff92f5910e76" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k___dealloc__[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k___dealloc__</name>
        <initializer> &quot;__dealloc__&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="495" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a08a64930e80d7abafc8060e328575ff4" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp___dealloc__</definition>
        <argsstring></argsstring>
        <name>__pyx_kp___dealloc__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="496" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="496" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1acfee1c54cc3202fb1b753e4a1e6e64a9" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k___iter__[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k___iter__</name>
        <initializer> &quot;__iter__&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="497" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="497" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a45da6db7324f2b60e0803f6e758c3d47" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp___iter__</definition>
        <argsstring></argsstring>
        <name>__pyx_kp___iter__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="498" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a594f8745321b5dc1c42efa78d3a1235f" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k___next__[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k___next__</name>
        <initializer> &quot;__next__&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="499" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a17adfb4647b0887e8184c564d67fac46" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp___next__</definition>
        <argsstring></argsstring>
        <name>__pyx_kp___next__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="500" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="500" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1ac6c00bac41dc711117b992a7b1e48e26" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k___init__[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k___init__</name>
        <initializer> &quot;__init__&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="501" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a6e81feaea1a6346cab4ef1ccf053b030" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp___init__</definition>
        <argsstring></argsstring>
        <name>__pyx_kp___init__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="502" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="502" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1af2aceda110005661563b802561d000bd" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k___copy__[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k___copy__</name>
        <initializer> &quot;__copy__&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="503" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="503" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a110b2077643b02429df8ebf486b716f9" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp___copy__</definition>
        <argsstring></argsstring>
        <name>__pyx_kp___copy__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="504" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="504" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a2dffe323f9b292fd05b09aa82e4132e9" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k___str__[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k___str__</name>
        <initializer> &quot;__str__&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="505" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="505" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a2e2c214fdebc3ea840ae497714a35595" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp___str__</definition>
        <argsstring></argsstring>
        <name>__pyx_kp___str__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="506" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="506" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1acdd6fda06e579e444993f862323f3b61" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k___reduce__[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k___reduce__</name>
        <initializer> &quot;__reduce__&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="507" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="507" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a6b6c7aff1747de088d08a89737376c79" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp___reduce__</definition>
        <argsstring></argsstring>
        <name>__pyx_kp___reduce__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="508" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="508" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1ad37c266b0199c30dfd511068dad19df1" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k___len__[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k___len__</name>
        <initializer> &quot;__len__&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="509" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="509" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1afa5680e8f54c692ac85854d1f3ac173a" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp___len__</definition>
        <argsstring></argsstring>
        <name>__pyx_kp___len__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="510" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="510" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1ad07155b7007ed2379c53fdafd3adf6c0" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k___setitem__[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k___setitem__</name>
        <initializer> &quot;__setitem__&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="511" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="511" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1abd12cc17265ff223b3c5efd7fa95da99" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp___setitem__</definition>
        <argsstring></argsstring>
        <name>__pyx_kp___setitem__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="512" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="512" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a98645ebfce3e627c6d4d1f5b7ac19bb0" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k___getitem__[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k___getitem__</name>
        <initializer> &quot;__getitem__&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="513" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a90d831bb9442cdf810868ba20f469619" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp___getitem__</definition>
        <argsstring></argsstring>
        <name>__pyx_kp___getitem__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="514" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="514" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a5c2e0efb0b9dd289ce0fa7a371634b40" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k___delitem__[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k___delitem__</name>
        <initializer> &quot;__delitem__&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="515" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="515" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a2301ca454e6692a92990cbb721ea1637" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp___delitem__</definition>
        <argsstring></argsstring>
        <name>__pyx_kp___delitem__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="516" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="516" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1acc1fd949a8a256252e1789f20dd928bb" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k_iterkeys[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k_iterkeys</name>
        <initializer> &quot;iterkeys&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="517" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="517" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a4700f338eb8703d558ccfa1823ed8500" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp_iterkeys</definition>
        <argsstring></argsstring>
        <name>__pyx_kp_iterkeys</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="518" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="518" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a584b0b3035ad1c8c9e3e75e0ea6b1fe4" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k_itervalues[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k_itervalues</name>
        <initializer> &quot;itervalues&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="519" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="519" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a8d113769d9cae9512d0ba3d95d3134b3" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp_itervalues</definition>
        <argsstring></argsstring>
        <name>__pyx_kp_itervalues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="520" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="520" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a7432eba162709c2f4907a4a38ce72a40" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k_iteritems[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k_iteritems</name>
        <initializer> &quot;iteritems&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="521" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="521" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a860f3094d6a24fcf0a1b881a98294e3d" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp_iteritems</definition>
        <argsstring></argsstring>
        <name>__pyx_kp_iteritems</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="522" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="522" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a1dfbb52daed92785be1968c3298bd087" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k___contains__[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k___contains__</name>
        <initializer> &quot;__contains__&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="523" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="523" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1ac1d851d1dc56376fbb95810bf540c706" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp___contains__</definition>
        <argsstring></argsstring>
        <name>__pyx_kp___contains__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="524" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="524" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a4032638e6b89349024701a1d3ffe053d" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k___iadd__[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k___iadd__</name>
        <initializer> &quot;__iadd__&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="525" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="525" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a85955a0f7a01db00a568da30b7a8c447" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp___iadd__</definition>
        <argsstring></argsstring>
        <name>__pyx_kp___iadd__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="526" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="526" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a6a10e2e4cf02b3e208d5ec3a28519ee1" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k___isub__[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k___isub__</name>
        <initializer> &quot;__isub__&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="527" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="527" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a1e61898c1db3b13a4836b06df0eaf661" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp___isub__</definition>
        <argsstring></argsstring>
        <name>__pyx_kp___isub__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="528" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="528" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a1ad5db5ba892d0c143fbe3c988a0774e" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k___imul__[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k___imul__</name>
        <initializer> &quot;__imul__&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="529" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="529" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a1228034bc0e97062046eb6a574b19b5c" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp___imul__</definition>
        <argsstring></argsstring>
        <name>__pyx_kp___imul__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="530" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="530" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1ac85a679c9c44fb3c702b84563fd22af9" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k___idiv__[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k___idiv__</name>
        <initializer> &quot;__idiv__&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="531" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="531" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1af525e3dd4e98d2f4373d9fe84a324961" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp___idiv__</definition>
        <argsstring></argsstring>
        <name>__pyx_kp___idiv__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="532" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="532" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1afc004aa1c314f298fa401dad68fd5d74" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k___add__[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k___add__</name>
        <initializer> &quot;__add__&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="533" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="533" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a16d931b51f9ba39c8539142c1554e535" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp___add__</definition>
        <argsstring></argsstring>
        <name>__pyx_kp___add__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="534" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="534" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a36aaffea51bb2b7ae14c31afa3f25510" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k___sub__[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k___sub__</name>
        <initializer> &quot;__sub__&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="535" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="535" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a4e21e4acfcd2b701de63cf44365dbb12" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp___sub__</definition>
        <argsstring></argsstring>
        <name>__pyx_kp___sub__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="536" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="536" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1acdb9a11cd572f6f57c70832bd34f6a17" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k___mul__[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k___mul__</name>
        <initializer> &quot;__mul__&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="537" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="537" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a39dddc70481633a4041f9380c30b2ed5" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp___mul__</definition>
        <argsstring></argsstring>
        <name>__pyx_kp___mul__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="538" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="538" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a70f93e3c31a4a8592f7f14b51e4961e9" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k___div__[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k___div__</name>
        <initializer> &quot;__div__&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="539" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="539" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a63adff5abbe9206694cdfedbd76a70f4" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp___div__</definition>
        <argsstring></argsstring>
        <name>__pyx_kp___div__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="540" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="540" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a60cd03fc0d79dcd1fd22ed6332d8797d" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k___neg__[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k___neg__</name>
        <initializer> &quot;__neg__&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="541" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="541" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1acdfbdc1d70dcc20988ff93d1662c9767" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp___neg__</definition>
        <argsstring></argsstring>
        <name>__pyx_kp___neg__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="542" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="542" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1ae67c2910125a3f5e0c9c522bb498fe4c" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k___pos__[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k___pos__</name>
        <initializer> &quot;__pos__&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="543" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="543" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a1dc30307a11d6240e6ff83daf2e6937c" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp___pos__</definition>
        <argsstring></argsstring>
        <name>__pyx_kp___pos__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="544" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="544" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1aedb371cf55ef971ed163c05bb62c596d" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k_dot[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k_dot</name>
        <initializer> &quot;dot&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="545" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="545" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a6f3cceacb27a80868cb69f9fbc11976b" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp_dot</definition>
        <argsstring></argsstring>
        <name>__pyx_kp_dot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="546" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="546" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1aae5c4b82c8face85c0eae7089a687667" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k_norm[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k_norm</name>
        <initializer> &quot;norm&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="547" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="547" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1aeb8a5e7fd1b9b5cd4f38670e3b3230a0" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp_norm</definition>
        <argsstring></argsstring>
        <name>__pyx_kp_norm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="548" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="548" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1ab65f0211008ab6c697194dd449929e7a" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k_v[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k_v</name>
        <initializer> &quot;v&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="549" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="549" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a4b96dc3c377102b637eac32a44907720" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp_v</definition>
        <argsstring></argsstring>
        <name>__pyx_kp_v</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="550" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="550" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a671e647506ced48e478a858dedc1c62f" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k_f[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k_f</name>
        <initializer> &quot;f&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="551" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="551" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a9d04af439e93d0514b1fc6198b9a1f83" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp_f</definition>
        <argsstring></argsstring>
        <name>__pyx_kp_f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="552" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="552" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a28ab151685aa9484d2c1f9eb7b53bdbb" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k_x[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k_x</name>
        <initializer> &quot;x&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="553" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="553" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1aae6d882dcafa0d1406d133ce856ffc7f" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp_x</definition>
        <argsstring></argsstring>
        <name>__pyx_kp_x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="554" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="554" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1af0977ad493e672be750b65a207a07e14" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k_other[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k_other</name>
        <initializer> &quot;other&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="555" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="555" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a61e0e7834ee57295b6fbe6c5fd705647" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp_other</definition>
        <argsstring></argsstring>
        <name>__pyx_kp_other</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="556" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="556" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1abb93b42d8a0ed3e440ebb8f634d79db8" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k_self[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k_self</name>
        <initializer> &quot;self&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="557" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="557" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1aaa6cbcaed65260e19f211d1a058500f5" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp_self</definition>
        <argsstring></argsstring>
        <name>__pyx_kp_self</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="558" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="558" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a4089d7392ee6ce158f5e87f3192dd13a" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k_StopIteration[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k_StopIteration</name>
        <initializer> &quot;StopIteration&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="559" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="559" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a173c918e5df0aa854315b88dbe80e6a7" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp_StopIteration</definition>
        <argsstring></argsstring>
        <name>__pyx_kp_StopIteration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="560" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="560" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a127659b46fa3d84bcd1bdc35f1663421" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char __pyx_k_TypeError[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_k_TypeError</name>
        <initializer> &quot;TypeError&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="561" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="561" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a44d30344f5756d4691fff6a5eb710819" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_kp_TypeError</definition>
        <argsstring></argsstring>
        <name>__pyx_kp_TypeError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="562" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="562" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1addfd0c7d48af85d71c657babe805310e" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_builtin_StopIteration</definition>
        <argsstring></argsstring>
        <name>__pyx_builtin_StopIteration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="563" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="563" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1aa47da7b218b522cb669ef1eafb935466" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* __pyx_builtin_TypeError</definition>
        <argsstring></argsstring>
        <name>__pyx_builtin_TypeError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="564" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="564" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1afd7ae4a7079d654659a7979934561dbd" prot="public" static="yes" mutable="no">
        <type>struct PyMethodDef</type>
        <definition>struct PyMethodDef __pyx_methods_7svector_Vector[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_methods_7svector_Vector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3333" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1af1bb9835f917045a933852609bc66f63" prot="public" static="yes" mutable="no">
        <type>PyNumberMethods</type>
        <definition>PyNumberMethods __pyx_tp_as_number_Vector</definition>
        <argsstring></argsstring>
        <name>__pyx_tp_as_number_Vector</name>
        <initializer> {
  __pyx_pf_7svector_6Vector___add__, 
  __pyx_pf_7svector_6Vector___sub__, 
  __pyx_pf_7svector_6Vector___mul__, 

  __pyx_pf_7svector_6Vector___div__, 

  0, 
  0, 
  0, 
  __pyx_pf_7svector_6Vector___neg__, 
  __pyx_pf_7svector_6Vector___pos__, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 

  0, 

  0, 



  0, 

  0, 

  0, 


  0, 

  __pyx_pf_7svector_6Vector___iadd__, 
  __pyx_pf_7svector_6Vector___isub__, 
  __pyx_pf_7svector_6Vector___imul__, 

  __pyx_pf_7svector_6Vector___idiv__, 

  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 



}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3391" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a6dd335c2b8b9f26ccf47bb77ed13d964" prot="public" static="yes" mutable="no">
        <type>PySequenceMethods</type>
        <definition>PySequenceMethods __pyx_tp_as_sequence_Vector</definition>
        <argsstring></argsstring>
        <name>__pyx_tp_as_sequence_Vector</name>
        <initializer> {
  __pyx_pf_7svector_6Vector___len__, 
  0, 
  0, 
  __pyx_sq_item_7svector_Vector, 
  0, 
  0, 
  0, 
  __pyx_pf_7svector_6Vector___contains__, 
  0, 
  0, 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3404" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1ab2cfc4ca39b628b40f8880492022ea6b" prot="public" static="yes" mutable="no">
        <type>PyMappingMethods</type>
        <definition>PyMappingMethods __pyx_tp_as_mapping_Vector</definition>
        <argsstring></argsstring>
        <name>__pyx_tp_as_mapping_Vector</name>
        <initializer> {
  __pyx_pf_7svector_6Vector___len__, 
  __pyx_pf_7svector_6Vector___getitem__, 
  __pyx_mp_ass_subscript_7svector_Vector, 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3410" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a848dd4e75d621975eed412692a986e01" prot="public" static="yes" mutable="no">
        <type>PyBufferProcs</type>
        <definition>PyBufferProcs __pyx_tp_as_buffer_Vector</definition>
        <argsstring></argsstring>
        <name>__pyx_tp_as_buffer_Vector</name>
        <initializer> {

  0, 


  0, 


  0, 


  0, 







}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3431" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1ad86e08e6366dbb025442cf6343c1d405" prot="public" static="no" mutable="no">
        <type>PyTypeObject</type>
        <definition>PyTypeObject __pyx_type_7svector_Vector</definition>
        <argsstring></argsstring>
        <name>__pyx_type_7svector_Vector</name>
        <initializer> {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR(&quot;svector.Vector&quot;), 
  sizeof(struct <ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref>), 
  0, 
  __pyx_tp_dealloc_7svector_Vector, 
  0, 
  0, 
  0, 
  0, 
  0, 
  &amp;__pyx_tp_as_number_Vector, 
  &amp;__pyx_tp_as_sequence_Vector, 
  &amp;__pyx_tp_as_mapping_Vector, 
  0, 
  0, 
  __pyx_pf_7svector_6Vector___str__, 
  0, 
  0, 
  &amp;__pyx_tp_as_buffer_Vector, 
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, 
  0, 
  0, 
  0, 
  0, 
  0, 
  __pyx_pf_7svector_6Vector___iter__, 
  0, 
  __pyx_methods_7svector_Vector, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  __pyx_pf_7svector_6Vector___init__, 
  0, 
  __pyx_tp_new_7svector_Vector, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3479" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3433" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1af8215cc1a430764cd39109e2bee521cb" prot="public" static="yes" mutable="no">
        <type>struct PyMethodDef</type>
        <definition>struct PyMethodDef __pyx_methods_7svector_KeyIterator[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_methods_7svector_KeyIterator</name>
        <initializer> {
  {__Pyx_NAMESTR(&quot;__iter__&quot;), (PyCFunction)__pyx_pf_7svector_11KeyIterator___iter__, METH_NOARGS|METH_COEXIST, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR(&quot;__next__&quot;), (PyCFunction)__pyx_pf_7svector_11KeyIterator___next__, METH_NOARGS|METH_COEXIST, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3530" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3526" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a93a86d7400696e4cf34f6445b78cfec7" prot="public" static="yes" mutable="no">
        <type>PyNumberMethods</type>
        <definition>PyNumberMethods __pyx_tp_as_number_KeyIterator</definition>
        <argsstring></argsstring>
        <name>__pyx_tp_as_number_KeyIterator</name>
        <initializer> {
  0, 
  0, 
  0, 

  0, 

  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 

  0, 

  0, 



  0, 

  0, 

  0, 


  0, 

  0, 
  0, 
  0, 

  0, 

  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 



}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3588" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3532" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1ac2842816d2722f37db116a99f06f0f99" prot="public" static="yes" mutable="no">
        <type>PySequenceMethods</type>
        <definition>PySequenceMethods __pyx_tp_as_sequence_KeyIterator</definition>
        <argsstring></argsstring>
        <name>__pyx_tp_as_sequence_KeyIterator</name>
        <initializer> {
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3601" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3590" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1aa595e79b6883498349ecb86423d97966" prot="public" static="yes" mutable="no">
        <type>PyMappingMethods</type>
        <definition>PyMappingMethods __pyx_tp_as_mapping_KeyIterator</definition>
        <argsstring></argsstring>
        <name>__pyx_tp_as_mapping_KeyIterator</name>
        <initializer> {
  0, 
  0, 
  0, 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3607" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3603" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a75b2bc645e7b97939df2ca206381516d" prot="public" static="yes" mutable="no">
        <type>PyBufferProcs</type>
        <definition>PyBufferProcs __pyx_tp_as_buffer_KeyIterator</definition>
        <argsstring></argsstring>
        <name>__pyx_tp_as_buffer_KeyIterator</name>
        <initializer> {

  0, 


  0, 


  0, 


  0, 







}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3628" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3609" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a9a08db018a2bd3de1934c67dadc03a2a" prot="public" static="no" mutable="no">
        <type>PyTypeObject</type>
        <definition>PyTypeObject __pyx_type_7svector_KeyIterator</definition>
        <argsstring></argsstring>
        <name>__pyx_type_7svector_KeyIterator</name>
        <initializer> {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR(&quot;svector.KeyIterator&quot;), 
  sizeof(struct <ref refid="struct____pyx__obj__7svector__KeyIterator" kindref="compound">__pyx_obj_7svector_KeyIterator</ref>), 
  0, 
  __pyx_tp_dealloc_7svector_KeyIterator, 
  0, 
  0, 
  0, 
  0, 
  0, 
  &amp;__pyx_tp_as_number_KeyIterator, 
  &amp;__pyx_tp_as_sequence_KeyIterator, 
  &amp;__pyx_tp_as_mapping_KeyIterator, 
  0, 
  0, 
  0, 
  0, 
  0, 
  &amp;__pyx_tp_as_buffer_KeyIterator, 
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, 
  0, 
  __pyx_tp_traverse_7svector_KeyIterator, 
  __pyx_tp_clear_7svector_KeyIterator, 
  0, 
  0, 
  __pyx_pf_7svector_11KeyIterator___iter__, 
  __pyx_pf_7svector_11KeyIterator___next__, 
  __pyx_methods_7svector_KeyIterator, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  __pyx_tp_new_7svector_KeyIterator, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3676" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3630" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a60ac27bb8d1cb3a2954da271e65ca877" prot="public" static="yes" mutable="no">
        <type>struct PyMethodDef</type>
        <definition>struct PyMethodDef __pyx_methods_7svector_ValueIterator[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_methods_7svector_ValueIterator</name>
        <initializer> {
  {__Pyx_NAMESTR(&quot;__iter__&quot;), (PyCFunction)__pyx_pf_7svector_13ValueIterator___iter__, METH_NOARGS|METH_COEXIST, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR(&quot;__next__&quot;), (PyCFunction)__pyx_pf_7svector_13ValueIterator___next__, METH_NOARGS|METH_COEXIST, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3727" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3723" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1ab486b91ebd27043f65770bea3fef6c38" prot="public" static="yes" mutable="no">
        <type>PyNumberMethods</type>
        <definition>PyNumberMethods __pyx_tp_as_number_ValueIterator</definition>
        <argsstring></argsstring>
        <name>__pyx_tp_as_number_ValueIterator</name>
        <initializer> {
  0, 
  0, 
  0, 

  0, 

  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 

  0, 

  0, 



  0, 

  0, 

  0, 


  0, 

  0, 
  0, 
  0, 

  0, 

  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 



}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3785" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3729" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a9296bc28795a3fed92c6071808cf5c17" prot="public" static="yes" mutable="no">
        <type>PySequenceMethods</type>
        <definition>PySequenceMethods __pyx_tp_as_sequence_ValueIterator</definition>
        <argsstring></argsstring>
        <name>__pyx_tp_as_sequence_ValueIterator</name>
        <initializer> {
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3798" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3787" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1ae6e13427c6de74ece1c88cf16efe9d7e" prot="public" static="yes" mutable="no">
        <type>PyMappingMethods</type>
        <definition>PyMappingMethods __pyx_tp_as_mapping_ValueIterator</definition>
        <argsstring></argsstring>
        <name>__pyx_tp_as_mapping_ValueIterator</name>
        <initializer> {
  0, 
  0, 
  0, 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3804" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3800" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a2ae51e12d5f8d8fc28f23857f8af410d" prot="public" static="yes" mutable="no">
        <type>PyBufferProcs</type>
        <definition>PyBufferProcs __pyx_tp_as_buffer_ValueIterator</definition>
        <argsstring></argsstring>
        <name>__pyx_tp_as_buffer_ValueIterator</name>
        <initializer> {

  0, 


  0, 


  0, 


  0, 







}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3825" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3806" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a414e4e1195cb1ebeeb655b5f58f6dfe7" prot="public" static="no" mutable="no">
        <type>PyTypeObject</type>
        <definition>PyTypeObject __pyx_type_7svector_ValueIterator</definition>
        <argsstring></argsstring>
        <name>__pyx_type_7svector_ValueIterator</name>
        <initializer> {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR(&quot;svector.ValueIterator&quot;), 
  sizeof(struct <ref refid="struct____pyx__obj__7svector__ValueIterator" kindref="compound">__pyx_obj_7svector_ValueIterator</ref>), 
  0, 
  __pyx_tp_dealloc_7svector_ValueIterator, 
  0, 
  0, 
  0, 
  0, 
  0, 
  &amp;__pyx_tp_as_number_ValueIterator, 
  &amp;__pyx_tp_as_sequence_ValueIterator, 
  &amp;__pyx_tp_as_mapping_ValueIterator, 
  0, 
  0, 
  0, 
  0, 
  0, 
  &amp;__pyx_tp_as_buffer_ValueIterator, 
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, 
  0, 
  __pyx_tp_traverse_7svector_ValueIterator, 
  __pyx_tp_clear_7svector_ValueIterator, 
  0, 
  0, 
  __pyx_pf_7svector_13ValueIterator___iter__, 
  __pyx_pf_7svector_13ValueIterator___next__, 
  __pyx_methods_7svector_ValueIterator, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  __pyx_tp_new_7svector_ValueIterator, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3873" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3827" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a8b7fdd1dff9d81e1d7b5003a2d8e86bb" prot="public" static="yes" mutable="no">
        <type>struct PyMethodDef</type>
        <definition>struct PyMethodDef __pyx_methods_7svector_KeyValueIterator[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_methods_7svector_KeyValueIterator</name>
        <initializer> {
  {__Pyx_NAMESTR(&quot;__iter__&quot;), (PyCFunction)__pyx_pf_7svector_16KeyValueIterator___iter__, METH_NOARGS|METH_COEXIST, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR(&quot;__next__&quot;), (PyCFunction)__pyx_pf_7svector_16KeyValueIterator___next__, METH_NOARGS|METH_COEXIST, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3924" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3920" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a131ea896ef9f00263c434bd8241877cc" prot="public" static="yes" mutable="no">
        <type>PyNumberMethods</type>
        <definition>PyNumberMethods __pyx_tp_as_number_KeyValueIterator</definition>
        <argsstring></argsstring>
        <name>__pyx_tp_as_number_KeyValueIterator</name>
        <initializer> {
  0, 
  0, 
  0, 

  0, 

  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 

  0, 

  0, 



  0, 

  0, 

  0, 


  0, 

  0, 
  0, 
  0, 

  0, 

  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 



}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3982" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3926" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a787fdce65d3127bcd1cc53f5c4ee3df6" prot="public" static="yes" mutable="no">
        <type>PySequenceMethods</type>
        <definition>PySequenceMethods __pyx_tp_as_sequence_KeyValueIterator</definition>
        <argsstring></argsstring>
        <name>__pyx_tp_as_sequence_KeyValueIterator</name>
        <initializer> {
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3995" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3984" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1abd8487216f520c73732b28256bd51c94" prot="public" static="yes" mutable="no">
        <type>PyMappingMethods</type>
        <definition>PyMappingMethods __pyx_tp_as_mapping_KeyValueIterator</definition>
        <argsstring></argsstring>
        <name>__pyx_tp_as_mapping_KeyValueIterator</name>
        <initializer> {
  0, 
  0, 
  0, 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="4001" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3997" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1ae8d74d644f6240bb606d05f1c2d7731c" prot="public" static="yes" mutable="no">
        <type>PyBufferProcs</type>
        <definition>PyBufferProcs __pyx_tp_as_buffer_KeyValueIterator</definition>
        <argsstring></argsstring>
        <name>__pyx_tp_as_buffer_KeyValueIterator</name>
        <initializer> {

  0, 


  0, 


  0, 


  0, 







}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="4022" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4003" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a9b6747e41dced1cd4f81c17c8c1d695b" prot="public" static="no" mutable="no">
        <type>PyTypeObject</type>
        <definition>PyTypeObject __pyx_type_7svector_KeyValueIterator</definition>
        <argsstring></argsstring>
        <name>__pyx_type_7svector_KeyValueIterator</name>
        <initializer> {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR(&quot;svector.KeyValueIterator&quot;), 
  sizeof(struct <ref refid="struct____pyx__obj__7svector__KeyValueIterator" kindref="compound">__pyx_obj_7svector_KeyValueIterator</ref>), 
  0, 
  __pyx_tp_dealloc_7svector_KeyValueIterator, 
  0, 
  0, 
  0, 
  0, 
  0, 
  &amp;__pyx_tp_as_number_KeyValueIterator, 
  &amp;__pyx_tp_as_sequence_KeyValueIterator, 
  &amp;__pyx_tp_as_mapping_KeyValueIterator, 
  0, 
  0, 
  0, 
  0, 
  0, 
  &amp;__pyx_tp_as_buffer_KeyValueIterator, 
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, 
  0, 
  __pyx_tp_traverse_7svector_KeyValueIterator, 
  __pyx_tp_clear_7svector_KeyValueIterator, 
  0, 
  0, 
  __pyx_pf_7svector_16KeyValueIterator___iter__, 
  __pyx_pf_7svector_16KeyValueIterator___next__, 
  __pyx_methods_7svector_KeyValueIterator, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  __pyx_tp_new_7svector_KeyValueIterator, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
  0, 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="4070" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4024" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1aea3739c45628ce08490b76c223c85b94" prot="public" static="yes" mutable="no">
        <type>struct PyMethodDef</type>
        <definition>struct PyMethodDef __pyx_methods[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_methods</name>
        <initializer> {
  {0, 0, 0, 0}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="4074" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4072" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1ac14592ff36d34e9d36e7f33484e6d8e4" prot="public" static="yes" mutable="no">
        <type><ref refid="struct____Pyx__StringTabEntry" kindref="compound">__Pyx_StringTabEntry</ref></type>
        <definition>__Pyx_StringTabEntry __pyx_string_tab[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_string_tab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="4130" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4092" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="svector_8cpp_1a13890cc033c78b3129dcba498e219368" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* __pyx_filenames[]</definition>
        <argsstring>[]</argsstring>
        <name>__pyx_filenames</name>
        <initializer> {
  &quot;svector.pyx&quot;,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="4234" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4232" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="svector_8cpp_1a083b912398a91648f985575924d44f84" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE int</type>
        <definition>static INLINE int __Pyx_PyObject_IsTrue</definition>
        <argsstring>(PyObject *)</argsstring>
        <name>__Pyx_PyObject_IsTrue</name>
        <param>
          <type>PyObject *</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="172" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4979" bodyend="4983"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a376fbafd49976c1c9dc7eb6d8c4843c8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE PyObject *</type>
        <definition>static INLINE PyObject * __Pyx_PyNumber_Int</definition>
        <argsstring>(PyObject *x)</argsstring>
        <name>__Pyx_PyNumber_Int</name>
        <param>
          <type>PyObject *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="173" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4985" bodyend="5029"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a16c066036420981cec26598dc86324cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE Py_ssize_t</type>
        <definition>static INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t</definition>
        <argsstring>(PyObject *)</argsstring>
        <name>__Pyx_PyIndex_AsSsize_t</name>
        <param>
          <type>PyObject *</type>
          <defname>b</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="203" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="5031" bodyend="5038"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a6b351a5d54ad8e325939b25299dde3aa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE PyObject *</type>
        <definition>static INLINE PyObject * __Pyx_PyInt_FromSize_t</definition>
        <argsstring>(size_t)</argsstring>
        <name>__Pyx_PyInt_FromSize_t</name>
        <param>
          <type>size_t</type>
          <defname>ival</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="204" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="5040" bodyend="5052"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1aaaca3574f27d267e31e59b09553c5883" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE size_t</type>
        <definition>static INLINE size_t __Pyx_PyInt_AsSize_t</definition>
        <argsstring>(PyObject *)</argsstring>
        <name>__Pyx_PyInt_AsSize_t</name>
        <param>
          <type>PyObject *</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="205" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="5054" bodyend="5064"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1abe02f61e002d0ed66ed40fa889c2471c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void __Pyx_RaiseDoubleKeywordsError</definition>
        <argsstring>(const char *func_name, PyObject *kw_name)</argsstring>
        <name>__Pyx_RaiseDoubleKeywordsError</name>
        <param>
          <type>const char *</type>
          <declname>func_name</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>kw_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="265" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4242" bodyend="4253"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1adb1c59fb42cab5170ede2eea0e86e3d6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void __Pyx_RaiseArgtupleInvalid</definition>
        <argsstring>(const char *func_name, int exact, Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found)</argsstring>
        <name>__Pyx_RaiseArgtupleInvalid</name>
        <param>
          <type>const char *</type>
          <declname>func_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>exact</declname>
        </param>
        <param>
          <type>Py_ssize_t</type>
          <declname>num_min</declname>
        </param>
        <param>
          <type>Py_ssize_t</type>
          <declname>num_max</declname>
        </param>
        <param>
          <type>Py_ssize_t</type>
          <declname>num_found</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="268" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4255" bodyend="4283"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a4ded0c3a7351e0ea60ffa892ff05ee9f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int __Pyx_ParseOptionalKeywords</definition>
        <argsstring>(PyObject *kwds, PyObject **argnames[], PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args, const char *function_name)</argsstring>
        <name>__Pyx_ParseOptionalKeywords</name>
        <param>
          <type>PyObject *</type>
          <declname>kwds</declname>
        </param>
        <param>
          <type>PyObject **</type>
          <declname>argnames</declname>
          <array>[]</array>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>kwds2</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>values</declname>
          <array>[]</array>
        </param>
        <param>
          <type>Py_ssize_t</type>
          <declname>num_pos_args</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="270" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4285" bodyend="4362"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a287874609422c705bef61fff64a781e9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE int</type>
        <definition>static INLINE int __Pyx_CheckKeywordStrings</definition>
        <argsstring>(PyObject *kwdict, const char *function_name, int kw_allowed)</argsstring>
        <name>__Pyx_CheckKeywordStrings</name>
        <param>
          <type>PyObject *</type>
          <declname>kwdict</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>kw_allowed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="273" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4364" bodyend="4396"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a3d03c33d32c0788eebfa2240e145fc10" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE PyObject *</type>
        <definition>static INLINE PyObject* __Pyx_GetItemInt_Generic</definition>
        <argsstring>(PyObject *o, PyObject *j)</argsstring>
        <name>__Pyx_GetItemInt_Generic</name>
        <param>
          <type>PyObject *</type>
          <declname>o</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="276" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="276" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1acbce18eb761025ce0614978da6d05174" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE PyObject *</type>
        <definition>static INLINE PyObject* __Pyx_GetItemInt_List_Fast</definition>
        <argsstring>(PyObject *o, Py_ssize_t i, int fits_long)</argsstring>
        <name>__Pyx_GetItemInt_List_Fast</name>
        <param>
          <type>PyObject *</type>
          <declname>o</declname>
        </param>
        <param>
          <type>Py_ssize_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fits_long</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="289" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="289" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1abb712cc47f3f8553681de166c4fa4e03" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE PyObject *</type>
        <definition>static INLINE PyObject* __Pyx_GetItemInt_Tuple_Fast</definition>
        <argsstring>(PyObject *o, Py_ssize_t i, int fits_long)</argsstring>
        <name>__Pyx_GetItemInt_Tuple_Fast</name>
        <param>
          <type>PyObject *</type>
          <declname>o</declname>
        </param>
        <param>
          <type>Py_ssize_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fits_long</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="309" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="309" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a443dcf69e3e17858e17708b97d5dc220" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE PyObject *</type>
        <definition>static INLINE PyObject* __Pyx_GetItemInt_Fast</definition>
        <argsstring>(PyObject *o, Py_ssize_t i, int fits_long)</argsstring>
        <name>__Pyx_GetItemInt_Fast</name>
        <param>
          <type>PyObject *</type>
          <declname>o</declname>
        </param>
        <param>
          <type>Py_ssize_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fits_long</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="330" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="330" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a8cd07111f3ac945f758870e21e276697" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int __Pyx_TypeTest</definition>
        <argsstring>(PyObject *obj, PyTypeObject *type)</argsstring>
        <name>__Pyx_TypeTest</name>
        <param>
          <type>PyObject *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>PyTypeObject *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="349" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4399" bodyend="4409"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a8d6d8ec8d8879c84cb0a0b6440ab83cf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int __Pyx_ArgTypeTest</definition>
        <argsstring>(PyObject *obj, PyTypeObject *type, int none_allowed, const char *name, int exact)</argsstring>
        <name>__Pyx_ArgTypeTest</name>
        <param>
          <type>PyObject *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>PyTypeObject *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>none_allowed</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>exact</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="352" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4411" bodyend="4429"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1ab1bc6687fb91dc7315118993de055f7d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void __Pyx_CppExn2PyErr</definition>
        <argsstring>()</argsstring>
        <name>__Pyx_CppExn2PyErr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="355" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="355" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a0a2aae92bad63064679831866361e23e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __Pyx_GetName</definition>
        <argsstring>(PyObject *dict, PyObject *name)</argsstring>
        <name>__Pyx_GetName</name>
        <param>
          <type>PyObject *</type>
          <declname>dict</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="374" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4431" bodyend="4437"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a09b7fd303206510931d24510a923f34d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void __Pyx_Raise</definition>
        <argsstring>(PyObject *type, PyObject *value, PyObject *tb)</argsstring>
        <name>__Pyx_Raise</name>
        <param>
          <type>PyObject *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>tb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="376" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4439" bodyend="4501"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1ac774aae3c570c28d4a6a916822d11b2c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE void</type>
        <definition>static INLINE void __Pyx_ErrRestore</definition>
        <argsstring>(PyObject *type, PyObject *value, PyObject *tb)</argsstring>
        <name>__Pyx_ErrRestore</name>
        <param>
          <type>PyObject *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>tb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="378" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4503" bodyend="4533"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1acdd16000a1737a7d051e53e2e09911b6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE void</type>
        <definition>static INLINE void __Pyx_ErrFetch</definition>
        <argsstring>(PyObject **type, PyObject **value, PyObject **tb)</argsstring>
        <name>__Pyx_ErrFetch</name>
        <param>
          <type>PyObject **</type>
          <declname>type</declname>
        </param>
        <param>
          <type>PyObject **</type>
          <declname>value</declname>
        </param>
        <param>
          <type>PyObject **</type>
          <declname>tb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="379" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4535" bodyend="4544"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a4d34006fa6d17b7310b7398487a47013" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE void</type>
        <definition>static INLINE void __Pyx_RaiseNeedMoreValuesError</definition>
        <argsstring>(Py_ssize_t index)</argsstring>
        <name>__Pyx_RaiseNeedMoreValuesError</name>
        <param>
          <type>Py_ssize_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="381" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4547" bodyend="4555"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a9d9c0b1c15fa82f330d0b39db35df751" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE void</type>
        <definition>static INLINE void __Pyx_RaiseTooManyValuesError</definition>
        <argsstring>(void)</argsstring>
        <name>__Pyx_RaiseTooManyValuesError</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="383" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4557" bodyend="4559"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a1b10d99a1e1f174cf7ab8dc1a2cc36dc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __Pyx_UnpackItem</definition>
        <argsstring>(PyObject *, Py_ssize_t index)</argsstring>
        <name>__Pyx_UnpackItem</name>
        <param>
          <type>PyObject *</type>
          <defname>iter</defname>
        </param>
        <param>
          <type>Py_ssize_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="385" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4561" bodyend="4569"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1acf80c1474f6643e51e88cd78824935fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int __Pyx_EndUnpack</definition>
        <argsstring>(PyObject *)</argsstring>
        <name>__Pyx_EndUnpack</name>
        <param>
          <type>PyObject *</type>
          <defname>iter</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="386" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4571" bodyend="4582"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a3cea594d7ad296d5e31c55fff5955780" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE int</type>
        <definition>static INLINE int __Pyx_StrEq</definition>
        <argsstring>(const char *, const char *)</argsstring>
        <name>__Pyx_StrEq</name>
        <param>
          <type>const char *</type>
          <defname>s1</defname>
        </param>
        <param>
          <type>const char *</type>
          <defname>s2</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="388" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4584" bodyend="4587"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1acaa2bd3476bc1469e7c68f9fdfb6b158" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE unsigned char</type>
        <definition>static INLINE unsigned char __Pyx_PyInt_AsUnsignedChar</definition>
        <argsstring>(PyObject *)</argsstring>
        <name>__Pyx_PyInt_AsUnsignedChar</name>
        <param>
          <type>PyObject *</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="390" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4589" bodyend="4607"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a13136aa8d13e25030d733d5915f77233" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE unsigned short</type>
        <definition>static INLINE unsigned short __Pyx_PyInt_AsUnsignedShort</definition>
        <argsstring>(PyObject *)</argsstring>
        <name>__Pyx_PyInt_AsUnsignedShort</name>
        <param>
          <type>PyObject *</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="392" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4609" bodyend="4627"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a05c46145086a4da96f3ff086228749ee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE unsigned int</type>
        <definition>static INLINE unsigned int __Pyx_PyInt_AsUnsignedInt</definition>
        <argsstring>(PyObject *)</argsstring>
        <name>__Pyx_PyInt_AsUnsignedInt</name>
        <param>
          <type>PyObject *</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="394" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4629" bodyend="4647"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a39f02a18f70521641bf7b7427bb241d0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE char</type>
        <definition>static INLINE char __Pyx_PyInt_AsChar</definition>
        <argsstring>(PyObject *)</argsstring>
        <name>__Pyx_PyInt_AsChar</name>
        <param>
          <type>PyObject *</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="396" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4649" bodyend="4662"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a4517bf96e733e340a91843566851ac28" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE short</type>
        <definition>static INLINE short __Pyx_PyInt_AsShort</definition>
        <argsstring>(PyObject *)</argsstring>
        <name>__Pyx_PyInt_AsShort</name>
        <param>
          <type>PyObject *</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="398" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4664" bodyend="4677"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a65a89625585e2ff5a5fd45deac6f8c2f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE int</type>
        <definition>static INLINE int __Pyx_PyInt_AsInt</definition>
        <argsstring>(PyObject *)</argsstring>
        <name>__Pyx_PyInt_AsInt</name>
        <param>
          <type>PyObject *</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="400" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4679" bodyend="4692"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a532417edc4c9dc3b4ab739da0f04e8e8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE signed char</type>
        <definition>static INLINE signed char __Pyx_PyInt_AsSignedChar</definition>
        <argsstring>(PyObject *)</argsstring>
        <name>__Pyx_PyInt_AsSignedChar</name>
        <param>
          <type>PyObject *</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="402" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4694" bodyend="4707"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a4441ab8ea199efdb0a2b3ca30124b59d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE signed short</type>
        <definition>static INLINE signed short __Pyx_PyInt_AsSignedShort</definition>
        <argsstring>(PyObject *)</argsstring>
        <name>__Pyx_PyInt_AsSignedShort</name>
        <param>
          <type>PyObject *</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="404" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4709" bodyend="4722"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a1e7135464b34c4166442f64cecf70012" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE signed int</type>
        <definition>static INLINE signed int __Pyx_PyInt_AsSignedInt</definition>
        <argsstring>(PyObject *)</argsstring>
        <name>__Pyx_PyInt_AsSignedInt</name>
        <param>
          <type>PyObject *</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="406" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4724" bodyend="4737"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a18dfdb58e2d9198390983cbd58686045" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE unsigned long</type>
        <definition>static INLINE unsigned long __Pyx_PyInt_AsUnsignedLong</definition>
        <argsstring>(PyObject *)</argsstring>
        <name>__Pyx_PyInt_AsUnsignedLong</name>
        <param>
          <type>PyObject *</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="408" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4739" bodyend="4766"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a7b2c92f41506bcc463d7ff088c8979a5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE unsigned PY_LONG_LONG</type>
        <definition>static INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong</definition>
        <argsstring>(PyObject *)</argsstring>
        <name>__Pyx_PyInt_AsUnsignedLongLong</name>
        <param>
          <type>PyObject *</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="410" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4768" bodyend="4795"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a12a3ec00aaf86eeec50ff08b65053776" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE long</type>
        <definition>static INLINE long __Pyx_PyInt_AsLong</definition>
        <argsstring>(PyObject *)</argsstring>
        <name>__Pyx_PyInt_AsLong</name>
        <param>
          <type>PyObject *</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="412" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4797" bodyend="4814"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a945605cbcdf405b90b2ec43220dacb34" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE PY_LONG_LONG</type>
        <definition>static INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong</definition>
        <argsstring>(PyObject *)</argsstring>
        <name>__Pyx_PyInt_AsLongLong</name>
        <param>
          <type>PyObject *</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="414" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4816" bodyend="4833"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a2a3b3822a1950a9a2463faa39013303b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE signed long</type>
        <definition>static INLINE signed long __Pyx_PyInt_AsSignedLong</definition>
        <argsstring>(PyObject *)</argsstring>
        <name>__Pyx_PyInt_AsSignedLong</name>
        <param>
          <type>PyObject *</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="416" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4835" bodyend="4852"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a5be3def89a242f219349441db5f7a7ad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE signed PY_LONG_LONG</type>
        <definition>static INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong</definition>
        <argsstring>(PyObject *)</argsstring>
        <name>__Pyx_PyInt_AsSignedLongLong</name>
        <param>
          <type>PyObject *</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="418" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4854" bodyend="4871"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a3dee2789d71611b04aaa4a91a41c8192" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void __Pyx_AddTraceback</definition>
        <argsstring>(const char *funcname)</argsstring>
        <name>__Pyx_AddTraceback</name>
        <param>
          <type>const char *</type>
          <declname>funcname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="420" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4877" bodyend="4949"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1ab493c2b1a0d5da22c472adf680d89e45" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int __Pyx_InitStrings</definition>
        <argsstring>(__Pyx_StringTabEntry *t)</argsstring>
        <name>__Pyx_InitStrings</name>
        <param>
          <type><ref refid="struct____Pyx__StringTabEntry" kindref="compound">__Pyx_StringTabEntry</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="422" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4951" bodyend="4975"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1afd8f39c4b6d878776e4e928c7038bd31" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int __pyx_f_7svector_word_to_index</definition>
        <argsstring>(char *)</argsstring>
        <name>__pyx_f_7svector_word_to_index</name>
        <param>
          <type>char *</type>
          <defname>__pyx_v_s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="486" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="574" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a713fd3284c56ce55e16d9062cf65bb2f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int __pyx_pf_7svector_11KeyIterator___cinit__</definition>
        <argsstring>(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds)</argsstring>
        <name>__pyx_pf_7svector_11KeyIterator___cinit__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_args</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_kwds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="612" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="613" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a270941fcc387f2fe98fb72828c3ded27" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void __pyx_pf_7svector_11KeyIterator___dealloc__</definition>
        <argsstring>(PyObject *__pyx_v_self)</argsstring>
        <name>__pyx_pf_7svector_11KeyIterator___dealloc__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="690" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="691" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1ad9a54474255ece2f790e5d4bb59d5dbb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __pyx_pf_7svector_11KeyIterator___iter__</definition>
        <argsstring>(PyObject *__pyx_v_self)</argsstring>
        <name>__pyx_pf_7svector_11KeyIterator___iter__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="714" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="715" bodyend="736"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a912b225fda9184f5486f4772d0d20439" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __pyx_pf_7svector_11KeyIterator___next__</definition>
        <argsstring>(PyObject *__pyx_v_self)</argsstring>
        <name>__pyx_pf_7svector_11KeyIterator___next__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="746" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="747" bodyend="826"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1ad5c8c546f0a41a281611fcad3572a74d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int __pyx_pf_7svector_13ValueIterator___cinit__</definition>
        <argsstring>(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds)</argsstring>
        <name>__pyx_pf_7svector_13ValueIterator___cinit__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_args</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_kwds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="836" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="837" bodyend="904"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a4f62f8e042faba84ee93a20670ceb41d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void __pyx_pf_7svector_13ValueIterator___dealloc__</definition>
        <argsstring>(PyObject *__pyx_v_self)</argsstring>
        <name>__pyx_pf_7svector_13ValueIterator___dealloc__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="914" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="915" bodyend="928"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1ab2e0aebb72f4a3f78707ba99adba43e5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __pyx_pf_7svector_13ValueIterator___iter__</definition>
        <argsstring>(PyObject *__pyx_v_self)</argsstring>
        <name>__pyx_pf_7svector_13ValueIterator___iter__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="938" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="939" bodyend="960"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1af690e7e2d15e70f60c155be06b204328" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __pyx_pf_7svector_13ValueIterator___next__</definition>
        <argsstring>(PyObject *__pyx_v_self)</argsstring>
        <name>__pyx_pf_7svector_13ValueIterator___next__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="970" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="971" bodyend="1048"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1aefc2483734a7cdba03172384f3bbecc5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int __pyx_pf_7svector_16KeyValueIterator___cinit__</definition>
        <argsstring>(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds)</argsstring>
        <name>__pyx_pf_7svector_16KeyValueIterator___cinit__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_args</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_kwds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="1058" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="1059" bodyend="1126"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a0446f392e1aead034c5aba13f90f508e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void __pyx_pf_7svector_16KeyValueIterator___dealloc__</definition>
        <argsstring>(PyObject *__pyx_v_self)</argsstring>
        <name>__pyx_pf_7svector_16KeyValueIterator___dealloc__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="1136" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="1137" bodyend="1150"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a89a02a54bffe7ca432577caa3fe9cef5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __pyx_pf_7svector_16KeyValueIterator___iter__</definition>
        <argsstring>(PyObject *__pyx_v_self)</argsstring>
        <name>__pyx_pf_7svector_16KeyValueIterator___iter__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="1160" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="1161" bodyend="1182"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a301927632841a88fbfd68599c010d51e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __pyx_pf_7svector_16KeyValueIterator___next__</definition>
        <argsstring>(PyObject *__pyx_v_self)</argsstring>
        <name>__pyx_pf_7svector_16KeyValueIterator___next__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="1192" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="1193" bodyend="1296"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1adc370c1811fabef6e35c211375043675" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int __pyx_pf_7svector_6Vector___init__</definition>
        <argsstring>(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds)</argsstring>
        <name>__pyx_pf_7svector_6Vector___init__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_args</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_kwds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="1306" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="1307" bodyend="1659"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1af65223f39f07f5490a6c046080782902" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void __pyx_pf_7svector_6Vector___dealloc__</definition>
        <argsstring>(PyObject *__pyx_v_self)</argsstring>
        <name>__pyx_pf_7svector_6Vector___dealloc__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="1669" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="1670" bodyend="1683"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a7128abf15adf3b5ae826b98ce0429bc4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __pyx_pf_7svector_6Vector___copy__</definition>
        <argsstring>(PyObject *__pyx_v_self, PyObject *unused)</argsstring>
        <name>__pyx_pf_7svector_6Vector___copy__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>unused</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="1693" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="1694" bodyend="1731"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a389fc0f7dd5c97ca6d4d5506b0992dd4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __pyx_pf_7svector_6Vector___str__</definition>
        <argsstring>(PyObject *__pyx_v_self)</argsstring>
        <name>__pyx_pf_7svector_6Vector___str__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="1741" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="1742" bodyend="1783"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1ac6350c97672d21c3b6260db5fdcf64b7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __pyx_pf_7svector_6Vector___reduce__</definition>
        <argsstring>(PyObject *__pyx_v_self, PyObject *unused)</argsstring>
        <name>__pyx_pf_7svector_6Vector___reduce__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>unused</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="1793" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="1794" bodyend="1850"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a868f1e00a088402265d052ce69ca701d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Py_ssize_t</type>
        <definition>static Py_ssize_t __pyx_pf_7svector_6Vector___len__</definition>
        <argsstring>(PyObject *__pyx_v_self)</argsstring>
        <name>__pyx_pf_7svector_6Vector___len__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="1860" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="1861" bodyend="1879"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1acca6e3b65ade8954b38dbee704b3c29b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int __pyx_pf_7svector_6Vector___setitem__</definition>
        <argsstring>(PyObject *__pyx_v_self, PyObject *__pyx_arg_f, PyObject *__pyx_arg_x)</argsstring>
        <name>__pyx_pf_7svector_6Vector___setitem__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_arg_f</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_arg_x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="1889" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="1890" bodyend="1919"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a991bb2683d4f369f98604ba809d46e93" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __pyx_pf_7svector_6Vector___getitem__</definition>
        <argsstring>(PyObject *__pyx_v_self, PyObject *__pyx_arg_f)</argsstring>
        <name>__pyx_pf_7svector_6Vector___getitem__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_arg_f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="1929" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="1930" bodyend="1968"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1aa2f6155bcc990ebfd03a0fff017bda47" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int __pyx_pf_7svector_6Vector___delitem__</definition>
        <argsstring>(PyObject *__pyx_v_self, PyObject *__pyx_arg_f)</argsstring>
        <name>__pyx_pf_7svector_6Vector___delitem__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_arg_f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="1978" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="1979" bodyend="2004"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a0ca25225c11c60f22a7591053020ae3c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __pyx_pf_7svector_6Vector___iter__</definition>
        <argsstring>(PyObject *__pyx_v_self)</argsstring>
        <name>__pyx_pf_7svector_6Vector___iter__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="2014" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="2015" bodyend="2052"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1af00af947985a7d1143f42a0313a28fc0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __pyx_pf_7svector_6Vector_iterkeys</definition>
        <argsstring>(PyObject *__pyx_v_self, PyObject *unused)</argsstring>
        <name>__pyx_pf_7svector_6Vector_iterkeys</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>unused</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="2062" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="2063" bodyend="2100"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a923c7fff5c827882c2a924e2f05693b3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __pyx_pf_7svector_6Vector_itervalues</definition>
        <argsstring>(PyObject *__pyx_v_self, PyObject *unused)</argsstring>
        <name>__pyx_pf_7svector_6Vector_itervalues</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>unused</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="2110" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="2111" bodyend="2148"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a36d1ad45c755cc5c167855788b91b218" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __pyx_pf_7svector_6Vector_iteritems</definition>
        <argsstring>(PyObject *__pyx_v_self, PyObject *unused)</argsstring>
        <name>__pyx_pf_7svector_6Vector_iteritems</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>unused</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="2158" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="2159" bodyend="2196"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1abb4f035d843f3e539df2e56cdb374d79" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int __pyx_pf_7svector_6Vector___contains__</definition>
        <argsstring>(PyObject *__pyx_v_self, PyObject *__pyx_arg_f)</argsstring>
        <name>__pyx_pf_7svector_6Vector___contains__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_arg_f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="2206" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="2207" bodyend="2234"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1af4c1e440a87c474e6e90d02dfb5d0027" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __pyx_pf_7svector_6Vector___iadd__</definition>
        <argsstring>(PyObject *__pyx_v_self, PyObject *__pyx_v_other)</argsstring>
        <name>__pyx_pf_7svector_6Vector___iadd__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="2244" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="2245" bodyend="2280"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a3ad3755e37d77c3301c06ff8b3f518c3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __pyx_pf_7svector_6Vector___isub__</definition>
        <argsstring>(PyObject *__pyx_v_self, PyObject *__pyx_v_other)</argsstring>
        <name>__pyx_pf_7svector_6Vector___isub__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="2290" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="2291" bodyend="2326"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1acba3e11a2b64062a27ff9e746a176097" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __pyx_pf_7svector_6Vector___imul__</definition>
        <argsstring>(PyObject *__pyx_v_self, PyObject *__pyx_v_other)</argsstring>
        <name>__pyx_pf_7svector_6Vector___imul__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="2336" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="2337" bodyend="2427"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a3fa41527e00d941bf1df4d97498b5340" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __pyx_pf_7svector_6Vector___idiv__</definition>
        <argsstring>(PyObject *__pyx_v_self, PyObject *__pyx_v_other)</argsstring>
        <name>__pyx_pf_7svector_6Vector___idiv__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="2437" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="2438" bodyend="2528"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a7c04e075f3c1973ef9b215322a99a271" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __pyx_pf_7svector_6Vector___add__</definition>
        <argsstring>(PyObject *__pyx_v_self, PyObject *__pyx_v_other)</argsstring>
        <name>__pyx_pf_7svector_6Vector___add__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="2538" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="2539" bodyend="2600"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a98b598764fe50055793bc887dabb6fde" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __pyx_pf_7svector_6Vector___sub__</definition>
        <argsstring>(PyObject *__pyx_v_self, PyObject *__pyx_v_other)</argsstring>
        <name>__pyx_pf_7svector_6Vector___sub__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="2610" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="2611" bodyend="2672"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1ac58e5c4bc008967f3d471c32d0051946" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __pyx_pf_7svector_6Vector___mul__</definition>
        <argsstring>(PyObject *__pyx_v_self, PyObject *__pyx_v_other)</argsstring>
        <name>__pyx_pf_7svector_6Vector___mul__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="2682" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="2683" bodyend="2902"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a309f7ae276d2ee198d29011fe0a6c872" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __pyx_pf_7svector_6Vector___div__</definition>
        <argsstring>(PyObject *__pyx_v_self, PyObject *__pyx_v_other)</argsstring>
        <name>__pyx_pf_7svector_6Vector___div__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="2912" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="2913" bodyend="3063"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a6da5aa76af40dd73304a0d28dcbb3017" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __pyx_pf_7svector_6Vector___neg__</definition>
        <argsstring>(PyObject *__pyx_v_self)</argsstring>
        <name>__pyx_pf_7svector_6Vector___neg__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3073" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3074" bodyend="3133"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a01baeb132d0ea08537ac553f214c00af" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __pyx_pf_7svector_6Vector___pos__</definition>
        <argsstring>(PyObject *__pyx_v_self)</argsstring>
        <name>__pyx_pf_7svector_6Vector___pos__</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3143" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3144" bodyend="3194"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a3d2a0bbbd07e295667345b76199ca264" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __pyx_pf_7svector_6Vector_dot</definition>
        <argsstring>(PyObject *__pyx_v_self, PyObject *__pyx_v_other)</argsstring>
        <name>__pyx_pf_7svector_6Vector_dot</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3204" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3205" bodyend="3235"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a7830b8f6664d2a74dc801917657c18b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject * __pyx_pf_7svector_6Vector_norm</definition>
        <argsstring>(PyObject *__pyx_v_self, PyObject *unused)</argsstring>
        <name>__pyx_pf_7svector_6Vector_norm</name>
        <param>
          <type>PyObject *</type>
          <declname>__pyx_v_self</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>unused</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3245" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3246" bodyend="3274"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a6cdf900045303bf086da670a06f25220" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject* __pyx_tp_new_7svector_Vector</definition>
        <argsstring>(PyTypeObject *t, PyObject *a, PyObject *k)</argsstring>
        <name>__pyx_tp_new_7svector_Vector</name>
        <param>
          <type>PyTypeObject *</type>
          <declname>t</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3276" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3276" bodyend="3280"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a8a634629c4e04bf8156beb8c81bf5697" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void __pyx_tp_dealloc_7svector_Vector</definition>
        <argsstring>(PyObject *o)</argsstring>
        <name>__pyx_tp_dealloc_7svector_Vector</name>
        <param>
          <type>PyObject *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3282" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3282" bodyend="3293"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a7c2a1d8c7452ecd37bb0d881029aeafb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject* __pyx_sq_item_7svector_Vector</definition>
        <argsstring>(PyObject *o, Py_ssize_t i)</argsstring>
        <name>__pyx_sq_item_7svector_Vector</name>
        <param>
          <type>PyObject *</type>
          <declname>o</declname>
        </param>
        <param>
          <type>Py_ssize_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3294" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3294" bodyend="3300"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1ad9e596c10def9afc92621e90e0f84d9f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int __pyx_mp_ass_subscript_7svector_Vector</definition>
        <argsstring>(PyObject *o, PyObject *i, PyObject *v)</argsstring>
        <name>__pyx_mp_ass_subscript_7svector_Vector</name>
        <param>
          <type>PyObject *</type>
          <declname>o</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>i</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3302" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3302" bodyend="3309"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a20cfbe029d7fa945faac43b1d80e3b50" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject* __pyx_tp_new_7svector_KeyIterator</definition>
        <argsstring>(PyTypeObject *t, PyObject *a, PyObject *k)</argsstring>
        <name>__pyx_tp_new_7svector_KeyIterator</name>
        <param>
          <type>PyTypeObject *</type>
          <declname>t</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3481" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3481" bodyend="3491"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a57d902636d112dc0c5a2356a3828e10a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void __pyx_tp_dealloc_7svector_KeyIterator</definition>
        <argsstring>(PyObject *o)</argsstring>
        <name>__pyx_tp_dealloc_7svector_KeyIterator</name>
        <param>
          <type>PyObject *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3493" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3493" bodyend="3506"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a5cf057e17d95fa30dd6814dbfd141d9a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int __pyx_tp_traverse_7svector_KeyIterator</definition>
        <argsstring>(PyObject *o, visitproc v, void *a)</argsstring>
        <name>__pyx_tp_traverse_7svector_KeyIterator</name>
        <param>
          <type>PyObject *</type>
          <declname>o</declname>
        </param>
        <param>
          <type>visitproc</type>
          <declname>v</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3508" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3508" bodyend="3515"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a3802763e850dd0a3f3fb6b196a506058" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int __pyx_tp_clear_7svector_KeyIterator</definition>
        <argsstring>(PyObject *o)</argsstring>
        <name>__pyx_tp_clear_7svector_KeyIterator</name>
        <param>
          <type>PyObject *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3517" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3517" bodyend="3524"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a6e0d17b7e11278424c1a4a39f75113fd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject* __pyx_tp_new_7svector_ValueIterator</definition>
        <argsstring>(PyTypeObject *t, PyObject *a, PyObject *k)</argsstring>
        <name>__pyx_tp_new_7svector_ValueIterator</name>
        <param>
          <type>PyTypeObject *</type>
          <declname>t</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3678" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3678" bodyend="3688"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a7d29cf4bba998bf66fdcbd917b11a8df" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void __pyx_tp_dealloc_7svector_ValueIterator</definition>
        <argsstring>(PyObject *o)</argsstring>
        <name>__pyx_tp_dealloc_7svector_ValueIterator</name>
        <param>
          <type>PyObject *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3690" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3690" bodyend="3703"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a6ffa8ea64f434ededb270cbac23901e1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int __pyx_tp_traverse_7svector_ValueIterator</definition>
        <argsstring>(PyObject *o, visitproc v, void *a)</argsstring>
        <name>__pyx_tp_traverse_7svector_ValueIterator</name>
        <param>
          <type>PyObject *</type>
          <declname>o</declname>
        </param>
        <param>
          <type>visitproc</type>
          <declname>v</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3705" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3705" bodyend="3712"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a659cfd58313424be6a4475b365b5a0b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int __pyx_tp_clear_7svector_ValueIterator</definition>
        <argsstring>(PyObject *o)</argsstring>
        <name>__pyx_tp_clear_7svector_ValueIterator</name>
        <param>
          <type>PyObject *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3714" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3714" bodyend="3721"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a9bddece5a1160aa5a10a8c13cab9a0c3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject* __pyx_tp_new_7svector_KeyValueIterator</definition>
        <argsstring>(PyTypeObject *t, PyObject *a, PyObject *k)</argsstring>
        <name>__pyx_tp_new_7svector_KeyValueIterator</name>
        <param>
          <type>PyTypeObject *</type>
          <declname>t</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3875" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3875" bodyend="3885"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a10c2c6e2a0ac7c88fc28031707435597" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void __pyx_tp_dealloc_7svector_KeyValueIterator</definition>
        <argsstring>(PyObject *o)</argsstring>
        <name>__pyx_tp_dealloc_7svector_KeyValueIterator</name>
        <param>
          <type>PyObject *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3887" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3887" bodyend="3900"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1ac6f49bb2b1950ebe67b69b878c633341" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int __pyx_tp_traverse_7svector_KeyValueIterator</definition>
        <argsstring>(PyObject *o, visitproc v, void *a)</argsstring>
        <name>__pyx_tp_traverse_7svector_KeyValueIterator</name>
        <param>
          <type>PyObject *</type>
          <declname>o</declname>
        </param>
        <param>
          <type>visitproc</type>
          <declname>v</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3902" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3902" bodyend="3909"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1ad22ba4432ac7948581ddf85e4a13f2fc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int __pyx_tp_clear_7svector_KeyValueIterator</definition>
        <argsstring>(PyObject *o)</argsstring>
        <name>__pyx_tp_clear_7svector_KeyValueIterator</name>
        <param>
          <type>PyObject *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="3911" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="3911" bodyend="3918"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a390edba45412c658ea4dbddbc426baf7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void __pyx_init_filenames</definition>
        <argsstring>(void)</argsstring>
        <name>__pyx_init_filenames</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="4076" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4238" bodyend="4240"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1ad8b36b8b7d777c590f343bdffe51c30c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int __Pyx_InitCachedBuiltins</definition>
        <argsstring>(void)</argsstring>
        <name>__Pyx_InitCachedBuiltins</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="4131" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4131" bodyend="4137"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1a661b7f3b078a49c721ae551b20e0183a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int __Pyx_InitGlobals</definition>
        <argsstring>(void)</argsstring>
        <name>__Pyx_InitGlobals</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="4139" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4139" bodyend="4144"/>
      </memberdef>
      <memberdef kind="function" id="svector_8cpp_1aa11610df479ea69da36d73c7a385975c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyMODINIT_FUNC</type>
        <definition>PyMODINIT_FUNC initsvector</definition>
        <argsstring>(void)</argsstring>
        <name>initsvector</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" line="4147" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.cpp" bodystart="4148" bodyend="4230"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Generated<sp/>by<sp/>Cython<sp/>0.11.2<sp/>on<sp/>Thu<sp/>Mar<sp/>18<sp/>08:54:32<sp/>2010<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PY_SSIZE_T_CLEAN</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;Python.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;structmember.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_PYTHON_H</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#error<sp/>Python<sp/>headers<sp/>needed<sp/>to<sp/>compile<sp/>C<sp/>extensions,<sp/>please<sp/>install<sp/>development<sp/>version<sp/>of<sp/>Python.</highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifndef<sp/>PY_LONG_LONG</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PY_LONG_LONG<sp/>LONG_LONG</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifndef<sp/>DL_EXPORT</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>DL_EXPORT(t)<sp/>t</highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x02040000</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>METH_COEXIST<sp/>0</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyDict_CheckExact(op)<sp/>(Py_TYPE(op)<sp/>==<sp/>&amp;PyDict_Type)</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x02050000</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Py_ssize_t;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PY_SSIZE_T_MAX<sp/>INT_MAX</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PY_SSIZE_T_MIN<sp/>INT_MIN</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PY_FORMAT_SIZE_T<sp/>&quot;&quot;</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_FromSsize_t(z)<sp/>PyInt_FromLong(z)</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_AsSsize_t(o)<sp/><sp/><sp/>PyInt_AsLong(o)</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyNumber_Index(o)<sp/><sp/><sp/><sp/>PyNumber_Int(o)</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyIndex_Check(o)<sp/><sp/><sp/><sp/><sp/>PyNumber_Check(o)</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x02060000</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>Py_REFCNT(ob)<sp/>(((PyObject*)(ob))-&gt;ob_refcnt)</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>Py_TYPE(ob)<sp/><sp/><sp/>(((PyObject*)(ob))-&gt;ob_type)</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>Py_SIZE(ob)<sp/><sp/><sp/>(((PyVarObject*)(ob))-&gt;ob_size)</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyVarObject_HEAD_INIT(type,<sp/>size)<sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject_HEAD_INIT(type)<sp/>size,</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyType_Modified(t)</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="structPy__buffer" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*obj;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>len;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>itemsize;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>readonly;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndim;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>*shape;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>*strides;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>*suboffsets;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">internal</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structPy__buffer" kindref="compound">Py_buffer</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyBUF_SIMPLE<sp/>0</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyBUF_WRITABLE<sp/>0x0001</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyBUF_FORMAT<sp/>0x0004</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyBUF_ND<sp/>0x0008</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyBUF_STRIDES<sp/>(0x0010<sp/>|<sp/>PyBUF_ND)</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyBUF_C_CONTIGUOUS<sp/>(0x0020<sp/>|<sp/>PyBUF_STRIDES)</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyBUF_F_CONTIGUOUS<sp/>(0x0040<sp/>|<sp/>PyBUF_STRIDES)</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyBUF_ANY_CONTIGUOUS<sp/>(0x0080<sp/>|<sp/>PyBUF_STRIDES)</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyBUF_INDIRECT<sp/>(0x0100<sp/>|<sp/>PyBUF_STRIDES)</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_BUILTIN_MODULE_NAME<sp/>&quot;__builtin__&quot;</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_BUILTIN_MODULE_NAME<sp/>&quot;builtins&quot;</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>Py_TPFLAGS_CHECKTYPES<sp/>0</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>Py_TPFLAGS_HAVE_INDEX<sp/>0</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>(PY_VERSION_HEX<sp/>&lt;<sp/>0x02060000)<sp/>||<sp/>(PY_MAJOR_VERSION<sp/>&gt;=<sp/>3)</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>Py_TPFLAGS_HAVE_NEWBUFFER<sp/>0</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyBaseString_Type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyUnicode_Type</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyString_Type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyBytes_Type</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyString_CheckExact<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyBytes_CheckExact</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_Type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_Type</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_Check(op)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_Check(op)</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_CheckExact(op)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_CheckExact(op)</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_FromString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_FromString</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_FromUnicode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_FromUnicode</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_FromLong<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_FromLong</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_FromSize_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_FromSize_t</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_FromSsize_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_FromSsize_t</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_AsLong<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_AsLong</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_AS_LONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_AS_LONG</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_AsSsize_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_AsSsize_t</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_AsUnsignedLongMask<sp/><sp/><sp/><sp/><sp/>PyLong_AsUnsignedLongMask</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_AsUnsignedLongLongMask<sp/>PyLong_AsUnsignedLongLongMask</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyNumber_Divide(x,y)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyNumber_TrueDivide(x,y)</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyNumber_Divide(x,y)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyNumber_Divide(x,y)</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyBytes_Type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyString_Type</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyMethod_New(func,<sp/>self,<sp/>klass)<sp/>PyInstanceMethod_New(func)</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>!defined(WIN32)<sp/>&amp;&amp;<sp/>!defined(MS_WINDOWS)</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>__stdcall</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__stdcall</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>__cdecl</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__cdecl</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>__fastcall</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__fastcall</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>_USE_MATH_DEFINES</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x02050000</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_GetAttrString(o,n)<sp/><sp/><sp/>PyObject_GetAttrString((o),((char<sp/>*)(n)))</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_SetAttrString(o,n,a)<sp/>PyObject_SetAttrString((o),((char<sp/>*)(n)),(a))</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_DelAttrString(o,n)<sp/><sp/><sp/>PyObject_DelAttrString((o),((char<sp/>*)(n)))</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_GetAttrString(o,n)<sp/><sp/><sp/>PyObject_GetAttrString((o),(n))</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_SetAttrString(o,n,a)<sp/>PyObject_SetAttrString((o),(n),(a))</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_DelAttrString(o,n)<sp/><sp/><sp/>PyObject_DelAttrString((o),(n))</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x02050000</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_NAMESTR(n)<sp/>((char<sp/>*)(n))</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_DOCSTR(n)<sp/><sp/>((char<sp/>*)(n))</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_NAMESTR(n)<sp/>(n)</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_DOCSTR(n)<sp/><sp/>(n)</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__PYX_EXTERN_C<sp/>extern<sp/>&quot;C&quot;</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__PYX_EXTERN_C<sp/>extern</highlight></codeline>
<codeline lineno="132"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PYX_HAVE_API__svector</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;string&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;numberizer.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cmath&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;svector.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cy_svector.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdexcept&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PYX_USE_C99_COMPLEX<sp/>defined(_Complex_I)</highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__GNUC__</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INLINE<sp/>__inline__</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INLINE<sp/>__inline</highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INLINE<sp/></highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="151"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="struct____Pyx__StringTabEntry" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{PyObject<sp/>**p;<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s;<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n;<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>is_unicode;<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>intern;<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>is_identifier;}<sp/><ref refid="struct____Pyx__StringTabEntry" kindref="compound">__Pyx_StringTabEntry</ref>;<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_skip_dispatch<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Type<sp/>Conversion<sp/>Predeclarations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyBytes_FromString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyString_FromString</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyBytes_FromStringAndSize<sp/><sp/><sp/>PyString_FromStringAndSize</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyBytes_AsString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyString_AsString</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyBytes_FromString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyBytes_FromString</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyBytes_FromStringAndSize<sp/><sp/><sp/>PyBytes_FromStringAndSize</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyBytes_AsString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyBytes_AsString</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyBool_FromLong(b)<sp/>((b)<sp/>?<sp/>(Py_INCREF(Py_True),<sp/>Py_True)<sp/>:<sp/>(Py_INCREF(Py_False),<sp/>Py_False))</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyObject_IsTrue(PyObject*);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/>PyObject*<sp/>__Pyx_PyNumber_Int(PyObject*<sp/>x);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(T_PYSSIZET)</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x02050000</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>T_PYSSIZET<sp/>T_INT</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#elif<sp/>!defined(T_LONGLONG)</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>T_PYSSIZET<sp/>\</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(Py_ssize_t)<sp/>==<sp/>sizeof(int))<sp/><sp/>?<sp/>T_INT<sp/><sp/>:<sp/>\</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(Py_ssize_t)<sp/>==<sp/>sizeof(long))<sp/>?<sp/>T_LONG<sp/>:<sp/>-1))</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>T_PYSSIZET<sp/>\</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(Py_ssize_t)<sp/>==<sp/>sizeof(int))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>T_INT<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>\</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(Py_ssize_t)<sp/>==<sp/>sizeof(long))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>T_LONG<sp/><sp/><sp/><sp/><sp/>:<sp/>\</highlight></codeline>
<codeline lineno="186"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(Py_ssize_t)<sp/>==<sp/>sizeof(PY_LONG_LONG))<sp/>?<sp/>T_LONGLONG<sp/>:<sp/>-1)))</highlight></codeline>
<codeline lineno="187"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="188"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="189"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(T_SIZET)</highlight></codeline>
<codeline lineno="191"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>!defined(T_ULONGLONG)</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>T_SIZET<sp/>\</highlight></codeline>
<codeline lineno="193"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(size_t)<sp/>==<sp/>sizeof(unsigned<sp/>int))<sp/><sp/>?<sp/>T_UINT<sp/><sp/>:<sp/>\</highlight></codeline>
<codeline lineno="194"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(size_t)<sp/>==<sp/>sizeof(unsigned<sp/>long))<sp/>?<sp/>T_ULONG<sp/>:<sp/>-1))</highlight></codeline>
<codeline lineno="195"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>T_SIZET<sp/>\</highlight></codeline>
<codeline lineno="197"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(size_t)<sp/>==<sp/>sizeof(unsigned<sp/>int))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>T_UINT<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>\</highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(size_t)<sp/>==<sp/>sizeof(unsigned<sp/>long))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>T_ULONG<sp/><sp/><sp/><sp/><sp/>:<sp/>\</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(size_t)<sp/>==<sp/>sizeof(unsigned<sp/>PY_LONG_LONG))<sp/>?<sp/>T_ULONGLONG<sp/>:<sp/>-1)))</highlight></codeline>
<codeline lineno="200"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="201"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/>Py_ssize_t<sp/>__Pyx_PyIndex_AsSsize_t(PyObject*);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/>PyObject<sp/>*<sp/>__Pyx_PyInt_FromSize_t(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsSize_t(PyObject*);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__pyx_PyFloat_AsDouble(x)<sp/>(PyFloat_CheckExact(x)<sp/>?<sp/>PyFloat_AS_DOUBLE(x)<sp/>:<sp/>PyFloat_AsDouble(x))</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__GNUC__</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Test<sp/>for<sp/>GCC<sp/>&gt;<sp/>2.95<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__GNUC__<sp/>&gt;<sp/>2<sp/>||<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(__GNUC__<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>(__GNUC_MINOR__<sp/>&gt;<sp/>95))<sp/></highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>likely(x)<sp/><sp/><sp/>__builtin_expect(!!(x),<sp/>1)</highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>unlikely(x)<sp/>__builtin_expect(!!(x),<sp/>0)</highlight></codeline>
<codeline lineno="215"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>__GNUC__<sp/>&gt;<sp/>2<sp/>...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>likely(x)<sp/><sp/><sp/>(x)</highlight></codeline>
<codeline lineno="217"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>unlikely(x)<sp/>(x)</highlight></codeline>
<codeline lineno="218"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__GNUC__<sp/>&gt;<sp/>2<sp/>...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>__GNUC__<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>likely(x)<sp/><sp/><sp/>(x)</highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>unlikely(x)<sp/>(x)</highlight></codeline>
<codeline lineno="222"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__GNUC__<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_m;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_b;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_empty_tuple;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>__pyx_cfilenm=<sp/>__FILE__;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**__pyx_f;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CYTHON_REFNANNY</highlight></codeline>
<codeline lineno="235"><highlight class="preprocessor"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>void<sp/>(*INCREF)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/>PyObject*,<sp/>int);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>void<sp/>(*DECREF)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/>PyObject*,<sp/>int);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>void<sp/>(*GOTREF)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/>PyObject*,<sp/>int);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>void<sp/>(*GIVEREF)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/>PyObject*,<sp/>int);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>(*NewContext)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/>int,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>void<sp/>(*FinishContext)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**);</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}<sp/>__Pyx_RefnannyAPIStruct;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__Pyx_RefnannyAPIStruct<sp/>*__Pyx_Refnanny<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_ImportRefcountAPI(name)<sp/><sp/><sp/>(__Pyx_RefnannyAPIStruct<sp/>*)<sp/>PyCObject_Import((char<sp/>*)name,<sp/>(char<sp/>*)&quot;RefnannyAPI&quot;)</highlight></codeline>
<codeline lineno="245"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_INCREF(r)<sp/>__Pyx_Refnanny-&gt;INCREF(__pyx_refchk,<sp/>(PyObject<sp/>*)(r),<sp/>__LINE__)</highlight></codeline>
<codeline lineno="246"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_DECREF(r)<sp/>__Pyx_Refnanny-&gt;DECREF(__pyx_refchk,<sp/>(PyObject<sp/>*)(r),<sp/>__LINE__)</highlight></codeline>
<codeline lineno="247"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_GOTREF(r)<sp/>__Pyx_Refnanny-&gt;GOTREF(__pyx_refchk,<sp/>(PyObject<sp/>*)(r),<sp/>__LINE__)</highlight></codeline>
<codeline lineno="248"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_GIVEREF(r)<sp/>__Pyx_Refnanny-&gt;GIVEREF(__pyx_refchk,<sp/>(PyObject<sp/>*)(r),<sp/>__LINE__)</highlight></codeline>
<codeline lineno="249"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_XDECREF(r)<sp/>if((r)<sp/>==<sp/>NULL)<sp/>;<sp/>else<sp/>__Pyx_DECREF(r)</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_SetupRefcountContext(name)<sp/><sp/><sp/>void*<sp/>__pyx_refchk<sp/>=<sp/>__Pyx_Refnanny-&gt;NewContext((name),<sp/>__LINE__,<sp/>__FILE__)</highlight></codeline>
<codeline lineno="251"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_FinishRefcountContext()<sp/><sp/><sp/>__Pyx_Refnanny-&gt;FinishContext(&amp;__pyx_refchk)</highlight></codeline>
<codeline lineno="252"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="253"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_INCREF(r)<sp/>Py_INCREF(r)</highlight></codeline>
<codeline lineno="254"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_DECREF(r)<sp/>Py_DECREF(r)</highlight></codeline>
<codeline lineno="255"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_GOTREF(r)</highlight></codeline>
<codeline lineno="256"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_GIVEREF(r)</highlight></codeline>
<codeline lineno="257"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_XDECREF(r)<sp/>Py_XDECREF(r)</highlight></codeline>
<codeline lineno="258"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_SetupRefcountContext(name)</highlight></codeline>
<codeline lineno="259"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_FinishRefcountContext()</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CYTHON_REFNANNY<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_XGIVEREF(r)<sp/>if((r)<sp/>==<sp/>NULL)<sp/>;<sp/>else<sp/>__Pyx_GIVEREF(r)</highlight></codeline>
<codeline lineno="262"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_XGOTREF(r)<sp/>if((r)<sp/>==<sp/>NULL)<sp/>;<sp/>else<sp/>__Pyx_GOTREF(r)</highlight></codeline>
<codeline lineno="263"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_RaiseDoubleKeywordsError(</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>func_name,<sp/>PyObject*<sp/>kw_name);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>func_name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exact,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>num_min,<sp/>Py_ssize_t<sp/>num_max,<sp/>Py_ssize_t<sp/>num_found);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_ParseOptionalKeywords(PyObject<sp/>*kwds,<sp/>PyObject<sp/>**argnames[],<sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*kwds2,<sp/>PyObject<sp/>*values[],<sp/>Py_ssize_t<sp/>num_pos_args,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>function_name);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_CheckKeywordStrings(PyObject<sp/>*kwdict,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>function_name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kw_allowed);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/>PyObject<sp/>*__Pyx_GetItemInt_Generic(PyObject<sp/>*o,<sp/>PyObject*<sp/>j)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*r;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!j)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>PyObject_GetItem(o,<sp/>j);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(j);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_GetItemInt_List(o,<sp/>i,<sp/>size,<sp/>to_py_func)<sp/>((size<sp/>&lt;=<sp/>sizeof(Py_ssize_t))<sp/>?<sp/>\</highlight></codeline>
<codeline lineno="286"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetItemInt_List_Fast(o,<sp/>i,<sp/>size<sp/>&lt;=<sp/>sizeof(long))<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetItemInt_Generic(o,<sp/>to_py_func(i)))</highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/>PyObject<sp/>*__Pyx_GetItemInt_List_Fast(PyObject<sp/>*o,<sp/>Py_ssize_t<sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fits_long)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(o<sp/>!=<sp/>Py_None))<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((0<sp/>&lt;=<sp/>i)<sp/>&amp;<sp/>(i<sp/>&lt;<sp/>PyList_GET_SIZE(o))))<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*r<sp/>=<sp/>PyList_GET_ITEM(o,<sp/>i);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(r);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((-PyList_GET_SIZE(o)<sp/>&lt;=<sp/>i)<sp/>&amp;<sp/>(i<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*r<sp/>=<sp/>PyList_GET_ITEM(o,<sp/>PyList_GET_SIZE(o)<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(r);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_GetItemInt_Generic(o,<sp/>fits_long<sp/>?<sp/>PyInt_FromLong(i)<sp/>:<sp/>PyLong_FromLongLong(i));</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_GetItemInt_Tuple(o,<sp/>i,<sp/>size,<sp/>to_py_func)<sp/>((size<sp/>&lt;=<sp/>sizeof(Py_ssize_t))<sp/>?<sp/>\</highlight></codeline>
<codeline lineno="306"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetItemInt_Tuple_Fast(o,<sp/>i,<sp/>size<sp/>&lt;=<sp/>sizeof(long))<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="307"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetItemInt_Generic(o,<sp/>to_py_func(i)))</highlight></codeline>
<codeline lineno="308"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/>PyObject<sp/>*__Pyx_GetItemInt_Tuple_Fast(PyObject<sp/>*o,<sp/>Py_ssize_t<sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fits_long)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(o<sp/>!=<sp/>Py_None))<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((0<sp/>&lt;=<sp/>i)<sp/>&amp;<sp/>(i<sp/>&lt;<sp/>PyTuple_GET_SIZE(o))))<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*r<sp/>=<sp/>PyTuple_GET_ITEM(o,<sp/>i);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(r);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((-PyTuple_GET_SIZE(o)<sp/>&lt;=<sp/>i)<sp/>&amp;<sp/>(i<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*r<sp/>=<sp/>PyTuple_GET_ITEM(o,<sp/>PyTuple_GET_SIZE(o)<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(r);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_GetItemInt_Generic(o,<sp/>fits_long<sp/>?<sp/>PyInt_FromLong(i)<sp/>:<sp/>PyLong_FromLongLong(i));</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_GetItemInt(o,<sp/>i,<sp/>size,<sp/>to_py_func)<sp/>((size<sp/>&lt;=<sp/>sizeof(Py_ssize_t))<sp/>?<sp/>\</highlight></codeline>
<codeline lineno="327"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetItemInt_Fast(o,<sp/>i,<sp/>size<sp/>&lt;=<sp/>sizeof(long))<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="328"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetItemInt_Generic(o,<sp/>to_py_func(i)))</highlight></codeline>
<codeline lineno="329"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/>PyObject<sp/>*__Pyx_GetItemInt_Fast(PyObject<sp/>*o,<sp/>Py_ssize_t<sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fits_long)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*r;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyList_CheckExact(o)<sp/>&amp;&amp;<sp/>((0<sp/>&lt;=<sp/>i)<sp/>&amp;<sp/>(i<sp/>&lt;<sp/>PyList_GET_SIZE(o))))<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>PyList_GET_ITEM(o,<sp/>i);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(r);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyTuple_CheckExact(o)<sp/>&amp;&amp;<sp/>((0<sp/>&lt;=<sp/>i)<sp/>&amp;<sp/>(i<sp/>&lt;<sp/>PyTuple_GET_SIZE(o))))<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>PyTuple_GET_ITEM(o,<sp/>i);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(r);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Py_TYPE(o)-&gt;tp_as_sequence<sp/>&amp;&amp;<sp/>Py_TYPE(o)-&gt;tp_as_sequence-&gt;sq_item<sp/>&amp;&amp;<sp/>(likely(i<sp/>&gt;=<sp/>0)))<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>PySequence_GetItem(o,<sp/>i);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>__Pyx_GetItemInt_Generic(o,<sp/>fits_long<sp/>?<sp/>PyInt_FromLong(i)<sp/>:<sp/>PyLong_FromLongLong(i));</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_TypeTest(PyObject<sp/>*obj,<sp/>PyTypeObject<sp/>*type);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_ArgTypeTest(PyObject<sp/>*obj,<sp/>PyTypeObject<sp/>*type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>none_allowed,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exact);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__Pyx_CppExn2PyErr</highlight></codeline>
<codeline lineno="355"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_CppExn2PyErr()<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyErr_Occurred())</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">//<sp/>let<sp/>the<sp/>latest<sp/>Python<sp/>exn<sp/>pass<sp/>through<sp/>and<sp/>ignore<sp/>the<sp/>current<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::out_of_range&amp;<sp/>exn)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>catch<sp/>out_of_range<sp/>explicitly<sp/>so<sp/>the<sp/>proper<sp/>Python<sp/>exn<sp/>may<sp/>be<sp/>raised</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_IndexError,<sp/>exn.what());</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>exn)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_RuntimeError,<sp/>exn.what());</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_RuntimeError,<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>exception&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="373"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_GetName(PyObject<sp/>*dict,<sp/>PyObject<sp/>*name);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_Raise(PyObject<sp/>*type,<sp/>PyObject<sp/>*value,<sp/>PyObject<sp/>*tb);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_ErrRestore(PyObject<sp/>*type,<sp/>PyObject<sp/>*value,<sp/>PyObject<sp/>*tb);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_ErrFetch(PyObject<sp/>**type,<sp/>PyObject<sp/>**value,<sp/>PyObject<sp/>**tb);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_RaiseNeedMoreValuesError(Py_ssize_t<sp/>index);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_RaiseTooManyValuesError(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_UnpackItem(PyObject<sp/>*,<sp/>Py_ssize_t<sp/>index);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_EndUnpack(PyObject<sp/>*);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_StrEq(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsUnsignedChar(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsUnsignedShort(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsUnsignedInt(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsChar(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsShort(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsInt(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsSignedChar(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsSignedShort(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsSignedInt(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsUnsignedLong(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG<sp/>__Pyx_PyInt_AsUnsignedLongLong(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsLong(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/>PY_LONG_LONG<sp/>__Pyx_PyInt_AsLongLong(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsSignedLong(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/>PY_LONG_LONG<sp/>__Pyx_PyInt_AsSignedLongLong(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_AddTraceback(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*funcname);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_InitStrings(<ref refid="struct____Pyx__StringTabEntry" kindref="compound">__Pyx_StringTabEntry</ref><sp/>*t);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Type<sp/>declarations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:1</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/>*<sp/>cdef<sp/>class<sp/>Vector<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/>*<sp/>cimport<sp/>numberizer</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432" refid="struct____pyx__obj__7svector__Vector" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>PyObject_HEAD</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>svector&lt;int,double&gt;<sp/>*thisptr;</highlight></codeline>
<codeline lineno="435"><highlight class="normal">};</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:54</highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>feature_numberizer.word_to_index(cs)</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/>*<sp/>cdef<sp/>class<sp/>KeyIterator:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>c_svector_iterator<sp/>*thisptr</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>v</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="struct____pyx__obj__7svector__KeyIterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyIterator" kindref="compound">__pyx_obj_7svector_KeyIterator</ref><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>PyObject_HEAD</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>svector_iterator&lt;int,double&gt;<sp/>*thisptr;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*v;</highlight></codeline>
<codeline lineno="449"><highlight class="normal">};</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:94</highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>StopIteration()</highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/>*<sp/>cdef<sp/>class<sp/>KeyValueIterator:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>c_svector_iterator<sp/>*thisptr</highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>v</highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459" refid="struct____pyx__obj__7svector__KeyValueIterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyValueIterator" kindref="compound">__pyx_obj_7svector_KeyValueIterator</ref><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>PyObject_HEAD</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>svector_iterator&lt;int,double&gt;<sp/>*thisptr;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*v;</highlight></codeline>
<codeline lineno="463"><highlight class="normal">};</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:74</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>StopIteration()</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/>*<sp/>cdef<sp/>class<sp/>ValueIterator:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>c_svector_iterator<sp/>*thisptr</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>v</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473" refid="struct____pyx__obj__7svector__ValueIterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__ValueIterator" kindref="compound">__pyx_obj_7svector_ValueIterator</ref><sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>PyObject_HEAD</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>svector_iterator&lt;int,double&gt;<sp/>*thisptr;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*v;</highlight></codeline>
<codeline lineno="477"><highlight class="normal">};</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Module<sp/>declarations<sp/>from<sp/>numberizer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Module<sp/>declarations<sp/>from<sp/>svector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyTypeObject<sp/>*__pyx_ptype_7svector_Vector<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyTypeObject<sp/>*__pyx_ptype_7svector_KeyIterator<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyTypeObject<sp/>*__pyx_ptype_7svector_ValueIterator<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyTypeObject<sp/>*__pyx_ptype_7svector_KeyValueIterator<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_f_7svector_word_to_index(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_MODULE_NAME<sp/>&quot;svector&quot;</highlight></codeline>
<codeline lineno="488"><highlight class="preprocessor"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_module_is_main_svector<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Implementation<sp/>of<sp/>svector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k___main__[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp___main__;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k___cinit__[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__cinit__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp___cinit__;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k___dealloc__[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__dealloc__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp___dealloc__;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k___iter__[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__iter__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp___iter__;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k___next__[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__next__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp___next__;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k___init__[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp___init__;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k___copy__[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__copy__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp___copy__;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k___str__[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__str__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp___str__;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k___reduce__[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__reduce__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp___reduce__;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k___len__[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__len__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp___len__;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k___setitem__[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__setitem__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp___setitem__;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k___getitem__[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__getitem__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp___getitem__;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k___delitem__[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__delitem__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp___delitem__;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_iterkeys[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;iterkeys&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_iterkeys;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_itervalues[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;itervalues&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_itervalues;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_iteritems[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;iteritems&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_iteritems;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k___contains__[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__contains__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp___contains__;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k___iadd__[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__iadd__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp___iadd__;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k___isub__[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__isub__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp___isub__;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k___imul__[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__imul__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp___imul__;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k___idiv__[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__idiv__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp___idiv__;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k___add__[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__add__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp___add__;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k___sub__[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__sub__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp___sub__;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k___mul__[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__mul__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp___mul__;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k___div__[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__div__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp___div__;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k___neg__[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__neg__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp___neg__;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k___pos__[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__pos__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp___pos__;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_dot[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;dot&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_dot;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_norm[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;norm&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_norm;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_v[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_v;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_f[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;f&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_f;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_x[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_x;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_other[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;other&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_other;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_self[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;self&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_self;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_StopIteration[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;StopIteration&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_StopIteration;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_TypeError[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TypeError&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_TypeError;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_builtin_StopIteration;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_builtin_TypeError;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:49</highlight></codeline>
<codeline lineno="567"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>void<sp/>del_svector_iterator<sp/>&quot;delete&quot;<sp/>(c_svector_iterator<sp/>*)</highlight></codeline>
<codeline lineno="568"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="569"><highlight class="comment"><sp/>*<sp/>cdef<sp/>int<sp/>word_to_index(char<sp/>*s):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="570"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>c_string<sp/>cs</highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cs.assign(s)</highlight></codeline>
<codeline lineno="572"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_f_7svector_word_to_index(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_v_s)<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>std::string<sp/>__pyx_v_cs;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;word_to_index&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:51</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/>*<sp/>cdef<sp/>int<sp/>word_to_index(char<sp/>*s):</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>c_string<sp/>cs</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cs.assign(s)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>feature_numberizer.word_to_index(cs)</highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>__pyx_v_cs.assign(__pyx_v_s);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:52</highlight></codeline>
<codeline lineno="589"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>c_string<sp/>cs</highlight></codeline>
<codeline lineno="590"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cs.assign(s)</highlight></codeline>
<codeline lineno="591"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>feature_numberizer.word_to_index(cs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/>*<sp/>cdef<sp/>class<sp/>KeyIterator:</highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>feature_numberizer.word_to_index(__pyx_v_cs);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:58</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>v</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__cinit__(self,<sp/>Vector<sp/>v):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>new_svector_iterator(v.thisptr[0])</highlight></codeline>
<codeline lineno="609"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.v<sp/>=<sp/>v<sp/>#<sp/>keep<sp/>reference</highlight></codeline>
<codeline lineno="610"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_7svector_11KeyIterator___cinit__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_7svector_11KeyIterator___cinit__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds)<sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*__pyx_v_v<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>**__pyx_pyargnames[]<sp/>=<sp/>{&amp;__pyx_kp_v,0};</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__cinit__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_kwds))<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>kw_args<sp/>=<sp/>PyDict_Size(__pyx_kwds);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>values[1]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args))<sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args))<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[0]<sp/>=<sp/>PyDict_GetItem(__pyx_kwds,<sp/>__pyx_kp_v);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(values[0]))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(kw_args<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds,<sp/>__pyx_pyargnames,<sp/>0,<sp/>values,<sp/>PyTuple_GET_SIZE(__pyx_args),<sp/></highlight><highlight class="stringliteral">&quot;__cinit__&quot;</highlight><highlight class="normal">)<sp/>&lt;<sp/>0))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>58;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L3_error;}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)values[0]);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)PyTuple_GET_ITEM(__pyx_args,<sp/>0));</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_argument_unpacking_done;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>__pyx_L5_argtuple_error:;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;__cinit__&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>1,<sp/>PyTuple_GET_SIZE(__pyx_args));<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>58;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L3_error;}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>__pyx_L3_error:;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.KeyIterator.__cinit__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>__pyx_L4_argument_unpacking_done:;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__Pyx_ArgTypeTest(((PyObject<sp/>*)__pyx_v_v),<sp/>__pyx_ptype_7svector_Vector,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">,<sp/>0)))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>58;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:59</highlight></codeline>
<codeline lineno="651"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="652"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__cinit__(self,<sp/>Vector<sp/>v):</highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>new_svector_iterator(v.thisptr[0])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="654"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.v<sp/>=<sp/>v<sp/>#<sp/>keep<sp/>reference</highlight></codeline>
<codeline lineno="655"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):</highlight></codeline>
<codeline lineno="656"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyIterator" kindref="compound">__pyx_obj_7svector_KeyIterator</ref><sp/>*)__pyx_v_self)-&gt;thisptr<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>svector_iterator&lt;int,double&gt;((__pyx_v_v-&gt;thisptr[0]));</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:60</highlight></codeline>
<codeline lineno="660"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__cinit__(self,<sp/>Vector<sp/>v):</highlight></codeline>
<codeline lineno="661"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>new_svector_iterator(v.thisptr[0])</highlight></codeline>
<codeline lineno="662"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.v<sp/>=<sp/>v<sp/>#<sp/>keep<sp/>reference<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="663"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):</highlight></codeline>
<codeline lineno="664"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector_iterator(self.thisptr)</highlight></codeline>
<codeline lineno="665"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)__pyx_v_v));</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(((PyObject<sp/>*)__pyx_v_v));</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct____pyx__obj__7svector__KeyIterator" kindref="compound">__pyx_obj_7svector_KeyIterator</ref><sp/>*)__pyx_v_self)-&gt;v);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct____pyx__obj__7svector__KeyIterator" kindref="compound">__pyx_obj_7svector_KeyIterator</ref><sp/>*)__pyx_v_self)-&gt;v));</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyIterator" kindref="compound">__pyx_obj_7svector_KeyIterator</ref><sp/>*)__pyx_v_self)-&gt;v<sp/>=<sp/>__pyx_v_v;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.KeyIterator.__cinit__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:61</highlight></codeline>
<codeline lineno="683"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>new_svector_iterator(v.thisptr[0])</highlight></codeline>
<codeline lineno="684"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.v<sp/>=<sp/>v<sp/>#<sp/>keep<sp/>reference</highlight></codeline>
<codeline lineno="685"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="686"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector_iterator(self.thisptr)</highlight></codeline>
<codeline lineno="687"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__iter__(self):</highlight></codeline>
<codeline lineno="688"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__pyx_pf_7svector_11KeyIterator___dealloc__(PyObject<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__pyx_pf_7svector_11KeyIterator___dealloc__(PyObject<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__dealloc__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:62</highlight></codeline>
<codeline lineno="695"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.v<sp/>=<sp/>v<sp/>#<sp/>keep<sp/>reference</highlight></codeline>
<codeline lineno="696"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):</highlight></codeline>
<codeline lineno="697"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector_iterator(self.thisptr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="698"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__iter__(self):</highlight></codeline>
<codeline lineno="699"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self</highlight></codeline>
<codeline lineno="700"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyIterator" kindref="compound">__pyx_obj_7svector_KeyIterator</ref><sp/>*)__pyx_v_self)-&gt;thisptr);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:63</highlight></codeline>
<codeline lineno="707"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):</highlight></codeline>
<codeline lineno="708"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector_iterator(self.thisptr)</highlight></codeline>
<codeline lineno="709"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__iter__(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="710"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self</highlight></codeline>
<codeline lineno="711"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__next__(self):</highlight></codeline>
<codeline lineno="712"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_11KeyIterator___iter__(PyObject<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_11KeyIterator___iter__(PyObject<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__iter__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:64</highlight></codeline>
<codeline lineno="720"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector_iterator(self.thisptr)</highlight></codeline>
<codeline lineno="721"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__iter__(self):</highlight></codeline>
<codeline lineno="722"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="723"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__next__(self):</highlight></codeline>
<codeline lineno="724"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>c_string<sp/>key</highlight></codeline>
<codeline lineno="725"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_v_self;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:65</highlight></codeline>
<codeline lineno="739"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__iter__(self):</highlight></codeline>
<codeline lineno="740"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self</highlight></codeline>
<codeline lineno="741"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__next__(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="742"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>c_string<sp/>key</highlight></codeline>
<codeline lineno="743"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.thisptr.has_next():</highlight></codeline>
<codeline lineno="744"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_11KeyIterator___next__(PyObject<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_11KeyIterator___next__(PyObject<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/>std::string<sp/>__pyx_v_key;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/>std::string<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_3<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__next__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:67</highlight></codeline>
<codeline lineno="756"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__next__(self):</highlight></codeline>
<codeline lineno="757"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>c_string<sp/>key</highlight></codeline>
<codeline lineno="758"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.thisptr.has_next():<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="759"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>self.thisptr.key()</highlight></codeline>
<codeline lineno="760"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr.next()</highlight></codeline>
<codeline lineno="761"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyIterator" kindref="compound">__pyx_obj_7svector_KeyIterator</ref><sp/>*)__pyx_v_self)-&gt;thisptr-&gt;has_next();</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_1)<sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:68</highlight></codeline>
<codeline lineno="766"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>c_string<sp/>key</highlight></codeline>
<codeline lineno="767"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.thisptr.has_next():</highlight></codeline>
<codeline lineno="768"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>self.thisptr.key()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="769"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr.next()</highlight></codeline>
<codeline lineno="770"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>key.c_str()</highlight></codeline>
<codeline lineno="771"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{__pyx_t_2<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyIterator" kindref="compound">__pyx_obj_7svector_KeyIterator</ref><sp/>*)__pyx_v_self)-&gt;thisptr-&gt;key();}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(...)<sp/>{__Pyx_CppExn2PyErr();<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>68;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_key<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:69</highlight></codeline>
<codeline lineno="776"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.thisptr.has_next():</highlight></codeline>
<codeline lineno="777"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>self.thisptr.key()</highlight></codeline>
<codeline lineno="778"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr.next()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="779"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>key.c_str()</highlight></codeline>
<codeline lineno="780"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="781"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyIterator" kindref="compound">__pyx_obj_7svector_KeyIterator</ref><sp/>*)__pyx_v_self)-&gt;thisptr-&gt;next();</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:70</highlight></codeline>
<codeline lineno="785"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>self.thisptr.key()</highlight></codeline>
<codeline lineno="786"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr.next()</highlight></codeline>
<codeline lineno="787"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>key.c_str()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="788"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="789"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>StopIteration()</highlight></codeline>
<codeline lineno="790"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_PyBytes_FromString(__pyx_v_key.c_str());<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>70;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*else*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:72</highlight></codeline>
<codeline lineno="802"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>key.c_str()</highlight></codeline>
<codeline lineno="803"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="804"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>StopIteration()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="805"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="806"><highlight class="comment"><sp/>*<sp/>cdef<sp/>class<sp/>ValueIterator:</highlight></codeline>
<codeline lineno="807"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyObject_Call(__pyx_builtin_StopIteration,<sp/>((PyObject<sp/>*)__pyx_empty_tuple),<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>72;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_t_3,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>72;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/>__pyx_L5:;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.KeyIterator.__next__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:78</highlight></codeline>
<codeline lineno="829"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>v</highlight></codeline>
<codeline lineno="830"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="831"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__cinit__(self,<sp/>Vector<sp/>v):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="832"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>new_svector_iterator(v.thisptr[0])</highlight></codeline>
<codeline lineno="833"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.v<sp/>=<sp/>v<sp/>#<sp/>keep<sp/>reference</highlight></codeline>
<codeline lineno="834"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_7svector_13ValueIterator___cinit__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_7svector_13ValueIterator___cinit__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds)<sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*__pyx_v_v<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>**__pyx_pyargnames[]<sp/>=<sp/>{&amp;__pyx_kp_v,0};</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__cinit__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_kwds))<sp/>{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>kw_args<sp/>=<sp/>PyDict_Size(__pyx_kwds);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>values[1]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args))<sp/>{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args))<sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[0]<sp/>=<sp/>PyDict_GetItem(__pyx_kwds,<sp/>__pyx_kp_v);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(values[0]))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(kw_args<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds,<sp/>__pyx_pyargnames,<sp/>0,<sp/>values,<sp/>PyTuple_GET_SIZE(__pyx_args),<sp/></highlight><highlight class="stringliteral">&quot;__cinit__&quot;</highlight><highlight class="normal">)<sp/>&lt;<sp/>0))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>78;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L3_error;}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)values[0]);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)PyTuple_GET_ITEM(__pyx_args,<sp/>0));</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_argument_unpacking_done;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/>__pyx_L5_argtuple_error:;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;__cinit__&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>1,<sp/>PyTuple_GET_SIZE(__pyx_args));<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>78;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L3_error;}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/>__pyx_L3_error:;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.ValueIterator.__cinit__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/>__pyx_L4_argument_unpacking_done:;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__Pyx_ArgTypeTest(((PyObject<sp/>*)__pyx_v_v),<sp/>__pyx_ptype_7svector_Vector,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">,<sp/>0)))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>78;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:79</highlight></codeline>
<codeline lineno="875"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="876"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__cinit__(self,<sp/>Vector<sp/>v):</highlight></codeline>
<codeline lineno="877"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>new_svector_iterator(v.thisptr[0])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="878"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.v<sp/>=<sp/>v<sp/>#<sp/>keep<sp/>reference</highlight></codeline>
<codeline lineno="879"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):</highlight></codeline>
<codeline lineno="880"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__ValueIterator" kindref="compound">__pyx_obj_7svector_ValueIterator</ref><sp/>*)__pyx_v_self)-&gt;thisptr<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>svector_iterator&lt;int,double&gt;((__pyx_v_v-&gt;thisptr[0]));</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:80</highlight></codeline>
<codeline lineno="884"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__cinit__(self,<sp/>Vector<sp/>v):</highlight></codeline>
<codeline lineno="885"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>new_svector_iterator(v.thisptr[0])</highlight></codeline>
<codeline lineno="886"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.v<sp/>=<sp/>v<sp/>#<sp/>keep<sp/>reference<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="887"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):</highlight></codeline>
<codeline lineno="888"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector_iterator(self.thisptr)</highlight></codeline>
<codeline lineno="889"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)__pyx_v_v));</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(((PyObject<sp/>*)__pyx_v_v));</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct____pyx__obj__7svector__ValueIterator" kindref="compound">__pyx_obj_7svector_ValueIterator</ref><sp/>*)__pyx_v_self)-&gt;v);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct____pyx__obj__7svector__ValueIterator" kindref="compound">__pyx_obj_7svector_ValueIterator</ref><sp/>*)__pyx_v_self)-&gt;v));</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__ValueIterator" kindref="compound">__pyx_obj_7svector_ValueIterator</ref><sp/>*)__pyx_v_self)-&gt;v<sp/>=<sp/>__pyx_v_v;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.ValueIterator.__cinit__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="904"><highlight class="normal">}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:81</highlight></codeline>
<codeline lineno="907"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>new_svector_iterator(v.thisptr[0])</highlight></codeline>
<codeline lineno="908"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.v<sp/>=<sp/>v<sp/>#<sp/>keep<sp/>reference</highlight></codeline>
<codeline lineno="909"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="910"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector_iterator(self.thisptr)</highlight></codeline>
<codeline lineno="911"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__iter__(self):</highlight></codeline>
<codeline lineno="912"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__pyx_pf_7svector_13ValueIterator___dealloc__(PyObject<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__pyx_pf_7svector_13ValueIterator___dealloc__(PyObject<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__dealloc__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:82</highlight></codeline>
<codeline lineno="919"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.v<sp/>=<sp/>v<sp/>#<sp/>keep<sp/>reference</highlight></codeline>
<codeline lineno="920"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):</highlight></codeline>
<codeline lineno="921"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector_iterator(self.thisptr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="922"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__iter__(self):</highlight></codeline>
<codeline lineno="923"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self</highlight></codeline>
<codeline lineno="924"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__ValueIterator" kindref="compound">__pyx_obj_7svector_ValueIterator</ref><sp/>*)__pyx_v_self)-&gt;thisptr);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="928"><highlight class="normal">}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:83</highlight></codeline>
<codeline lineno="931"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):</highlight></codeline>
<codeline lineno="932"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector_iterator(self.thisptr)</highlight></codeline>
<codeline lineno="933"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__iter__(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="934"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self</highlight></codeline>
<codeline lineno="935"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__next__(self):</highlight></codeline>
<codeline lineno="936"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_13ValueIterator___iter__(PyObject<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_13ValueIterator___iter__(PyObject<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__iter__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:84</highlight></codeline>
<codeline lineno="944"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector_iterator(self.thisptr)</highlight></codeline>
<codeline lineno="945"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__iter__(self):</highlight></codeline>
<codeline lineno="946"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="947"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__next__(self):</highlight></codeline>
<codeline lineno="948"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>double<sp/>value</highlight></codeline>
<codeline lineno="949"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_v_self;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:85</highlight></codeline>
<codeline lineno="963"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__iter__(self):</highlight></codeline>
<codeline lineno="964"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self</highlight></codeline>
<codeline lineno="965"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__next__(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="966"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>double<sp/>value</highlight></codeline>
<codeline lineno="967"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.thisptr.has_next():</highlight></codeline>
<codeline lineno="968"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_13ValueIterator___next__(PyObject<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_13ValueIterator___next__(PyObject<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_v_value;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__next__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:87</highlight></codeline>
<codeline lineno="979"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__next__(self):</highlight></codeline>
<codeline lineno="980"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>double<sp/>value</highlight></codeline>
<codeline lineno="981"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.thisptr.has_next():<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="982"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>self.thisptr.value()</highlight></codeline>
<codeline lineno="983"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr.next()</highlight></codeline>
<codeline lineno="984"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__ValueIterator" kindref="compound">__pyx_obj_7svector_ValueIterator</ref><sp/>*)__pyx_v_self)-&gt;thisptr-&gt;has_next();</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_1)<sp/>{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:88</highlight></codeline>
<codeline lineno="989"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>double<sp/>value</highlight></codeline>
<codeline lineno="990"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.thisptr.has_next():</highlight></codeline>
<codeline lineno="991"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>self.thisptr.value()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="992"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr.next()</highlight></codeline>
<codeline lineno="993"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>value</highlight></codeline>
<codeline lineno="994"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_value<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__ValueIterator" kindref="compound">__pyx_obj_7svector_ValueIterator</ref><sp/>*)__pyx_v_self)-&gt;thisptr-&gt;value();</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:89</highlight></codeline>
<codeline lineno="998"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.thisptr.has_next():</highlight></codeline>
<codeline lineno="999"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>self.thisptr.value()</highlight></codeline>
<codeline lineno="1000"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr.next()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1001"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>value</highlight></codeline>
<codeline lineno="1002"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="1003"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__ValueIterator" kindref="compound">__pyx_obj_7svector_ValueIterator</ref><sp/>*)__pyx_v_self)-&gt;thisptr-&gt;next();</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:90</highlight></codeline>
<codeline lineno="1007"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>self.thisptr.value()</highlight></codeline>
<codeline lineno="1008"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr.next()</highlight></codeline>
<codeline lineno="1009"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1010"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="1011"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>StopIteration()</highlight></codeline>
<codeline lineno="1012"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyFloat_FromDouble(__pyx_v_value);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>90;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*else*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:92</highlight></codeline>
<codeline lineno="1024"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>value</highlight></codeline>
<codeline lineno="1025"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="1026"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>StopIteration()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1027"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1028"><highlight class="comment"><sp/>*<sp/>cdef<sp/>class<sp/>KeyValueIterator:</highlight></codeline>
<codeline lineno="1029"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_Call(__pyx_builtin_StopIteration,<sp/>((PyObject<sp/>*)__pyx_empty_tuple),<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>92;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_t_2,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>92;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/>__pyx_L5:;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.ValueIterator.__next__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:98</highlight></codeline>
<codeline lineno="1051"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>v</highlight></codeline>
<codeline lineno="1052"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1053"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__cinit__(self,<sp/>Vector<sp/>v):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1054"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>new_svector_iterator(v.thisptr[0])</highlight></codeline>
<codeline lineno="1055"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.v<sp/>=<sp/>v<sp/>#<sp/>keep<sp/>reference</highlight></codeline>
<codeline lineno="1056"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_7svector_16KeyValueIterator___cinit__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_7svector_16KeyValueIterator___cinit__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds)<sp/>{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*__pyx_v_v<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>**__pyx_pyargnames[]<sp/>=<sp/>{&amp;__pyx_kp_v,0};</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__cinit__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_kwds))<sp/>{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>kw_args<sp/>=<sp/>PyDict_Size(__pyx_kwds);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>values[1]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args))<sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args))<sp/>{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[0]<sp/>=<sp/>PyDict_GetItem(__pyx_kwds,<sp/>__pyx_kp_v);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(values[0]))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(kw_args<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds,<sp/>__pyx_pyargnames,<sp/>0,<sp/>values,<sp/>PyTuple_GET_SIZE(__pyx_args),<sp/></highlight><highlight class="stringliteral">&quot;__cinit__&quot;</highlight><highlight class="normal">)<sp/>&lt;<sp/>0))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>98;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L3_error;}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)values[0]);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)PyTuple_GET_ITEM(__pyx_args,<sp/>0));</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_argument_unpacking_done;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/>__pyx_L5_argtuple_error:;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;__cinit__&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>1,<sp/>PyTuple_GET_SIZE(__pyx_args));<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>98;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L3_error;}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/>__pyx_L3_error:;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.KeyValueIterator.__cinit__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/>__pyx_L4_argument_unpacking_done:;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__Pyx_ArgTypeTest(((PyObject<sp/>*)__pyx_v_v),<sp/>__pyx_ptype_7svector_Vector,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">,<sp/>0)))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>98;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:99</highlight></codeline>
<codeline lineno="1097"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1098"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__cinit__(self,<sp/>Vector<sp/>v):</highlight></codeline>
<codeline lineno="1099"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>new_svector_iterator(v.thisptr[0])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1100"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.v<sp/>=<sp/>v<sp/>#<sp/>keep<sp/>reference</highlight></codeline>
<codeline lineno="1101"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):</highlight></codeline>
<codeline lineno="1102"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyValueIterator" kindref="compound">__pyx_obj_7svector_KeyValueIterator</ref><sp/>*)__pyx_v_self)-&gt;thisptr<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>svector_iterator&lt;int,double&gt;((__pyx_v_v-&gt;thisptr[0]));</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:100</highlight></codeline>
<codeline lineno="1106"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__cinit__(self,<sp/>Vector<sp/>v):</highlight></codeline>
<codeline lineno="1107"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>new_svector_iterator(v.thisptr[0])</highlight></codeline>
<codeline lineno="1108"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.v<sp/>=<sp/>v<sp/>#<sp/>keep<sp/>reference<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1109"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):</highlight></codeline>
<codeline lineno="1110"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector_iterator(self.thisptr)</highlight></codeline>
<codeline lineno="1111"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)__pyx_v_v));</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(((PyObject<sp/>*)__pyx_v_v));</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct____pyx__obj__7svector__KeyValueIterator" kindref="compound">__pyx_obj_7svector_KeyValueIterator</ref><sp/>*)__pyx_v_self)-&gt;v);</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct____pyx__obj__7svector__KeyValueIterator" kindref="compound">__pyx_obj_7svector_KeyValueIterator</ref><sp/>*)__pyx_v_self)-&gt;v));</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyValueIterator" kindref="compound">__pyx_obj_7svector_KeyValueIterator</ref><sp/>*)__pyx_v_self)-&gt;v<sp/>=<sp/>__pyx_v_v;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.KeyValueIterator.__cinit__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:101</highlight></codeline>
<codeline lineno="1129"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>new_svector_iterator(v.thisptr[0])</highlight></codeline>
<codeline lineno="1130"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.v<sp/>=<sp/>v<sp/>#<sp/>keep<sp/>reference</highlight></codeline>
<codeline lineno="1131"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1132"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector_iterator(self.thisptr)</highlight></codeline>
<codeline lineno="1133"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__iter__(self):</highlight></codeline>
<codeline lineno="1134"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__pyx_pf_7svector_16KeyValueIterator___dealloc__(PyObject<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__pyx_pf_7svector_16KeyValueIterator___dealloc__(PyObject<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__dealloc__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:102</highlight></codeline>
<codeline lineno="1141"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.v<sp/>=<sp/>v<sp/>#<sp/>keep<sp/>reference</highlight></codeline>
<codeline lineno="1142"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):</highlight></codeline>
<codeline lineno="1143"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector_iterator(self.thisptr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1144"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__iter__(self):</highlight></codeline>
<codeline lineno="1145"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self</highlight></codeline>
<codeline lineno="1146"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyValueIterator" kindref="compound">__pyx_obj_7svector_KeyValueIterator</ref><sp/>*)__pyx_v_self)-&gt;thisptr);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="1150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:103</highlight></codeline>
<codeline lineno="1153"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):</highlight></codeline>
<codeline lineno="1154"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector_iterator(self.thisptr)</highlight></codeline>
<codeline lineno="1155"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__iter__(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1156"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self</highlight></codeline>
<codeline lineno="1157"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__next__(self):</highlight></codeline>
<codeline lineno="1158"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_16KeyValueIterator___iter__(PyObject<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_16KeyValueIterator___iter__(PyObject<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__iter__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:104</highlight></codeline>
<codeline lineno="1166"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector_iterator(self.thisptr)</highlight></codeline>
<codeline lineno="1167"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__iter__(self):</highlight></codeline>
<codeline lineno="1168"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1169"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__next__(self):</highlight></codeline>
<codeline lineno="1170"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>c_string<sp/>key</highlight></codeline>
<codeline lineno="1171"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_v_self;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:105</highlight></codeline>
<codeline lineno="1185"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__iter__(self):</highlight></codeline>
<codeline lineno="1186"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self</highlight></codeline>
<codeline lineno="1187"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__next__(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1188"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>c_string<sp/>key</highlight></codeline>
<codeline lineno="1189"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>double<sp/>value</highlight></codeline>
<codeline lineno="1190"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_16KeyValueIterator___next__(PyObject<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_16KeyValueIterator___next__(PyObject<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/>std::string<sp/>__pyx_v_key;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_v_value;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/>std::string<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_3<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_4<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_5<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__next__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:108</highlight></codeline>
<codeline lineno="1205"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>c_string<sp/>key</highlight></codeline>
<codeline lineno="1206"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>double<sp/>value</highlight></codeline>
<codeline lineno="1207"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.thisptr.has_next():<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1208"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>self.thisptr.key()</highlight></codeline>
<codeline lineno="1209"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>self.thisptr.value()</highlight></codeline>
<codeline lineno="1210"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyValueIterator" kindref="compound">__pyx_obj_7svector_KeyValueIterator</ref><sp/>*)__pyx_v_self)-&gt;thisptr-&gt;has_next();</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_1)<sp/>{</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:109</highlight></codeline>
<codeline lineno="1215"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>double<sp/>value</highlight></codeline>
<codeline lineno="1216"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.thisptr.has_next():</highlight></codeline>
<codeline lineno="1217"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>self.thisptr.key()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1218"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>self.thisptr.value()</highlight></codeline>
<codeline lineno="1219"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr.next()</highlight></codeline>
<codeline lineno="1220"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{__pyx_t_2<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyValueIterator" kindref="compound">__pyx_obj_7svector_KeyValueIterator</ref><sp/>*)__pyx_v_self)-&gt;thisptr-&gt;key();}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(...)<sp/>{__Pyx_CppExn2PyErr();<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>109;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}}</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_key<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:110</highlight></codeline>
<codeline lineno="1225"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.thisptr.has_next():</highlight></codeline>
<codeline lineno="1226"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>self.thisptr.key()</highlight></codeline>
<codeline lineno="1227"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>self.thisptr.value()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1228"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr.next()</highlight></codeline>
<codeline lineno="1229"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(key.c_str(),<sp/>value)</highlight></codeline>
<codeline lineno="1230"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_value<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyValueIterator" kindref="compound">__pyx_obj_7svector_KeyValueIterator</ref><sp/>*)__pyx_v_self)-&gt;thisptr-&gt;value();</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:111</highlight></codeline>
<codeline lineno="1234"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>self.thisptr.key()</highlight></codeline>
<codeline lineno="1235"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>self.thisptr.value()</highlight></codeline>
<codeline lineno="1236"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr.next()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1237"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(key.c_str(),<sp/>value)</highlight></codeline>
<codeline lineno="1238"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="1239"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyValueIterator" kindref="compound">__pyx_obj_7svector_KeyValueIterator</ref><sp/>*)__pyx_v_self)-&gt;thisptr-&gt;next();</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:112</highlight></codeline>
<codeline lineno="1243"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>self.thisptr.value()</highlight></codeline>
<codeline lineno="1244"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr.next()</highlight></codeline>
<codeline lineno="1245"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(key.c_str(),<sp/>value)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1246"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="1247"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>StopIteration()</highlight></codeline>
<codeline lineno="1248"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_PyBytes_FromString(__pyx_v_key.c_str());<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>112;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyFloat_FromDouble(__pyx_v_value);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>112;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyTuple_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>112;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_5));</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_5,<sp/>0,<sp/>__pyx_t_3);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_5,<sp/>1,<sp/>__pyx_t_4);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_r<sp/>=<sp/>((PyObject<sp/>*)__pyx_t_5);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*else*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:114</highlight></codeline>
<codeline lineno="1270"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(key.c_str(),<sp/>value)</highlight></codeline>
<codeline lineno="1271"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="1272"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>StopIteration()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1273"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1274"><highlight class="comment"><sp/>*<sp/>cdef<sp/>class<sp/>Vector:</highlight></codeline>
<codeline lineno="1275"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyObject_Call(__pyx_builtin_StopIteration,<sp/>((PyObject<sp/>*)__pyx_empty_tuple),<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>114;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_t_5,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>114;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/>__pyx_L5:;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.KeyValueIterator.__next__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:119</highlight></codeline>
<codeline lineno="1299"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>c_svector<sp/>*thisptr</highlight></codeline>
<codeline lineno="1300"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1301"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>*args):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1302"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>vx</highlight></codeline>
<codeline lineno="1303"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>c_string<sp/>s</highlight></codeline>
<codeline lineno="1304"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_7svector_6Vector___init__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_7svector_6Vector___init__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds)<sp/>{</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_args<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*__pyx_v_vx;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/>std::string<sp/>__pyx_v_s;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_x;</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_f;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_v;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/>Py_ssize_t<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_t_3;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_4<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_5<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_t_6;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_kwds)<sp/>&amp;&amp;<sp/>unlikely(PyDict_Size(__pyx_kwds)<sp/>&gt;<sp/>0)<sp/>&amp;&amp;<sp/>unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds,<sp/></highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">,<sp/>0)))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_args);</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/>__pyx_v_args<sp/>=<sp/>__pyx_args;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/>__pyx_v_vx<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)Py_None);<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/>__pyx_v_x<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/>__pyx_v_f<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/>__pyx_v_v<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:123</highlight></codeline>
<codeline lineno="1334"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>c_string<sp/>s</highlight></codeline>
<codeline lineno="1335"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1336"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector(self.thisptr)<sp/>#<sp/>in<sp/>case<sp/>__init__<sp/>is<sp/>called<sp/>twice<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1337"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1338"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>len(args)<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="1339"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_self)-&gt;thisptr);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:125</highlight></codeline>
<codeline lineno="1343"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector(self.thisptr)<sp/>#<sp/>in<sp/>case<sp/>__init__<sp/>is<sp/>called<sp/>twice</highlight></codeline>
<codeline lineno="1344"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1345"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>len(args)<sp/>==<sp/>0:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1346"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>new_svector()</highlight></codeline>
<codeline lineno="1347"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>len(args)<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="1348"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyObject_Length(__pyx_v_args);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_1<sp/>==<sp/>-1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>125;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>(__pyx_t_1<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_2)<sp/>{</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:126</highlight></codeline>
<codeline lineno="1354"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1355"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>len(args)<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="1356"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>new_svector()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1357"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>len(args)<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="1358"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>args[0]</highlight></codeline>
<codeline lineno="1359"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_self)-&gt;thisptr<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>svector&lt;int,double&gt;();</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:127</highlight></codeline>
<codeline lineno="1365"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>len(args)<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="1366"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>new_svector()</highlight></codeline>
<codeline lineno="1367"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>len(args)<sp/>==<sp/>1:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1368"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>args[0]</highlight></codeline>
<codeline lineno="1369"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>isinstance(x,<sp/>str):</highlight></codeline>
<codeline lineno="1370"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyObject_Length(__pyx_v_args);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_1<sp/>==<sp/>-1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>127;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>(__pyx_t_1<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_2)<sp/>{</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:128</highlight></codeline>
<codeline lineno="1376"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>new_svector()</highlight></codeline>
<codeline lineno="1377"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>len(args)<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="1378"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>args[0]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1379"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>isinstance(x,<sp/>str):</highlight></codeline>
<codeline lineno="1380"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.assign(x)</highlight></codeline>
<codeline lineno="1381"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_1<sp/>=<sp/>__Pyx_GetItemInt(__pyx_v_args,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">),<sp/>PyInt_FromLong);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_1)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>128;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_1);</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_v_x);</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_x<sp/>=<sp/>__pyx_1;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:129</highlight></codeline>
<codeline lineno="1389"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>len(args)<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="1390"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>args[0]</highlight></codeline>
<codeline lineno="1391"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>isinstance(x,<sp/>str):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1392"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.assign(x)</highlight></codeline>
<codeline lineno="1393"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>svector_from_str(s)</highlight></codeline>
<codeline lineno="1394"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_TypeCheck(__pyx_v_x,<sp/>((PyTypeObject<sp/>*)((PyObject*)&amp;PyString_Type)));<sp/></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_2)<sp/>{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:130</highlight></codeline>
<codeline lineno="1399"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>args[0]</highlight></codeline>
<codeline lineno="1400"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>isinstance(x,<sp/>str):</highlight></codeline>
<codeline lineno="1401"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.assign(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1402"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>svector_from_str(s)</highlight></codeline>
<codeline lineno="1403"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>isinstance(x,<sp/>Vector):</highlight></codeline>
<codeline lineno="1404"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_PyBytes_AsString(__pyx_v_x);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((!__pyx_t_3)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>130;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_v_s.assign(__pyx_t_3);</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:131</highlight></codeline>
<codeline lineno="1409"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>isinstance(x,<sp/>str):</highlight></codeline>
<codeline lineno="1410"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.assign(x)</highlight></codeline>
<codeline lineno="1411"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>svector_from_str(s)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1412"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>isinstance(x,<sp/>Vector):</highlight></codeline>
<codeline lineno="1413"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vx<sp/>=<sp/>x</highlight></codeline>
<codeline lineno="1414"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_self)-&gt;thisptr<sp/>=<sp/>svector_from_str&lt;int,double&gt;(__pyx_v_s);</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L6;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:132</highlight></codeline>
<codeline lineno="1420"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.assign(x)</highlight></codeline>
<codeline lineno="1421"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>svector_from_str(s)</highlight></codeline>
<codeline lineno="1422"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>isinstance(x,<sp/>Vector):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1423"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vx<sp/>=<sp/>x</highlight></codeline>
<codeline lineno="1424"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>copy_svector(vx.thisptr[0])</highlight></codeline>
<codeline lineno="1425"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_TypeCheck(__pyx_v_x,<sp/>((PyTypeObject<sp/>*)((PyObject*)__pyx_ptype_7svector_Vector)));<sp/></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_2)<sp/>{</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:133</highlight></codeline>
<codeline lineno="1430"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>svector_from_str(s)</highlight></codeline>
<codeline lineno="1431"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>isinstance(x,<sp/>Vector):</highlight></codeline>
<codeline lineno="1432"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vx<sp/>=<sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1433"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>copy_svector(vx.thisptr[0])</highlight></codeline>
<codeline lineno="1434"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>isinstance(x,<sp/>dict):</highlight></codeline>
<codeline lineno="1435"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(__Pyx_TypeTest(__pyx_v_x,<sp/>__pyx_ptype_7svector_Vector)))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>133;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_x);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_v_vx));</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_v_vx<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_x);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:134</highlight></codeline>
<codeline lineno="1442"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>isinstance(x,<sp/>Vector):</highlight></codeline>
<codeline lineno="1443"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vx<sp/>=<sp/>x</highlight></codeline>
<codeline lineno="1444"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>copy_svector(vx.thisptr[0])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1445"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>isinstance(x,<sp/>dict):</highlight></codeline>
<codeline lineno="1446"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>new_svector()</highlight></codeline>
<codeline lineno="1447"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_self)-&gt;thisptr<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>svector&lt;int,double&gt;((__pyx_v_vx-&gt;thisptr[0]));</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L6;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:135</highlight></codeline>
<codeline lineno="1453"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vx<sp/>=<sp/>x</highlight></codeline>
<codeline lineno="1454"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>copy_svector(vx.thisptr[0])</highlight></codeline>
<codeline lineno="1455"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>isinstance(x,<sp/>dict):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1456"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>new_svector()</highlight></codeline>
<codeline lineno="1457"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>f,v<sp/>in<sp/>x.iteritems():</highlight></codeline>
<codeline lineno="1458"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_TypeCheck(__pyx_v_x,<sp/>((PyTypeObject<sp/>*)((PyObject*)&amp;PyDict_Type)));<sp/></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_2)<sp/>{</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:136</highlight></codeline>
<codeline lineno="1463"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>copy_svector(vx.thisptr[0])</highlight></codeline>
<codeline lineno="1464"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>isinstance(x,<sp/>dict):</highlight></codeline>
<codeline lineno="1465"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>new_svector()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1466"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>f,v<sp/>in<sp/>x.iteritems():</highlight></codeline>
<codeline lineno="1467"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>svector_setitem(self.thisptr[0],<sp/>word_to_index(f),<sp/>v)</highlight></codeline>
<codeline lineno="1468"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_self)-&gt;thisptr<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>svector&lt;int,double&gt;();</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:137</highlight></codeline>
<codeline lineno="1472"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>isinstance(x,<sp/>dict):</highlight></codeline>
<codeline lineno="1473"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>new_svector()</highlight></codeline>
<codeline lineno="1474"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>f,v<sp/>in<sp/>x.iteritems():<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1475"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>svector_setitem(self.thisptr[0],<sp/>word_to_index(f),<sp/>v)</highlight></codeline>
<codeline lineno="1476"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="1477"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyObject_GetAttr(__pyx_v_x,<sp/>__pyx_kp_iteritems);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>137;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyObject_Call(__pyx_t_4,<sp/>((PyObject<sp/>*)__pyx_empty_tuple),<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>137;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyList_CheckExact(__pyx_t_5)<sp/>||<sp/>PyTuple_CheckExact(__pyx_t_5))<sp/>{</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;<sp/>__pyx_t_4<sp/>=<sp/>__pyx_t_5;<sp/>__Pyx_INCREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>-1;<sp/>__pyx_t_4<sp/>=<sp/>PyObject_GetIter(__pyx_t_5);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>137;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(__pyx_t_4)))<sp/>{</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_1<sp/>&gt;=<sp/>PyList_GET_SIZE(__pyx_t_4))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyList_GET_ITEM(__pyx_t_4,<sp/>__pyx_t_1);<sp/>__Pyx_INCREF(__pyx_t_5);<sp/>__pyx_t_1++;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyTuple_CheckExact(__pyx_t_4)))<sp/>{</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_1<sp/>&gt;=<sp/>PyTuple_GET_SIZE(__pyx_t_4))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_t_4,<sp/>__pyx_t_1);<sp/>__Pyx_INCREF(__pyx_t_5);<sp/>__pyx_t_1++;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyIter_Next(__pyx_t_4);</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_t_5)<sp/>{</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>137;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyTuple_CheckExact(__pyx_t_5)<sp/>&amp;&amp;<sp/>likely(PyTuple_GET_SIZE(__pyx_t_5)<sp/>==<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>tuple<sp/>=<sp/>__pyx_t_5;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_2<sp/>=<sp/>PyTuple_GET_ITEM(tuple,<sp/>0);<sp/>__Pyx_INCREF(__pyx_2);</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_3<sp/>=<sp/>PyTuple_GET_ITEM(tuple,<sp/>1);<sp/>__Pyx_INCREF(__pyx_3);</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_v_f);</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_v_f<sp/>=<sp/>__pyx_2;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_v_v);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_v_v<sp/>=<sp/>__pyx_3;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_1<sp/>=<sp/>PyObject_GetIter(__pyx_t_5);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>137;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_1);</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_5);<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_2<sp/>=<sp/>__Pyx_UnpackItem(__pyx_1,<sp/>0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>137;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_2);</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_3<sp/>=<sp/>__Pyx_UnpackItem(__pyx_1,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>137;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_3);</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_EndUnpack(__pyx_1)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>137;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_1);<sp/>__pyx_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_v_f);</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_v_f<sp/>=<sp/>__pyx_2;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_v_v);</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_v_v<sp/>=<sp/>__pyx_3;</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:138</highlight></codeline>
<codeline lineno="1535"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>new_svector()</highlight></codeline>
<codeline lineno="1536"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>f,v<sp/>in<sp/>x.iteritems():</highlight></codeline>
<codeline lineno="1537"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>svector_setitem(self.thisptr[0],<sp/>word_to_index(f),<sp/>v)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1538"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="1539"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>TypeError()</highlight></codeline>
<codeline lineno="1540"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_PyBytes_AsString(__pyx_v_f);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((!__pyx_t_3)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>138;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__pyx_PyFloat_AsDouble(__pyx_v_v);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>138;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>svector_setitem((((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_self)-&gt;thisptr[0]),<sp/>__pyx_f_7svector_word_to_index(__pyx_t_3),<sp/>__pyx_t_6);</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L6;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*else*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:140</highlight></codeline>
<codeline lineno="1551"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>svector_setitem(self.thisptr[0],<sp/>word_to_index(f),<sp/>v)</highlight></codeline>
<codeline lineno="1552"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="1553"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>TypeError()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1554"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>len(args)<sp/>==<sp/>2:</highlight></codeline>
<codeline lineno="1555"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f,<sp/>x<sp/>=<sp/>args</highlight></codeline>
<codeline lineno="1556"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyObject_Call(__pyx_builtin_TypeError,<sp/>((PyObject<sp/>*)__pyx_empty_tuple),<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>140;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_t_4,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>140;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_L6:;</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5;</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:141</highlight></codeline>
<codeline lineno="1568"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="1569"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>TypeError()</highlight></codeline>
<codeline lineno="1570"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>len(args)<sp/>==<sp/>2:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1571"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f,<sp/>x<sp/>=<sp/>args</highlight></codeline>
<codeline lineno="1572"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>new_svector2(word_to_index(f),<sp/>x)</highlight></codeline>
<codeline lineno="1573"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyObject_Length(__pyx_v_args);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_1<sp/>==<sp/>-1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>141;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>(__pyx_t_1<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_2)<sp/>{</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:142</highlight></codeline>
<codeline lineno="1579"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>TypeError()</highlight></codeline>
<codeline lineno="1580"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>len(args)<sp/>==<sp/>2:</highlight></codeline>
<codeline lineno="1581"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f,<sp/>x<sp/>=<sp/>args<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1582"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>new_svector2(word_to_index(f),<sp/>x)</highlight></codeline>
<codeline lineno="1583"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="1584"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyTuple_CheckExact(__pyx_v_args)<sp/>&amp;&amp;<sp/>likely(PyTuple_GET_SIZE(__pyx_v_args)<sp/>==<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>tuple<sp/>=<sp/>__pyx_v_args;</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_2<sp/>=<sp/>PyTuple_GET_ITEM(tuple,<sp/>0);<sp/>__Pyx_INCREF(__pyx_2);</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_3<sp/>=<sp/>PyTuple_GET_ITEM(tuple,<sp/>1);<sp/>__Pyx_INCREF(__pyx_3);</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_v_f);</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_v_f<sp/>=<sp/>__pyx_2;</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_v_x);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_v_x<sp/>=<sp/>__pyx_3;</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_1<sp/>=<sp/>PyObject_GetIter(__pyx_v_args);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>142;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_1);</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_2<sp/>=<sp/>__Pyx_UnpackItem(__pyx_1,<sp/>0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>142;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_2);</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_3<sp/>=<sp/>__Pyx_UnpackItem(__pyx_1,<sp/>1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>142;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_3);</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_EndUnpack(__pyx_1)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>142;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_1);<sp/>__pyx_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_v_f);</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_v_f<sp/>=<sp/>__pyx_2;</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_v_x);</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_v_x<sp/>=<sp/>__pyx_3;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:143</highlight></codeline>
<codeline lineno="1613"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>len(args)<sp/>==<sp/>2:</highlight></codeline>
<codeline lineno="1614"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f,<sp/>x<sp/>=<sp/>args</highlight></codeline>
<codeline lineno="1615"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>new_svector2(word_to_index(f),<sp/>x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1616"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="1617"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>TypeError()</highlight></codeline>
<codeline lineno="1618"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_PyBytes_AsString(__pyx_v_f);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((!__pyx_t_3)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>143;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__pyx_PyFloat_AsDouble(__pyx_v_x);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>143;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_self)-&gt;thisptr<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>svector&lt;int,double&gt;(__pyx_f_7svector_word_to_index(__pyx_t_3),<sp/>__pyx_t_6);</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*else*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:145</highlight></codeline>
<codeline lineno="1627"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr<sp/>=<sp/>new_svector2(word_to_index(f),<sp/>x)</highlight></codeline>
<codeline lineno="1628"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="1629"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>TypeError()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1630"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1631"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):</highlight></codeline>
<codeline lineno="1632"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyObject_Call(__pyx_builtin_TypeError,<sp/>((PyObject<sp/>*)__pyx_empty_tuple),<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>145;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_t_4,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>145;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/>__pyx_L5:;</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_1);</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_2);</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_3);</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.Vector.__init__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_args);</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/>__Pyx_DECREF((PyObject<sp/>*)__pyx_v_vx);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_x);</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_f);</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_v);</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:147</highlight></codeline>
<codeline lineno="1662"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>TypeError()</highlight></codeline>
<codeline lineno="1663"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1664"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1665"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector(self.thisptr)</highlight></codeline>
<codeline lineno="1666"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1667"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__pyx_pf_7svector_6Vector___dealloc__(PyObject<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__pyx_pf_7svector_6Vector___dealloc__(PyObject<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__dealloc__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:148</highlight></codeline>
<codeline lineno="1674"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1675"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):</highlight></codeline>
<codeline lineno="1676"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector(self.thisptr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1677"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1678"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__copy__(self):</highlight></codeline>
<codeline lineno="1679"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_self)-&gt;thisptr);</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="1683"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:150</highlight></codeline>
<codeline lineno="1686"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector(self.thisptr)</highlight></codeline>
<codeline lineno="1687"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1688"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__copy__(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1689"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>Vector(self)</highlight></codeline>
<codeline lineno="1690"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1691"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___copy__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*unused);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___copy__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*unused)<sp/>{</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__copy__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:151</highlight></codeline>
<codeline lineno="1701"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1702"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__copy__(self):</highlight></codeline>
<codeline lineno="1703"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>Vector(self)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1704"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1705"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__str__(self):</highlight></codeline>
<codeline lineno="1706"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>151;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_1));</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>0,<sp/>__pyx_v_self);</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_Call(((PyObject<sp/>*)((PyObject*)__pyx_ptype_7svector_Vector)),<sp/>((PyObject<sp/>*)__pyx_t_1),<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>151;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_1));<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.Vector.__copy__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="1731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:153</highlight></codeline>
<codeline lineno="1734"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>Vector(self)</highlight></codeline>
<codeline lineno="1735"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1736"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__str__(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1737"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>c_string<sp/>cs<sp/>=<sp/>svector_str(self.thisptr[0])</highlight></codeline>
<codeline lineno="1738"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>cs.c_str()</highlight></codeline>
<codeline lineno="1739"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___str__(PyObject<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___str__(PyObject<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/>std::string<sp/>__pyx_v_cs;</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/>std::string<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__str__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:154</highlight></codeline>
<codeline lineno="1750"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1751"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__str__(self):</highlight></codeline>
<codeline lineno="1752"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>c_string<sp/>cs<sp/>=<sp/>svector_str(self.thisptr[0])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1753"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>cs.c_str()</highlight></codeline>
<codeline lineno="1754"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1755"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{__pyx_t_1<sp/>=<sp/>svector_str((((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_self)-&gt;thisptr[0]));}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(...)<sp/>{__Pyx_CppExn2PyErr();<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>154;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}}</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/>__pyx_v_cs<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:155</highlight></codeline>
<codeline lineno="1760"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__str__(self):</highlight></codeline>
<codeline lineno="1761"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>c_string<sp/>cs<sp/>=<sp/>svector_str(self.thisptr[0])</highlight></codeline>
<codeline lineno="1762"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>cs.c_str()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1763"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1764"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__reduce__(self):</highlight></codeline>
<codeline lineno="1765"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyBytes_FromString(__pyx_v_cs.c_str());<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>155;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.Vector.__str__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="1783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:157</highlight></codeline>
<codeline lineno="1786"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>cs.c_str()</highlight></codeline>
<codeline lineno="1787"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1788"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__reduce__(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1789"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>c_string<sp/>cs<sp/>=<sp/>svector_str(self.thisptr[0])</highlight></codeline>
<codeline lineno="1790"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(Vector,<sp/>(cs.c_str(),))</highlight></codeline>
<codeline lineno="1791"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___reduce__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*unused);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___reduce__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*unused)<sp/>{</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/>std::string<sp/>__pyx_v_cs;</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/>std::string<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_3<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__reduce__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:158</highlight></codeline>
<codeline lineno="1803"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1804"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__reduce__(self):</highlight></codeline>
<codeline lineno="1805"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>c_string<sp/>cs<sp/>=<sp/>svector_str(self.thisptr[0])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1806"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(Vector,<sp/>(cs.c_str(),))</highlight></codeline>
<codeline lineno="1807"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1808"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{__pyx_t_1<sp/>=<sp/>svector_str((((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_self)-&gt;thisptr[0]));}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(...)<sp/>{__Pyx_CppExn2PyErr();<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>158;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}}</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/>__pyx_v_cs<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:159</highlight></codeline>
<codeline lineno="1813"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__reduce__(self):</highlight></codeline>
<codeline lineno="1814"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>c_string<sp/>cs<sp/>=<sp/>svector_str(self.thisptr[0])</highlight></codeline>
<codeline lineno="1815"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(Vector,<sp/>(cs.c_str(),))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1816"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1817"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>container<sp/>interface</highlight></codeline>
<codeline lineno="1818"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyBytes_FromString(__pyx_v_cs.c_str());<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>159;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>159;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_3));</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>0,<sp/>__pyx_t_2);</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyTuple_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>159;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_2));</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)((PyObject*)__pyx_ptype_7svector_Vector)));</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_2,<sp/>0,<sp/>((PyObject<sp/>*)((PyObject*)__pyx_ptype_7svector_Vector)));</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(((PyObject<sp/>*)((PyObject*)__pyx_ptype_7svector_Vector)));</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_2,<sp/>1,<sp/>((PyObject<sp/>*)__pyx_t_3));</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(((PyObject<sp/>*)__pyx_t_3));</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>((PyObject<sp/>*)__pyx_t_2);</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.Vector.__reduce__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="1850"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:163</highlight></codeline>
<codeline lineno="1853"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>container<sp/>interface</highlight></codeline>
<codeline lineno="1854"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1855"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__len__(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1856"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self.thisptr.size()</highlight></codeline>
<codeline lineno="1857"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1858"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Py_ssize_t<sp/>__pyx_pf_7svector_6Vector___len__(PyObject<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Py_ssize_t<sp/>__pyx_pf_7svector_6Vector___len__(PyObject<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/>Py_ssize_t<sp/>__pyx_r;</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__len__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"></highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:164</highlight></codeline>
<codeline lineno="1866"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1867"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__len__(self):</highlight></codeline>
<codeline lineno="1868"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self.thisptr.size()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1869"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1870"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__setitem__(self,<sp/>char<sp/>*f,<sp/>double<sp/>x):</highlight></codeline>
<codeline lineno="1871"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_self)-&gt;thisptr-&gt;size();</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="1879"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:166</highlight></codeline>
<codeline lineno="1882"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self.thisptr.size()</highlight></codeline>
<codeline lineno="1883"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1884"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__setitem__(self,<sp/>char<sp/>*f,<sp/>double<sp/>x):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1885"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>svector_setitem(self.thisptr[0],<sp/>word_to_index(f),<sp/>x)</highlight></codeline>
<codeline lineno="1886"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1887"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_7svector_6Vector___setitem__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_arg_f,<sp/>PyObject<sp/>*__pyx_arg_x);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_7svector_6Vector___setitem__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_arg_f,<sp/>PyObject<sp/>*__pyx_arg_x)<sp/>{</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_v_f;</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_v_x;</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__setitem__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/>assert(__pyx_arg_f);<sp/>{</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_f<sp/>=<sp/>__Pyx_PyBytes_AsString(__pyx_arg_f);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((!__pyx_v_f)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>166;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L3_error;}</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/>assert(__pyx_arg_x);<sp/>{</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_x<sp/>=<sp/>__pyx_PyFloat_AsDouble(__pyx_arg_x);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>166;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L3_error;}</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_argument_unpacking_done;</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/>__pyx_L3_error:;</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.Vector.__setitem__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/>__pyx_L4_argument_unpacking_done:;</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:167</highlight></codeline>
<codeline lineno="1908"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1909"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__setitem__(self,<sp/>char<sp/>*f,<sp/>double<sp/>x):</highlight></codeline>
<codeline lineno="1910"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>svector_setitem(self.thisptr[0],<sp/>word_to_index(f),<sp/>x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1911"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1912"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__getitem__(self,<sp/>char<sp/>*f):</highlight></codeline>
<codeline lineno="1913"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/>svector_setitem((((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_self)-&gt;thisptr[0]),<sp/>__pyx_f_7svector_word_to_index(__pyx_v_f),<sp/>__pyx_v_x);</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="1919"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:169</highlight></codeline>
<codeline lineno="1922"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>svector_setitem(self.thisptr[0],<sp/>word_to_index(f),<sp/>x)</highlight></codeline>
<codeline lineno="1923"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1924"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__getitem__(self,<sp/>char<sp/>*f):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1925"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>svector_getitem(self.thisptr[0],<sp/>word_to_index(f))</highlight></codeline>
<codeline lineno="1926"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1927"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___getitem__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_arg_f);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___getitem__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_arg_f)<sp/>{</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_v_f;</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__getitem__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/>assert(__pyx_arg_f);<sp/>{</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_f<sp/>=<sp/>__Pyx_PyBytes_AsString(__pyx_arg_f);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((!__pyx_v_f)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>169;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L3_error;}</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_argument_unpacking_done;</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/>__pyx_L3_error:;</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.Vector.__getitem__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/>__pyx_L4_argument_unpacking_done:;</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:170</highlight></codeline>
<codeline lineno="1945"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1946"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__getitem__(self,<sp/>char<sp/>*f):</highlight></codeline>
<codeline lineno="1947"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>svector_getitem(self.thisptr[0],<sp/>word_to_index(f))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1948"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1949"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__delitem__(self,<sp/>char<sp/>*f):</highlight></codeline>
<codeline lineno="1950"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyFloat_FromDouble(svector_getitem((((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_self)-&gt;thisptr[0]),<sp/>__pyx_f_7svector_word_to_index(__pyx_v_f)));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>170;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.Vector.__getitem__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="1968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:172</highlight></codeline>
<codeline lineno="1971"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>svector_getitem(self.thisptr[0],<sp/>word_to_index(f))</highlight></codeline>
<codeline lineno="1972"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1973"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__delitem__(self,<sp/>char<sp/>*f):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1974"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr.erase(word_to_index(f))</highlight></codeline>
<codeline lineno="1975"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1976"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1977"><highlight class="normal"></highlight></codeline>
<codeline lineno="1978"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_7svector_6Vector___delitem__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_arg_f);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1979"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_7svector_6Vector___delitem__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_arg_f)<sp/>{</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_v_f;</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__delitem__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/>assert(__pyx_arg_f);<sp/>{</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_f<sp/>=<sp/>__Pyx_PyBytes_AsString(__pyx_arg_f);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((!__pyx_v_f)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>172;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L3_error;}</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_argument_unpacking_done;</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/>__pyx_L3_error:;</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.Vector.__delitem__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/>__pyx_L4_argument_unpacking_done:;</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:173</highlight></codeline>
<codeline lineno="1993"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1994"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__delitem__(self,<sp/>char<sp/>*f):</highlight></codeline>
<codeline lineno="1995"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr.erase(word_to_index(f))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1996"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1997"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__iter__(self):</highlight></codeline>
<codeline lineno="1998"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_self)-&gt;thisptr-&gt;erase(__pyx_f_7svector_word_to_index(__pyx_v_f));</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2004"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"></highlight></codeline>
<codeline lineno="2006"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:175</highlight></codeline>
<codeline lineno="2007"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr.erase(word_to_index(f))</highlight></codeline>
<codeline lineno="2008"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2009"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__iter__(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2010"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>KeyIterator(self)</highlight></codeline>
<codeline lineno="2011"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2012"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___iter__(PyObject<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___iter__(PyObject<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__iter__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:176</highlight></codeline>
<codeline lineno="2022"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2023"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__iter__(self):</highlight></codeline>
<codeline lineno="2024"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>KeyIterator(self)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2025"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2026"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>iterkeys(self):</highlight></codeline>
<codeline lineno="2027"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>176;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_1));</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>0,<sp/>__pyx_v_self);</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_Call(((PyObject<sp/>*)((PyObject*)__pyx_ptype_7svector_KeyIterator)),<sp/>((PyObject<sp/>*)__pyx_t_1),<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>176;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_1));<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.Vector.__iter__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2052"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"></highlight></codeline>
<codeline lineno="2054"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:178</highlight></codeline>
<codeline lineno="2055"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>KeyIterator(self)</highlight></codeline>
<codeline lineno="2056"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2057"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>iterkeys(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2058"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>KeyIterator(self)</highlight></codeline>
<codeline lineno="2059"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2060"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2061"><highlight class="normal"></highlight></codeline>
<codeline lineno="2062"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector_iterkeys(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*unused);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector_iterkeys(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*unused)<sp/>{</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;iterkeys&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:179</highlight></codeline>
<codeline lineno="2070"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2071"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>iterkeys(self):</highlight></codeline>
<codeline lineno="2072"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>KeyIterator(self)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2073"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2074"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>itervalues(self):</highlight></codeline>
<codeline lineno="2075"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>179;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_1));</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>0,<sp/>__pyx_v_self);</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_Call(((PyObject<sp/>*)((PyObject*)__pyx_ptype_7svector_KeyIterator)),<sp/>((PyObject<sp/>*)__pyx_t_1),<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>179;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_1));<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"></highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.Vector.iterkeys&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:181</highlight></codeline>
<codeline lineno="2103"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>KeyIterator(self)</highlight></codeline>
<codeline lineno="2104"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2105"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>itervalues(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2106"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>ValueIterator(self)</highlight></codeline>
<codeline lineno="2107"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2108"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"></highlight></codeline>
<codeline lineno="2110"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector_itervalues(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*unused);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2111"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector_itervalues(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*unused)<sp/>{</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;itervalues&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:182</highlight></codeline>
<codeline lineno="2118"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2119"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>itervalues(self):</highlight></codeline>
<codeline lineno="2120"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>ValueIterator(self)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2121"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2122"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>iteritems(self):</highlight></codeline>
<codeline lineno="2123"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>182;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_1));</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>0,<sp/>__pyx_v_self);</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_Call(((PyObject<sp/>*)((PyObject*)__pyx_ptype_7svector_ValueIterator)),<sp/>((PyObject<sp/>*)__pyx_t_1),<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>182;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_1));<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"></highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.Vector.itervalues&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"></highlight></codeline>
<codeline lineno="2150"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:184</highlight></codeline>
<codeline lineno="2151"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>ValueIterator(self)</highlight></codeline>
<codeline lineno="2152"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2153"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>iteritems(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2154"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>KeyValueIterator(self)</highlight></codeline>
<codeline lineno="2155"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2156"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"></highlight></codeline>
<codeline lineno="2158"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector_iteritems(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*unused);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector_iteritems(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*unused)<sp/>{</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;iteritems&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:185</highlight></codeline>
<codeline lineno="2166"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2167"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>iteritems(self):</highlight></codeline>
<codeline lineno="2168"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>KeyValueIterator(self)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2169"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2170"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__contains__(self,<sp/>char<sp/>*f):</highlight></codeline>
<codeline lineno="2171"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>185;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_1));</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>0,<sp/>__pyx_v_self);</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_Call(((PyObject<sp/>*)((PyObject*)__pyx_ptype_7svector_KeyValueIterator)),<sp/>((PyObject<sp/>*)__pyx_t_1),<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>185;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_1));<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"></highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.Vector.iteritems&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"></highlight></codeline>
<codeline lineno="2198"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:187</highlight></codeline>
<codeline lineno="2199"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>KeyValueIterator(self)</highlight></codeline>
<codeline lineno="2200"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2201"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__contains__(self,<sp/>char<sp/>*f):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2202"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>svector_contains(self.thisptr[0],<sp/>word_to_index(f))</highlight></codeline>
<codeline lineno="2203"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2204"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2205"><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_7svector_6Vector___contains__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_arg_f);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2207"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_7svector_6Vector___contains__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_arg_f)<sp/>{</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_v_f;</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__contains__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/>assert(__pyx_arg_f);<sp/>{</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_f<sp/>=<sp/>__Pyx_PyBytes_AsString(__pyx_arg_f);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((!__pyx_v_f)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>187;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L3_error;}</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_argument_unpacking_done;</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/>__pyx_L3_error:;</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.Vector.__contains__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/>__pyx_L4_argument_unpacking_done:;</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"></highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:188</highlight></codeline>
<codeline lineno="2221"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2222"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__contains__(self,<sp/>char<sp/>*f):</highlight></codeline>
<codeline lineno="2223"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>svector_contains(self.thisptr[0],<sp/>word_to_index(f))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2224"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2225"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>algebraic<sp/>operations</highlight></codeline>
<codeline lineno="2226"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>svector_contains((((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_self)-&gt;thisptr[0]),<sp/>__pyx_f_7svector_word_to_index(__pyx_v_f));</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"></highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:192</highlight></codeline>
<codeline lineno="2237"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>algebraic<sp/>operations</highlight></codeline>
<codeline lineno="2238"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2239"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__iadd__(self,<sp/>Vector<sp/>other):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2240"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr.iadd(other.thisptr[0])</highlight></codeline>
<codeline lineno="2241"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self</highlight></codeline>
<codeline lineno="2242"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2243"><highlight class="normal"></highlight></codeline>
<codeline lineno="2244"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___iadd__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_other);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2245"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___iadd__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_other)<sp/>{</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__iadd__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__Pyx_ArgTypeTest(((PyObject<sp/>*)__pyx_v_other),<sp/>__pyx_ptype_7svector_Vector,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;other&quot;</highlight><highlight class="normal">,<sp/>0)))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>192;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:193</highlight></codeline>
<codeline lineno="2251"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2252"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__iadd__(self,<sp/>Vector<sp/>other):</highlight></codeline>
<codeline lineno="2253"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr.iadd(other.thisptr[0])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2254"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self</highlight></codeline>
<codeline lineno="2255"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2256"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_self)-&gt;thisptr-&gt;operator+=((((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_other)-&gt;thisptr[0]));</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"></highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:194</highlight></codeline>
<codeline lineno="2260"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__iadd__(self,<sp/>Vector<sp/>other):</highlight></codeline>
<codeline lineno="2261"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr.iadd(other.thisptr[0])</highlight></codeline>
<codeline lineno="2262"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2263"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2264"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__isub__(self,<sp/>Vector<sp/>other):</highlight></codeline>
<codeline lineno="2265"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_v_self;</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.Vector.__iadd__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"></highlight></codeline>
<codeline lineno="2282"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:196</highlight></codeline>
<codeline lineno="2283"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self</highlight></codeline>
<codeline lineno="2284"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2285"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__isub__(self,<sp/>Vector<sp/>other):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2286"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr.isub(other.thisptr[0])</highlight></codeline>
<codeline lineno="2287"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self</highlight></codeline>
<codeline lineno="2288"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2289"><highlight class="normal"></highlight></codeline>
<codeline lineno="2290"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___isub__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_other);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___isub__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_other)<sp/>{</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__isub__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__Pyx_ArgTypeTest(((PyObject<sp/>*)__pyx_v_other),<sp/>__pyx_ptype_7svector_Vector,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;other&quot;</highlight><highlight class="normal">,<sp/>0)))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>196;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"></highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:197</highlight></codeline>
<codeline lineno="2297"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2298"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__isub__(self,<sp/>Vector<sp/>other):</highlight></codeline>
<codeline lineno="2299"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr.isub(other.thisptr[0])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2300"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self</highlight></codeline>
<codeline lineno="2301"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2302"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_self)-&gt;thisptr-&gt;operator-=((((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_other)-&gt;thisptr[0]));</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"></highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:198</highlight></codeline>
<codeline lineno="2306"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__isub__(self,<sp/>Vector<sp/>other):</highlight></codeline>
<codeline lineno="2307"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr.isub(other.thisptr[0])</highlight></codeline>
<codeline lineno="2308"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2309"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2310"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__imul__(self,<sp/>other):</highlight></codeline>
<codeline lineno="2311"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_v_self;</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"></highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.Vector.__isub__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"></highlight></codeline>
<codeline lineno="2328"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:200</highlight></codeline>
<codeline lineno="2329"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self</highlight></codeline>
<codeline lineno="2330"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2331"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__imul__(self,<sp/>other):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2332"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>isinstance(other,<sp/>Vector):</highlight></codeline>
<codeline lineno="2333"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self.__mul__(other)</highlight></codeline>
<codeline lineno="2334"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2335"><highlight class="normal"></highlight></codeline>
<codeline lineno="2336"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___imul__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_other);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2337"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___imul__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_other)<sp/>{</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_3<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_4<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_t_5;</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__imul__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:201</highlight></codeline>
<codeline lineno="2347"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2348"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__imul__(self,<sp/>other):</highlight></codeline>
<codeline lineno="2349"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>isinstance(other,<sp/>Vector):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2350"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self.__mul__(other)</highlight></codeline>
<codeline lineno="2351"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="2352"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyObject_TypeCheck(__pyx_v_other,<sp/>((PyTypeObject<sp/>*)((PyObject*)__pyx_ptype_7svector_Vector)));<sp/></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_1)<sp/>{</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"></highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:202</highlight></codeline>
<codeline lineno="2357"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__imul__(self,<sp/>other):</highlight></codeline>
<codeline lineno="2358"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>isinstance(other,<sp/>Vector):</highlight></codeline>
<codeline lineno="2359"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self.__mul__(other)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2360"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="2361"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr.imul(float(other))</highlight></codeline>
<codeline lineno="2362"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetAttr(__pyx_v_self,<sp/>__pyx_kp___mul__);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>202;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>202;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_3));</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_other);</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>0,<sp/>__pyx_v_other);</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v_other);</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyObject_Call(__pyx_t_2,<sp/>((PyObject<sp/>*)__pyx_t_3),<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>202;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_3));<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_4;</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5;</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*else*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"></highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:204</highlight></codeline>
<codeline lineno="2383"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self.__mul__(other)</highlight></codeline>
<codeline lineno="2384"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="2385"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr.imul(float(other))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2386"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self</highlight></codeline>
<codeline lineno="2387"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2388"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>204;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_4));</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_other);</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_4,<sp/>0,<sp/>__pyx_v_other);</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v_other);</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyObject_Call(((PyObject<sp/>*)((PyObject*)&amp;PyFloat_Type)),<sp/>((PyObject<sp/>*)__pyx_t_4),<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>204;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_4));<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>__pyx_PyFloat_AsDouble(__pyx_t_3);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>204;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_self)-&gt;thisptr-&gt;operator*=(__pyx_t_5);</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"></highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:205</highlight></codeline>
<codeline lineno="2402"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="2403"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr.imul(float(other))</highlight></codeline>
<codeline lineno="2404"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2405"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2406"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__idiv__(self,<sp/>other):</highlight></codeline>
<codeline lineno="2407"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_v_self;</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/>__pyx_L5:;</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"></highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.Vector.__imul__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"></highlight></codeline>
<codeline lineno="2429"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:207</highlight></codeline>
<codeline lineno="2430"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self</highlight></codeline>
<codeline lineno="2431"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2432"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__idiv__(self,<sp/>other):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2433"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>isinstance(other,<sp/>Vector):</highlight></codeline>
<codeline lineno="2434"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self.__div__(other)</highlight></codeline>
<codeline lineno="2435"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2436"><highlight class="normal"></highlight></codeline>
<codeline lineno="2437"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___idiv__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_other);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2438"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___idiv__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_other)<sp/>{</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_3<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_4<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_t_5;</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__idiv__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:208</highlight></codeline>
<codeline lineno="2448"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2449"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__idiv__(self,<sp/>other):</highlight></codeline>
<codeline lineno="2450"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>isinstance(other,<sp/>Vector):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2451"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self.__div__(other)</highlight></codeline>
<codeline lineno="2452"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="2453"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyObject_TypeCheck(__pyx_v_other,<sp/>((PyTypeObject<sp/>*)((PyObject*)__pyx_ptype_7svector_Vector)));<sp/></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_1)<sp/>{</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"></highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:209</highlight></codeline>
<codeline lineno="2458"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__idiv__(self,<sp/>other):</highlight></codeline>
<codeline lineno="2459"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>isinstance(other,<sp/>Vector):</highlight></codeline>
<codeline lineno="2460"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self.__div__(other)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2461"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="2462"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr.idiv(float(other))</highlight></codeline>
<codeline lineno="2463"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetAttr(__pyx_v_self,<sp/>__pyx_kp___div__);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>209;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>209;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_3));</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_other);</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>0,<sp/>__pyx_v_other);</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v_other);</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyObject_Call(__pyx_t_2,<sp/>((PyObject<sp/>*)__pyx_t_3),<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>209;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_3));<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_4;</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5;</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*else*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"></highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:211</highlight></codeline>
<codeline lineno="2484"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self.__div__(other)</highlight></codeline>
<codeline lineno="2485"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="2486"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr.idiv(float(other))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2487"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self</highlight></codeline>
<codeline lineno="2488"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2489"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>211;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_4));</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_other);</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_4,<sp/>0,<sp/>__pyx_v_other);</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v_other);</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyObject_Call(((PyObject<sp/>*)((PyObject*)&amp;PyFloat_Type)),<sp/>((PyObject<sp/>*)__pyx_t_4),<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>211;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_4));<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>__pyx_PyFloat_AsDouble(__pyx_t_3);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>211;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_self)-&gt;thisptr-&gt;operator/=(__pyx_t_5);</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"></highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:212</highlight></codeline>
<codeline lineno="2503"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="2504"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.thisptr.idiv(float(other))</highlight></codeline>
<codeline lineno="2505"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2506"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2507"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__add__(Vector<sp/>self,<sp/>Vector<sp/>other):</highlight></codeline>
<codeline lineno="2508"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_v_self;</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/>__pyx_L5:;</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"></highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.Vector.__idiv__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"></highlight></codeline>
<codeline lineno="2530"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:214</highlight></codeline>
<codeline lineno="2531"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self</highlight></codeline>
<codeline lineno="2532"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2533"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__add__(Vector<sp/>self,<sp/>Vector<sp/>other):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2534"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>z<sp/>=<sp/>Vector(self)</highlight></codeline>
<codeline lineno="2535"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr.iadd(other.thisptr[0])</highlight></codeline>
<codeline lineno="2536"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2537"><highlight class="normal"></highlight></codeline>
<codeline lineno="2538"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___add__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_other);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___add__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_other)<sp/>{</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*__pyx_v_z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__add__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__Pyx_ArgTypeTest(((PyObject<sp/>*)__pyx_v_self),<sp/>__pyx_ptype_7svector_Vector,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;self&quot;</highlight><highlight class="normal">,<sp/>0)))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>214;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__Pyx_ArgTypeTest(((PyObject<sp/>*)__pyx_v_other),<sp/>__pyx_ptype_7svector_Vector,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;other&quot;</highlight><highlight class="normal">,<sp/>0)))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>214;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:215</highlight></codeline>
<codeline lineno="2549"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2550"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__add__(Vector<sp/>self,<sp/>Vector<sp/>other):</highlight></codeline>
<codeline lineno="2551"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>z<sp/>=<sp/>Vector(self)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2552"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr.iadd(other.thisptr[0])</highlight></codeline>
<codeline lineno="2553"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>z</highlight></codeline>
<codeline lineno="2554"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>215;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_1));</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>0,<sp/>__pyx_v_self);</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_Call(((PyObject<sp/>*)((PyObject*)__pyx_ptype_7svector_Vector)),<sp/>((PyObject<sp/>*)__pyx_t_1),<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>215;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_1));<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(__Pyx_TypeTest(__pyx_t_2,<sp/>__pyx_ptype_7svector_Vector)))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>215;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/>__pyx_v_z<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_t_2);</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"></highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:216</highlight></codeline>
<codeline lineno="2568"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__add__(Vector<sp/>self,<sp/>Vector<sp/>other):</highlight></codeline>
<codeline lineno="2569"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>z<sp/>=<sp/>Vector(self)</highlight></codeline>
<codeline lineno="2570"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr.iadd(other.thisptr[0])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2571"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>z</highlight></codeline>
<codeline lineno="2572"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2573"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/>__pyx_v_z-&gt;thisptr-&gt;operator+=((((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_other)-&gt;thisptr[0]));</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"></highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:217</highlight></codeline>
<codeline lineno="2577"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>z<sp/>=<sp/>Vector(self)</highlight></codeline>
<codeline lineno="2578"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr.iadd(other.thisptr[0])</highlight></codeline>
<codeline lineno="2579"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>z<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2580"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2581"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__sub__(Vector<sp/>self,<sp/>Vector<sp/>other):</highlight></codeline>
<codeline lineno="2582"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)__pyx_v_z));</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>((PyObject<sp/>*)__pyx_v_z);</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"></highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.Vector.__add__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF((PyObject<sp/>*)__pyx_v_z);</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"></highlight></codeline>
<codeline lineno="2602"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:219</highlight></codeline>
<codeline lineno="2603"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>z</highlight></codeline>
<codeline lineno="2604"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2605"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__sub__(Vector<sp/>self,<sp/>Vector<sp/>other):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2606"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>z<sp/>=<sp/>Vector(self)</highlight></codeline>
<codeline lineno="2607"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr.isub(other.thisptr[0])</highlight></codeline>
<codeline lineno="2608"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2609"><highlight class="normal"></highlight></codeline>
<codeline lineno="2610"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___sub__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_other);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2611"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___sub__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_other)<sp/>{</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*__pyx_v_z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__sub__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__Pyx_ArgTypeTest(((PyObject<sp/>*)__pyx_v_self),<sp/>__pyx_ptype_7svector_Vector,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;self&quot;</highlight><highlight class="normal">,<sp/>0)))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>219;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__Pyx_ArgTypeTest(((PyObject<sp/>*)__pyx_v_other),<sp/>__pyx_ptype_7svector_Vector,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;other&quot;</highlight><highlight class="normal">,<sp/>0)))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>219;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"></highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:220</highlight></codeline>
<codeline lineno="2621"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2622"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__sub__(Vector<sp/>self,<sp/>Vector<sp/>other):</highlight></codeline>
<codeline lineno="2623"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>z<sp/>=<sp/>Vector(self)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2624"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr.isub(other.thisptr[0])</highlight></codeline>
<codeline lineno="2625"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>z</highlight></codeline>
<codeline lineno="2626"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>220;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_1));</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>0,<sp/>__pyx_v_self);</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_Call(((PyObject<sp/>*)((PyObject*)__pyx_ptype_7svector_Vector)),<sp/>((PyObject<sp/>*)__pyx_t_1),<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>220;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_1));<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(__Pyx_TypeTest(__pyx_t_2,<sp/>__pyx_ptype_7svector_Vector)))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>220;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/>__pyx_v_z<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_t_2);</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"></highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:221</highlight></codeline>
<codeline lineno="2640"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__sub__(Vector<sp/>self,<sp/>Vector<sp/>other):</highlight></codeline>
<codeline lineno="2641"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>z<sp/>=<sp/>Vector(self)</highlight></codeline>
<codeline lineno="2642"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr.isub(other.thisptr[0])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2643"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>z</highlight></codeline>
<codeline lineno="2644"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2645"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/>__pyx_v_z-&gt;thisptr-&gt;operator-=((((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_other)-&gt;thisptr[0]));</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"></highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:222</highlight></codeline>
<codeline lineno="2649"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>z<sp/>=<sp/>Vector(self)</highlight></codeline>
<codeline lineno="2650"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr.isub(other.thisptr[0])</highlight></codeline>
<codeline lineno="2651"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>z<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2652"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2653"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__mul__(self,<sp/>other):</highlight></codeline>
<codeline lineno="2654"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)__pyx_v_z));</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>((PyObject<sp/>*)__pyx_v_z);</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"></highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.Vector.__sub__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF((PyObject<sp/>*)__pyx_v_z);</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2672"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"></highlight></codeline>
<codeline lineno="2674"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:224</highlight></codeline>
<codeline lineno="2675"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>z</highlight></codeline>
<codeline lineno="2676"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2677"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__mul__(self,<sp/>other):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2678"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>x</highlight></codeline>
<codeline lineno="2679"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>y</highlight></codeline>
<codeline lineno="2680"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2681"><highlight class="normal"></highlight></codeline>
<codeline lineno="2682"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___mul__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_other);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2683"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___mul__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_other)<sp/>{</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*__pyx_v_x;</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*__pyx_v_y;</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*__pyx_v_z;</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_4<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_5<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_t_6;</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__mul__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/>__pyx_v_x<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)Py_None);<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/>__pyx_v_y<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)Py_None);<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/>__pyx_v_z<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)Py_None);<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"></highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:228</highlight></codeline>
<codeline lineno="2700"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>y</highlight></codeline>
<codeline lineno="2701"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>z</highlight></codeline>
<codeline lineno="2702"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>isinstance(self,<sp/>Vector)<sp/>and<sp/>isinstance(other,<sp/>Vector):<sp/>#<sp/>elementwise<sp/>product<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2703"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>self</highlight></codeline>
<codeline lineno="2704"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>other</highlight></codeline>
<codeline lineno="2705"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyObject_TypeCheck(__pyx_v_self,<sp/>((PyTypeObject<sp/>*)((PyObject*)__pyx_ptype_7svector_Vector)));<sp/></highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_1)<sp/>{</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_TypeCheck(__pyx_v_other,<sp/>((PyTypeObject<sp/>*)((PyObject*)__pyx_ptype_7svector_Vector)));<sp/></highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_3)<sp/>{</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"></highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:229</highlight></codeline>
<codeline lineno="2716"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>z</highlight></codeline>
<codeline lineno="2717"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>isinstance(self,<sp/>Vector)<sp/>and<sp/>isinstance(other,<sp/>Vector):<sp/>#<sp/>elementwise<sp/>product</highlight></codeline>
<codeline lineno="2718"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>self<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2719"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>other</highlight></codeline>
<codeline lineno="2720"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>Vector()</highlight></codeline>
<codeline lineno="2721"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(__Pyx_TypeTest(__pyx_v_self,<sp/>__pyx_ptype_7svector_Vector)))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>229;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_v_x));</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_x<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"></highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:230</highlight></codeline>
<codeline lineno="2728"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>isinstance(self,<sp/>Vector)<sp/>and<sp/>isinstance(other,<sp/>Vector):<sp/>#<sp/>elementwise<sp/>product</highlight></codeline>
<codeline lineno="2729"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>self</highlight></codeline>
<codeline lineno="2730"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>other<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2731"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>Vector()</highlight></codeline>
<codeline lineno="2732"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector(z.thisptr)</highlight></codeline>
<codeline lineno="2733"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(__Pyx_TypeTest(__pyx_v_other,<sp/>__pyx_ptype_7svector_Vector)))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>230;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_other);</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_v_y));</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_y<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_other);</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"></highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:231</highlight></codeline>
<codeline lineno="2740"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>self</highlight></codeline>
<codeline lineno="2741"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>other</highlight></codeline>
<codeline lineno="2742"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>Vector()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2743"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector(z.thisptr)</highlight></codeline>
<codeline lineno="2744"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr<sp/>=<sp/>copy_svector(x.thisptr.mul(y.thisptr[0]))</highlight></codeline>
<codeline lineno="2745"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyObject_Call(((PyObject<sp/>*)((PyObject*)__pyx_ptype_7svector_Vector)),<sp/>((PyObject<sp/>*)__pyx_empty_tuple),<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>231;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(__Pyx_TypeTest(__pyx_t_4,<sp/>__pyx_ptype_7svector_Vector)))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>231;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_v_z));</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_z<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_t_4);</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"></highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:232</highlight></codeline>
<codeline lineno="2754"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>other</highlight></codeline>
<codeline lineno="2755"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>Vector()</highlight></codeline>
<codeline lineno="2756"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector(z.thisptr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2757"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr<sp/>=<sp/>copy_svector(x.thisptr.mul(y.thisptr[0]))</highlight></codeline>
<codeline lineno="2758"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#x.thisptr.mul(y.thisptr[0]).swap(z.thisptr[0])</highlight></codeline>
<codeline lineno="2759"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(__pyx_v_z-&gt;thisptr);</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"></highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:233</highlight></codeline>
<codeline lineno="2763"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>Vector()</highlight></codeline>
<codeline lineno="2764"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector(z.thisptr)</highlight></codeline>
<codeline lineno="2765"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr<sp/>=<sp/>copy_svector(x.thisptr.mul(y.thisptr[0]))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2766"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#x.thisptr.mul(y.thisptr[0]).swap(z.thisptr[0])</highlight></codeline>
<codeline lineno="2767"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2768"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_z-&gt;thisptr<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>svector&lt;int,double&gt;(__pyx_v_x-&gt;thisptr-&gt;operator*((__pyx_v_y-&gt;thisptr[0])));</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5;</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"></highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:236</highlight></codeline>
<codeline lineno="2774"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#x.thisptr.mul(y.thisptr[0]).swap(z.thisptr[0])</highlight></codeline>
<codeline lineno="2775"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2776"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>isinstance(self,<sp/>Vector):<sp/>#<sp/>scalar<sp/>product<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2777"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>Vector(self)</highlight></codeline>
<codeline lineno="2778"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr.imul(float(other))</highlight></codeline>
<codeline lineno="2779"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyObject_TypeCheck(__pyx_v_self,<sp/>((PyTypeObject<sp/>*)((PyObject*)__pyx_ptype_7svector_Vector)));<sp/></highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_3)<sp/>{</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"></highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:237</highlight></codeline>
<codeline lineno="2784"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2785"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>isinstance(self,<sp/>Vector):<sp/>#<sp/>scalar<sp/>product</highlight></codeline>
<codeline lineno="2786"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>Vector(self)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2787"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr.imul(float(other))</highlight></codeline>
<codeline lineno="2788"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>isinstance(other,<sp/>Vector):<sp/>#<sp/>reverse<sp/>scalar<sp/>product</highlight></codeline>
<codeline lineno="2789"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>237;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_4));</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_4,<sp/>0,<sp/>__pyx_v_self);</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyObject_Call(((PyObject<sp/>*)((PyObject*)__pyx_ptype_7svector_Vector)),<sp/>((PyObject<sp/>*)__pyx_t_4),<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>237;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_4));<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(__Pyx_TypeTest(__pyx_t_5,<sp/>__pyx_ptype_7svector_Vector)))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>237;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_v_z));</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_z<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_t_5);</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"></highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:238</highlight></codeline>
<codeline lineno="2804"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>isinstance(self,<sp/>Vector):<sp/>#<sp/>scalar<sp/>product</highlight></codeline>
<codeline lineno="2805"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>Vector(self)</highlight></codeline>
<codeline lineno="2806"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr.imul(float(other))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2807"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>isinstance(other,<sp/>Vector):<sp/>#<sp/>reverse<sp/>scalar<sp/>product</highlight></codeline>
<codeline lineno="2808"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>Vector(other)</highlight></codeline>
<codeline lineno="2809"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>238;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_5));</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_other);</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_5,<sp/>0,<sp/>__pyx_v_other);</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v_other);</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyObject_Call(((PyObject<sp/>*)((PyObject*)&amp;PyFloat_Type)),<sp/>((PyObject<sp/>*)__pyx_t_5),<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>238;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_5));<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__pyx_PyFloat_AsDouble(__pyx_t_4);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>238;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_z-&gt;thisptr-&gt;operator*=(__pyx_t_6);</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5;</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"></highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:239</highlight></codeline>
<codeline lineno="2825"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>Vector(self)</highlight></codeline>
<codeline lineno="2826"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr.imul(float(other))</highlight></codeline>
<codeline lineno="2827"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>isinstance(other,<sp/>Vector):<sp/>#<sp/>reverse<sp/>scalar<sp/>product<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2828"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>Vector(other)</highlight></codeline>
<codeline lineno="2829"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr.imul(float(self))</highlight></codeline>
<codeline lineno="2830"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyObject_TypeCheck(__pyx_v_other,<sp/>((PyTypeObject<sp/>*)((PyObject*)__pyx_ptype_7svector_Vector)));<sp/></highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_3)<sp/>{</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"></highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:240</highlight></codeline>
<codeline lineno="2835"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr.imul(float(other))</highlight></codeline>
<codeline lineno="2836"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>isinstance(other,<sp/>Vector):<sp/>#<sp/>reverse<sp/>scalar<sp/>product</highlight></codeline>
<codeline lineno="2837"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>Vector(other)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2838"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr.imul(float(self))</highlight></codeline>
<codeline lineno="2839"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>z</highlight></codeline>
<codeline lineno="2840"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>240;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_4));</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_other);</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_4,<sp/>0,<sp/>__pyx_v_other);</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v_other);</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyObject_Call(((PyObject<sp/>*)((PyObject*)__pyx_ptype_7svector_Vector)),<sp/>((PyObject<sp/>*)__pyx_t_4),<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>240;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_4));<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(__Pyx_TypeTest(__pyx_t_5,<sp/>__pyx_ptype_7svector_Vector)))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>240;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_v_z));</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_z<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_t_5);</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"></highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:241</highlight></codeline>
<codeline lineno="2855"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>isinstance(other,<sp/>Vector):<sp/>#<sp/>reverse<sp/>scalar<sp/>product</highlight></codeline>
<codeline lineno="2856"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>Vector(other)</highlight></codeline>
<codeline lineno="2857"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr.imul(float(self))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2858"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>z</highlight></codeline>
<codeline lineno="2859"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2860"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>241;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_5));</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_5,<sp/>0,<sp/>__pyx_v_self);</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyObject_Call(((PyObject<sp/>*)((PyObject*)&amp;PyFloat_Type)),<sp/>((PyObject<sp/>*)__pyx_t_5),<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>241;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_5));<sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__pyx_PyFloat_AsDouble(__pyx_t_4);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>241;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_z-&gt;thisptr-&gt;operator*=(__pyx_t_6);</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5;</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/>__pyx_L5:;</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"></highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:242</highlight></codeline>
<codeline lineno="2877"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>Vector(other)</highlight></codeline>
<codeline lineno="2878"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr.imul(float(self))</highlight></codeline>
<codeline lineno="2879"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>z<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2880"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2881"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__div__(self,<sp/>other):</highlight></codeline>
<codeline lineno="2882"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)__pyx_v_z));</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>((PyObject<sp/>*)__pyx_v_z);</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"></highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.Vector.__mul__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/>__Pyx_DECREF((PyObject<sp/>*)__pyx_v_x);</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/>__Pyx_DECREF((PyObject<sp/>*)__pyx_v_y);</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/>__Pyx_DECREF((PyObject<sp/>*)__pyx_v_z);</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"></highlight></codeline>
<codeline lineno="2904"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:244</highlight></codeline>
<codeline lineno="2905"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>z</highlight></codeline>
<codeline lineno="2906"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2907"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__div__(self,<sp/>other):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2908"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>x</highlight></codeline>
<codeline lineno="2909"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>y</highlight></codeline>
<codeline lineno="2910"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2911"><highlight class="normal"></highlight></codeline>
<codeline lineno="2912"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___div__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_other);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2913"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___div__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_other)<sp/>{</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*__pyx_v_x;</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*__pyx_v_y;</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*__pyx_v_z;</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_3<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__pyx_t_4;</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__div__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/>__pyx_v_x<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)Py_None);<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/>__pyx_v_y<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)Py_None);<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/>__pyx_v_z<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)Py_None);<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"></highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:248</highlight></codeline>
<codeline lineno="2928"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>y</highlight></codeline>
<codeline lineno="2929"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>z</highlight></codeline>
<codeline lineno="2930"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>isinstance(other,<sp/>Vector):<sp/>#<sp/>elementwise<sp/>divide<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2931"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>self</highlight></codeline>
<codeline lineno="2932"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>other</highlight></codeline>
<codeline lineno="2933"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyObject_TypeCheck(__pyx_v_other,<sp/>((PyTypeObject<sp/>*)((PyObject*)__pyx_ptype_7svector_Vector)));<sp/></highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_1)<sp/>{</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"></highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:249</highlight></codeline>
<codeline lineno="2938"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>z</highlight></codeline>
<codeline lineno="2939"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>isinstance(other,<sp/>Vector):<sp/>#<sp/>elementwise<sp/>divide</highlight></codeline>
<codeline lineno="2940"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>self<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2941"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>other</highlight></codeline>
<codeline lineno="2942"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>Vector()</highlight></codeline>
<codeline lineno="2943"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(__Pyx_TypeTest(__pyx_v_self,<sp/>__pyx_ptype_7svector_Vector)))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>249;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_v_x));</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_x<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"></highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:250</highlight></codeline>
<codeline lineno="2950"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>isinstance(other,<sp/>Vector):<sp/>#<sp/>elementwise<sp/>divide</highlight></codeline>
<codeline lineno="2951"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>self</highlight></codeline>
<codeline lineno="2952"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>other<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2953"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>Vector()</highlight></codeline>
<codeline lineno="2954"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector(z.thisptr)</highlight></codeline>
<codeline lineno="2955"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(__Pyx_TypeTest(__pyx_v_other,<sp/>__pyx_ptype_7svector_Vector)))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>250;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_other);</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_v_y));</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_y<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_other);</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"></highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:251</highlight></codeline>
<codeline lineno="2962"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>self</highlight></codeline>
<codeline lineno="2963"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>other</highlight></codeline>
<codeline lineno="2964"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>Vector()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2965"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector(z.thisptr)</highlight></codeline>
<codeline lineno="2966"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr<sp/>=<sp/>copy_svector(x.thisptr.div(y.thisptr[0]))</highlight></codeline>
<codeline lineno="2967"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_Call(((PyObject<sp/>*)((PyObject*)__pyx_ptype_7svector_Vector)),<sp/>((PyObject<sp/>*)__pyx_empty_tuple),<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>251;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(__Pyx_TypeTest(__pyx_t_2,<sp/>__pyx_ptype_7svector_Vector)))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>251;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_v_z));</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_z<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_t_2);</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"></highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:252</highlight></codeline>
<codeline lineno="2976"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>other</highlight></codeline>
<codeline lineno="2977"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>Vector()</highlight></codeline>
<codeline lineno="2978"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector(z.thisptr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2979"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr<sp/>=<sp/>copy_svector(x.thisptr.div(y.thisptr[0]))</highlight></codeline>
<codeline lineno="2980"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#x.thisptr.mul(y.thisptr[0]).swap(z.thisptr[0])</highlight></codeline>
<codeline lineno="2981"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(__pyx_v_z-&gt;thisptr);</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"></highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:253</highlight></codeline>
<codeline lineno="2985"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>Vector()</highlight></codeline>
<codeline lineno="2986"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del_svector(z.thisptr)</highlight></codeline>
<codeline lineno="2987"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr<sp/>=<sp/>copy_svector(x.thisptr.div(y.thisptr[0]))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2988"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#x.thisptr.mul(y.thisptr[0]).swap(z.thisptr[0])</highlight></codeline>
<codeline lineno="2989"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="2990"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_z-&gt;thisptr<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>svector&lt;int,double&gt;(__pyx_v_x-&gt;thisptr-&gt;operator/((__pyx_v_y-&gt;thisptr[0])));</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5;</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*else*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"></highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:256</highlight></codeline>
<codeline lineno="2997"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#x.thisptr.mul(y.thisptr[0]).swap(z.thisptr[0])</highlight></codeline>
<codeline lineno="2998"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="2999"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>Vector(self)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3000"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr.idiv(float(other))</highlight></codeline>
<codeline lineno="3001"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>z</highlight></codeline>
<codeline lineno="3002"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>256;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_2));</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_2,<sp/>0,<sp/>__pyx_v_self);</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyObject_Call(((PyObject<sp/>*)((PyObject*)__pyx_ptype_7svector_Vector)),<sp/>((PyObject<sp/>*)__pyx_t_2),<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>256;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_2));<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(__Pyx_TypeTest(__pyx_t_3,<sp/>__pyx_ptype_7svector_Vector)))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>256;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_v_z));</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_z<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_t_3);</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"></highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:257</highlight></codeline>
<codeline lineno="3017"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="3018"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>Vector(self)</highlight></codeline>
<codeline lineno="3019"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr.idiv(float(other))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3020"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>z</highlight></codeline>
<codeline lineno="3021"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3022"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>257;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_3));</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_other);</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_3,<sp/>0,<sp/>__pyx_v_other);</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v_other);</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_Call(((PyObject<sp/>*)((PyObject*)&amp;PyFloat_Type)),<sp/>((PyObject<sp/>*)__pyx_t_3),<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>257;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_3));<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>__pyx_PyFloat_AsDouble(__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>257;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_z-&gt;thisptr-&gt;operator/=(__pyx_t_4);</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/>__pyx_L5:;</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"></highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:258</highlight></codeline>
<codeline lineno="3038"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>Vector(self)</highlight></codeline>
<codeline lineno="3039"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr.idiv(float(other))</highlight></codeline>
<codeline lineno="3040"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>z<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3041"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3042"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__neg__(Vector<sp/>self):</highlight></codeline>
<codeline lineno="3043"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)__pyx_v_z));</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>((PyObject<sp/>*)__pyx_v_z);</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"></highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.Vector.__div__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/>__Pyx_DECREF((PyObject<sp/>*)__pyx_v_x);</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/>__Pyx_DECREF((PyObject<sp/>*)__pyx_v_y);</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/>__Pyx_DECREF((PyObject<sp/>*)__pyx_v_z);</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"></highlight></codeline>
<codeline lineno="3065"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:260</highlight></codeline>
<codeline lineno="3066"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>z</highlight></codeline>
<codeline lineno="3067"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3068"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__neg__(Vector<sp/>self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3069"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>z<sp/>=<sp/>Vector(self)</highlight></codeline>
<codeline lineno="3070"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr.imul(-1)</highlight></codeline>
<codeline lineno="3071"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3072"><highlight class="normal"></highlight></codeline>
<codeline lineno="3073"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___neg__(PyObject<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3074"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___neg__(PyObject<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*__pyx_v_z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__neg__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"></highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:261</highlight></codeline>
<codeline lineno="3082"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3083"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__neg__(Vector<sp/>self):</highlight></codeline>
<codeline lineno="3084"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>z<sp/>=<sp/>Vector(self)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3085"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr.imul(-1)</highlight></codeline>
<codeline lineno="3086"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>z</highlight></codeline>
<codeline lineno="3087"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>261;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_1));</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>0,<sp/>__pyx_v_self);</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_Call(((PyObject<sp/>*)((PyObject*)__pyx_ptype_7svector_Vector)),<sp/>((PyObject<sp/>*)__pyx_t_1),<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>261;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_1));<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(__Pyx_TypeTest(__pyx_t_2,<sp/>__pyx_ptype_7svector_Vector)))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>261;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/>__pyx_v_z<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_t_2);</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"></highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:262</highlight></codeline>
<codeline lineno="3101"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__neg__(Vector<sp/>self):</highlight></codeline>
<codeline lineno="3102"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>z<sp/>=<sp/>Vector(self)</highlight></codeline>
<codeline lineno="3103"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr.imul(-1)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3104"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>z</highlight></codeline>
<codeline lineno="3105"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3106"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/>__pyx_v_z-&gt;thisptr-&gt;operator*=(-1);</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"></highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:263</highlight></codeline>
<codeline lineno="3110"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>z<sp/>=<sp/>Vector(self)</highlight></codeline>
<codeline lineno="3111"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.thisptr.imul(-1)</highlight></codeline>
<codeline lineno="3112"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>z<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3113"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3114"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__pos__(Vector<sp/>self):</highlight></codeline>
<codeline lineno="3115"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)__pyx_v_z));</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>((PyObject<sp/>*)__pyx_v_z);</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"></highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.Vector.__neg__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF((PyObject<sp/>*)__pyx_v_z);</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"></highlight></codeline>
<codeline lineno="3135"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:265</highlight></codeline>
<codeline lineno="3136"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>z</highlight></codeline>
<codeline lineno="3137"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3138"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__pos__(Vector<sp/>self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3139"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>z<sp/>=<sp/>Vector(self)</highlight></codeline>
<codeline lineno="3140"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>z</highlight></codeline>
<codeline lineno="3141"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3142"><highlight class="normal"></highlight></codeline>
<codeline lineno="3143"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___pos__(PyObject<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3144"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector___pos__(PyObject<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*__pyx_v_z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;__pos__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"></highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:266</highlight></codeline>
<codeline lineno="3152"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3153"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__pos__(Vector<sp/>self):</highlight></codeline>
<codeline lineno="3154"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>z<sp/>=<sp/>Vector(self)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3155"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>z</highlight></codeline>
<codeline lineno="3156"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3157"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>266;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_1));</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>0,<sp/>__pyx_v_self);</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/>__Pyx_GIVEREF(__pyx_v_self);</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_Call(((PyObject<sp/>*)((PyObject*)__pyx_ptype_7svector_Vector)),<sp/>((PyObject<sp/>*)__pyx_t_1),<sp/>NULL);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>266;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_1));<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(__Pyx_TypeTest(__pyx_t_2,<sp/>__pyx_ptype_7svector_Vector)))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>266;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/>__pyx_v_z<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_t_2);</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"></highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:267</highlight></codeline>
<codeline lineno="3171"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__pos__(Vector<sp/>self):</highlight></codeline>
<codeline lineno="3172"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>Vector<sp/>z<sp/>=<sp/>Vector(self)</highlight></codeline>
<codeline lineno="3173"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>z<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3174"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3175"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>dot(Vector<sp/>self,<sp/>Vector<sp/>other):</highlight></codeline>
<codeline lineno="3176"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)__pyx_v_z));</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>((PyObject<sp/>*)__pyx_v_z);</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"></highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.Vector.__pos__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF((PyObject<sp/>*)__pyx_v_z);</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"></highlight></codeline>
<codeline lineno="3196"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:269</highlight></codeline>
<codeline lineno="3197"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>z</highlight></codeline>
<codeline lineno="3198"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3199"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>dot(Vector<sp/>self,<sp/>Vector<sp/>other):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3200"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self.thisptr.dot(other.thisptr[0])</highlight></codeline>
<codeline lineno="3201"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3202"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3203"><highlight class="normal"></highlight></codeline>
<codeline lineno="3204"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector_dot(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_other);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3205"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector_dot(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_other)<sp/>{</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;dot&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__Pyx_ArgTypeTest(((PyObject<sp/>*)__pyx_v_other),<sp/>__pyx_ptype_7svector_Vector,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;other&quot;</highlight><highlight class="normal">,<sp/>0)))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>269;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"></highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:270</highlight></codeline>
<codeline lineno="3212"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3213"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>dot(Vector<sp/>self,<sp/>Vector<sp/>other):</highlight></codeline>
<codeline lineno="3214"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self.thisptr.dot(other.thisptr[0])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3215"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3216"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>norm(Vector<sp/>self):</highlight></codeline>
<codeline lineno="3217"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyFloat_FromDouble(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_self)-&gt;thisptr-&gt;dot((((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_other)-&gt;thisptr[0])));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>270;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"></highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.Vector.dot&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"></highlight></codeline>
<codeline lineno="3237"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:272</highlight></codeline>
<codeline lineno="3238"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self.thisptr.dot(other.thisptr[0])</highlight></codeline>
<codeline lineno="3239"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3240"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>norm(Vector<sp/>self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3241"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>sqrt(self.thisptr.normsquared())</highlight></codeline>
<codeline lineno="3242"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3243"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3244"><highlight class="normal"></highlight></codeline>
<codeline lineno="3245"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector_norm(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*unused);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3246"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_7svector_6Vector_norm(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*unused)<sp/>{</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/>__Pyx_SetupRefcountContext(</highlight><highlight class="stringliteral">&quot;norm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"></highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/svector.pyx&quot;:273</highlight></codeline>
<codeline lineno="3252"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3253"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>norm(Vector<sp/>self):</highlight></codeline>
<codeline lineno="3254"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>sqrt(self.thisptr.normsquared())<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3255"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3256"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyFloat_FromDouble(std::sqrt(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref><sp/>*)__pyx_v_self)-&gt;thisptr-&gt;normsquared()));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>273;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"></highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector.Vector.norm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"></highlight></codeline>
<codeline lineno="3276"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tp_new_7svector_Vector(PyTypeObject<sp/>*t,<sp/>PyObject<sp/>*a,<sp/>PyObject<sp/>*k)<sp/>{</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/>PyObject<sp/>*o<sp/>=<sp/>(*t-&gt;tp_alloc)(t,<sp/>0);</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!o)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>o;</highlight></codeline>
<codeline lineno="3280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"></highlight></codeline>
<codeline lineno="3282"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__pyx_tp_dealloc_7svector_Vector(PyObject<sp/>*o)<sp/>{</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*etype,<sp/>*eval,<sp/>*etb;</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Fetch(&amp;etype,<sp/>&amp;eval,<sp/>&amp;etb);</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/>++Py_REFCNT(o);</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_pf_7svector_6Vector___dealloc__(o);</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyErr_Occurred())<sp/>PyErr_WriteUnraisable(o);</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/>--Py_REFCNT(o);</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Restore(etype,<sp/>eval,<sp/>etb);</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/>(*Py_TYPE(o)-&gt;tp_free)(o);</highlight></codeline>
<codeline lineno="3293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_sq_item_7svector_Vector(PyObject<sp/>*o,<sp/>Py_ssize_t<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/>PyObject<sp/>*r;</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/>PyObject<sp/>*x<sp/>=<sp/>PyInt_FromSsize_t(i);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!x)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/>r<sp/>=<sp/>Py_TYPE(o)-&gt;tp_as_mapping-&gt;mp_subscript(o,<sp/>x);</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/>Py_DECREF(x);</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="3300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"></highlight></codeline>
<codeline lineno="3302"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_mp_ass_subscript_7svector_Vector(PyObject<sp/>*o,<sp/>PyObject<sp/>*i,<sp/>PyObject<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v)<sp/>{</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_pf_7svector_6Vector___setitem__(o,<sp/>i,<sp/>v);</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_pf_7svector_6Vector___delitem__(o,<sp/>i);</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"></highlight></codeline>
<codeline lineno="3311"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PyMethodDef<sp/>__pyx_methods_7svector_Vector[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;__copy__&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_7svector_6Vector___copy__,<sp/>METH_NOARGS,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;__str__&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_7svector_6Vector___str__,<sp/>METH_NOARGS|METH_COEXIST,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;__reduce__&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_7svector_6Vector___reduce__,<sp/>METH_NOARGS,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;__getitem__&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_7svector_6Vector___getitem__,<sp/>METH_O|METH_COEXIST,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;__iter__&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_7svector_6Vector___iter__,<sp/>METH_NOARGS|METH_COEXIST,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;iterkeys&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_7svector_6Vector_iterkeys,<sp/>METH_NOARGS,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;itervalues&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_7svector_6Vector_itervalues,<sp/>METH_NOARGS,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;iteritems&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_7svector_6Vector_iteritems,<sp/>METH_NOARGS,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;__iadd__&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_7svector_6Vector___iadd__,<sp/>METH_O|METH_COEXIST,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;__isub__&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_7svector_6Vector___isub__,<sp/>METH_O|METH_COEXIST,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;__imul__&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_7svector_6Vector___imul__,<sp/>METH_O|METH_COEXIST,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;__idiv__&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_7svector_6Vector___idiv__,<sp/>METH_O|METH_COEXIST,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;__add__&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_7svector_6Vector___add__,<sp/>METH_O|METH_COEXIST,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;__sub__&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_7svector_6Vector___sub__,<sp/>METH_O|METH_COEXIST,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;__mul__&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_7svector_6Vector___mul__,<sp/>METH_O|METH_COEXIST,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;__div__&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_7svector_6Vector___div__,<sp/>METH_O|METH_COEXIST,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;__neg__&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_7svector_6Vector___neg__,<sp/>METH_NOARGS|METH_COEXIST,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;__pos__&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_7svector_6Vector___pos__,<sp/>METH_NOARGS|METH_COEXIST,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;dot&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_7svector_6Vector_dot,<sp/>METH_O,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;norm&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_7svector_6Vector_norm,<sp/>METH_NOARGS,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/>0}</highlight></codeline>
<codeline lineno="3333"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"></highlight></codeline>
<codeline lineno="3335"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyNumberMethods<sp/>__pyx_tp_as_number_Vector<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/>__pyx_pf_7svector_6Vector___add__,<sp/></highlight><highlight class="comment">/*nb_add*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/>__pyx_pf_7svector_6Vector___sub__,<sp/></highlight><highlight class="comment">/*nb_subtract*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/>__pyx_pf_7svector_6Vector___mul__,<sp/></highlight><highlight class="comment">/*nb_multiply*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3339"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3340"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>__pyx_pf_7svector_6Vector___div__,<sp/></highlight><highlight class="comment">/*nb_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3341"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3342"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_remainder*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_divmod*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_power*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/>__pyx_pf_7svector_6Vector___neg__,<sp/></highlight><highlight class="comment">/*nb_negative*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/>__pyx_pf_7svector_6Vector___pos__,<sp/></highlight><highlight class="comment">/*nb_positive*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_absolute*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_nonzero*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_invert*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_lshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_rshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_and*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_xor*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_or*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3355"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3356"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_coerce*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3357"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3358"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_int*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3359"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight></codeline>
<codeline lineno="3360"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*reserved*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3361"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight></codeline>
<codeline lineno="3362"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_long*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3363"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3364"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_float*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3365"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3366"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_oct*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3367"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3368"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3369"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_hex*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3370"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3371"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>__pyx_pf_7svector_6Vector___iadd__,<sp/></highlight><highlight class="comment">/*nb_inplace_add*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/>__pyx_pf_7svector_6Vector___isub__,<sp/></highlight><highlight class="comment">/*nb_inplace_subtract*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/>__pyx_pf_7svector_6Vector___imul__,<sp/></highlight><highlight class="comment">/*nb_inplace_multiply*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3374"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3375"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>__pyx_pf_7svector_6Vector___idiv__,<sp/></highlight><highlight class="comment">/*nb_inplace_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3376"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3377"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_remainder*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_power*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_lshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_rshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_and*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_xor*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_or*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_floor_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_true_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_floor_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_true_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3388"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>(PY_MAJOR_VERSION<sp/>&gt;=<sp/>3)<sp/>||<sp/>(Py_TPFLAGS_DEFAULT<sp/>&amp;<sp/>Py_TPFLAGS_HAVE_INDEX)</highlight></codeline>
<codeline lineno="3389"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_index*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3390"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3391"><highlight class="preprocessor"></highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"></highlight></codeline>
<codeline lineno="3393"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PySequenceMethods<sp/>__pyx_tp_as_sequence_Vector<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/>__pyx_pf_7svector_6Vector___len__,<sp/></highlight><highlight class="comment">/*sq_length*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_concat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_repeat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/>__pyx_sq_item_7svector_Vector,<sp/></highlight><highlight class="comment">/*sq_item*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_slice*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_ass_item*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_ass_slice*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/>__pyx_pf_7svector_6Vector___contains__,<sp/></highlight><highlight class="comment">/*sq_contains*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_inplace_concat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_inplace_repeat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3404"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"></highlight></codeline>
<codeline lineno="3406"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMappingMethods<sp/>__pyx_tp_as_mapping_Vector<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/>__pyx_pf_7svector_6Vector___len__,<sp/></highlight><highlight class="comment">/*mp_length*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/>__pyx_pf_7svector_6Vector___getitem__,<sp/></highlight><highlight class="comment">/*mp_subscript*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/>__pyx_mp_ass_subscript_7svector_Vector,<sp/></highlight><highlight class="comment">/*mp_ass_subscript*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3410"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3411"><highlight class="normal"></highlight></codeline>
<codeline lineno="3412"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyBufferProcs<sp/>__pyx_tp_as_buffer_Vector<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3414"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getreadbuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3415"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3416"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3417"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getwritebuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3418"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3419"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3420"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getsegcount*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3421"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3422"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3423"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getcharbuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3424"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3425"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x02060000</highlight></codeline>
<codeline lineno="3426"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getbuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3427"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3428"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x02060000</highlight></codeline>
<codeline lineno="3429"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_releasebuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3430"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3431"><highlight class="preprocessor"></highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"></highlight></codeline>
<codeline lineno="3433"><highlight class="normal">PyTypeObject<sp/>__pyx_type_7svector_Vector<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/>PyVarObject_HEAD_INIT(0,<sp/>0)</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/>__Pyx_NAMESTR(&quot;svector.Vector&quot;),<sp/></highlight><highlight class="comment">/*tp_name*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/>sizeof(struct<sp/><ref refid="struct____pyx__obj__7svector__Vector" kindref="compound">__pyx_obj_7svector_Vector</ref>),<sp/></highlight><highlight class="comment">/*tp_basicsize*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_itemsize*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/>__pyx_tp_dealloc_7svector_Vector,<sp/></highlight><highlight class="comment">/*tp_dealloc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_print*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_getattr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_setattr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_compare*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_repr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/>&amp;__pyx_tp_as_number_Vector,<sp/></highlight><highlight class="comment">/*tp_as_number*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/>&amp;__pyx_tp_as_sequence_Vector,<sp/></highlight><highlight class="comment">/*tp_as_sequence*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/>&amp;__pyx_tp_as_mapping_Vector,<sp/></highlight><highlight class="comment">/*tp_as_mapping*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_hash*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_call*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/>__pyx_pf_7svector_6Vector___str__,<sp/></highlight><highlight class="comment">/*tp_str*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_getattro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_setattro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/>&amp;__pyx_tp_as_buffer_Vector,<sp/></highlight><highlight class="comment">/*tp_as_buffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/>Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER,<sp/></highlight><highlight class="comment">/*tp_flags*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_doc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_traverse*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_clear*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_richcompare*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_weaklistoffset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/>__pyx_pf_7svector_6Vector___iter__,<sp/></highlight><highlight class="comment">/*tp_iter*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_iternext*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/>__pyx_methods_7svector_Vector,<sp/></highlight><highlight class="comment">/*tp_methods*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_members*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_getset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_base*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_dict*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_descr_get*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_descr_set*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_dictoffset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/>__pyx_pf_7svector_6Vector___init__,<sp/></highlight><highlight class="comment">/*tp_init*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_alloc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/>__pyx_tp_new_7svector_Vector,<sp/></highlight><highlight class="comment">/*tp_new*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_free*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_is_gc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_bases*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_mro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_cache*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_subclasses*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_weaklist*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3479"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"></highlight></codeline>
<codeline lineno="3481"><highlight class="normal">static<sp/>PyObject<sp/>*__pyx_tp_new_7svector_KeyIterator(PyTypeObject<sp/>*t,<sp/>PyObject<sp/>*a,<sp/>PyObject<sp/>*k)<sp/>{</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyIterator" kindref="compound">__pyx_obj_7svector_KeyIterator</ref><sp/>*p;</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/>PyObject<sp/>*o<sp/>=<sp/>(*t-&gt;tp_alloc)(t,<sp/>0);</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!o)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyIterator" kindref="compound">__pyx_obj_7svector_KeyIterator</ref><sp/>*)o);</highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/>p-&gt;v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_7svector_Vector<sp/>*)Py_None);<sp/>Py_INCREF(Py_None);</highlight></codeline>
<codeline lineno="3487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_pf_7svector_11KeyIterator___cinit__(o,<sp/>a,<sp/>k)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(o);<sp/>o<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>o;</highlight></codeline>
<codeline lineno="3491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"></highlight></codeline>
<codeline lineno="3493"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__pyx_tp_dealloc_7svector_KeyIterator(PyObject<sp/>*o)<sp/>{</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyIterator" kindref="compound">__pyx_obj_7svector_KeyIterator</ref><sp/>*p<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyIterator" kindref="compound">__pyx_obj_7svector_KeyIterator</ref><sp/>*)o;</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*etype,<sp/>*eval,<sp/>*etb;</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Fetch(&amp;etype,<sp/>&amp;eval,<sp/>&amp;etb);</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/>++Py_REFCNT(o);</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_pf_7svector_11KeyIterator___dealloc__(o);</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyErr_Occurred())<sp/>PyErr_WriteUnraisable(o);</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/>--Py_REFCNT(o);</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Restore(etype,<sp/>eval,<sp/>etb);</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/>Py_XDECREF(((PyObject<sp/>*)p-&gt;v));</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/>(*Py_TYPE(o)-&gt;tp_free)(o);</highlight></codeline>
<codeline lineno="3506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"></highlight></codeline>
<codeline lineno="3508"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_tp_traverse_7svector_KeyIterator(PyObject<sp/>*o,<sp/>visitproc<sp/>v,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a)<sp/>{</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e;</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyIterator" kindref="compound">__pyx_obj_7svector_KeyIterator</ref><sp/>*p<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyIterator" kindref="compound">__pyx_obj_7svector_KeyIterator</ref><sp/>*)o;</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;v)<sp/>{</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>=<sp/>(*v)(((PyObject*)p-&gt;v),<sp/>a);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e;</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"></highlight></codeline>
<codeline lineno="3517"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_tp_clear_7svector_KeyIterator(PyObject<sp/>*o)<sp/>{</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyIterator" kindref="compound">__pyx_obj_7svector_KeyIterator</ref><sp/>*p<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyIterator" kindref="compound">__pyx_obj_7svector_KeyIterator</ref><sp/>*)o;</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/>PyObject*<sp/>tmp;</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>((PyObject*)p-&gt;v);</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/>p-&gt;v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_7svector_Vector<sp/>*)Py_None);<sp/>Py_INCREF(Py_None);</highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/>Py_XDECREF(tmp);</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"></highlight></codeline>
<codeline lineno="3526"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PyMethodDef<sp/>__pyx_methods_7svector_KeyIterator[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;__iter__&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_7svector_11KeyIterator___iter__,<sp/>METH_NOARGS|METH_COEXIST,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;__next__&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_7svector_11KeyIterator___next__,<sp/>METH_NOARGS|METH_COEXIST,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/>0}</highlight></codeline>
<codeline lineno="3530"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"></highlight></codeline>
<codeline lineno="3532"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyNumberMethods<sp/>__pyx_tp_as_number_KeyIterator<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_add*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_subtract*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_multiply*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3536"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3537"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3538"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3539"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_remainder*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_divmod*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_power*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_negative*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_positive*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_absolute*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_nonzero*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_invert*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_lshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_rshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_and*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_xor*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_or*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3552"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3553"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_coerce*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3554"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3555"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_int*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3556"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight></codeline>
<codeline lineno="3557"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*reserved*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3558"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight></codeline>
<codeline lineno="3559"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_long*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3560"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3561"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_float*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3562"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3563"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_oct*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3564"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3565"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3566"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_hex*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3567"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3568"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_add*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_subtract*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_multiply*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3571"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3572"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3573"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3574"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_remainder*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_power*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_lshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_rshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_and*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_xor*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_or*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_floor_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_true_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_floor_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_true_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3585"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>(PY_MAJOR_VERSION<sp/>&gt;=<sp/>3)<sp/>||<sp/>(Py_TPFLAGS_DEFAULT<sp/>&amp;<sp/>Py_TPFLAGS_HAVE_INDEX)</highlight></codeline>
<codeline lineno="3586"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_index*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3587"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3588"><highlight class="preprocessor"></highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"></highlight></codeline>
<codeline lineno="3590"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PySequenceMethods<sp/>__pyx_tp_as_sequence_KeyIterator<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_length*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_concat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_repeat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_item*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_slice*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_ass_item*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_ass_slice*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_contains*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_inplace_concat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_inplace_repeat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3601"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"></highlight></codeline>
<codeline lineno="3603"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMappingMethods<sp/>__pyx_tp_as_mapping_KeyIterator<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*mp_length*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*mp_subscript*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*mp_ass_subscript*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3607"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"></highlight></codeline>
<codeline lineno="3609"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyBufferProcs<sp/>__pyx_tp_as_buffer_KeyIterator<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3611"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getreadbuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3612"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3613"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3614"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getwritebuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3615"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3616"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3617"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getsegcount*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3618"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3619"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3620"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getcharbuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3621"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3622"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x02060000</highlight></codeline>
<codeline lineno="3623"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getbuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3624"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3625"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x02060000</highlight></codeline>
<codeline lineno="3626"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_releasebuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3627"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3628"><highlight class="preprocessor"></highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"></highlight></codeline>
<codeline lineno="3630"><highlight class="normal">PyTypeObject<sp/>__pyx_type_7svector_KeyIterator<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/>PyVarObject_HEAD_INIT(0,<sp/>0)</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/>__Pyx_NAMESTR(&quot;svector.KeyIterator&quot;),<sp/></highlight><highlight class="comment">/*tp_name*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/>sizeof(struct<sp/><ref refid="struct____pyx__obj__7svector__KeyIterator" kindref="compound">__pyx_obj_7svector_KeyIterator</ref>),<sp/></highlight><highlight class="comment">/*tp_basicsize*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_itemsize*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/>__pyx_tp_dealloc_7svector_KeyIterator,<sp/></highlight><highlight class="comment">/*tp_dealloc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_print*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_getattr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_setattr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_compare*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_repr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/>&amp;__pyx_tp_as_number_KeyIterator,<sp/></highlight><highlight class="comment">/*tp_as_number*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/>&amp;__pyx_tp_as_sequence_KeyIterator,<sp/></highlight><highlight class="comment">/*tp_as_sequence*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/>&amp;__pyx_tp_as_mapping_KeyIterator,<sp/></highlight><highlight class="comment">/*tp_as_mapping*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_hash*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_call*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_str*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_getattro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_setattro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/>&amp;__pyx_tp_as_buffer_KeyIterator,<sp/></highlight><highlight class="comment">/*tp_as_buffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/>Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC,<sp/></highlight><highlight class="comment">/*tp_flags*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_doc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/>__pyx_tp_traverse_7svector_KeyIterator,<sp/></highlight><highlight class="comment">/*tp_traverse*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/>__pyx_tp_clear_7svector_KeyIterator,<sp/></highlight><highlight class="comment">/*tp_clear*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_richcompare*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_weaklistoffset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/>__pyx_pf_7svector_11KeyIterator___iter__,<sp/></highlight><highlight class="comment">/*tp_iter*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/>__pyx_pf_7svector_11KeyIterator___next__,<sp/></highlight><highlight class="comment">/*tp_iternext*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/>__pyx_methods_7svector_KeyIterator,<sp/></highlight><highlight class="comment">/*tp_methods*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_members*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_getset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_base*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_dict*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_descr_get*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_descr_set*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_dictoffset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_init*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_alloc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/>__pyx_tp_new_7svector_KeyIterator,<sp/></highlight><highlight class="comment">/*tp_new*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_free*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_is_gc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_bases*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_mro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_cache*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_subclasses*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_weaklist*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3676"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"></highlight></codeline>
<codeline lineno="3678"><highlight class="normal">static<sp/>PyObject<sp/>*__pyx_tp_new_7svector_ValueIterator(PyTypeObject<sp/>*t,<sp/>PyObject<sp/>*a,<sp/>PyObject<sp/>*k)<sp/>{</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__ValueIterator" kindref="compound">__pyx_obj_7svector_ValueIterator</ref><sp/>*p;</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/>PyObject<sp/>*o<sp/>=<sp/>(*t-&gt;tp_alloc)(t,<sp/>0);</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!o)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__ValueIterator" kindref="compound">__pyx_obj_7svector_ValueIterator</ref><sp/>*)o);</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/>p-&gt;v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_7svector_Vector<sp/>*)Py_None);<sp/>Py_INCREF(Py_None);</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_pf_7svector_13ValueIterator___cinit__(o,<sp/>a,<sp/>k)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(o);<sp/>o<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>o;</highlight></codeline>
<codeline lineno="3688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"></highlight></codeline>
<codeline lineno="3690"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__pyx_tp_dealloc_7svector_ValueIterator(PyObject<sp/>*o)<sp/>{</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__ValueIterator" kindref="compound">__pyx_obj_7svector_ValueIterator</ref><sp/>*p<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__ValueIterator" kindref="compound">__pyx_obj_7svector_ValueIterator</ref><sp/>*)o;</highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*etype,<sp/>*eval,<sp/>*etb;</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Fetch(&amp;etype,<sp/>&amp;eval,<sp/>&amp;etb);</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/>++Py_REFCNT(o);</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_pf_7svector_13ValueIterator___dealloc__(o);</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyErr_Occurred())<sp/>PyErr_WriteUnraisable(o);</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/><sp/><sp/>--Py_REFCNT(o);</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Restore(etype,<sp/>eval,<sp/>etb);</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/>Py_XDECREF(((PyObject<sp/>*)p-&gt;v));</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/>(*Py_TYPE(o)-&gt;tp_free)(o);</highlight></codeline>
<codeline lineno="3703"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"></highlight></codeline>
<codeline lineno="3705"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_tp_traverse_7svector_ValueIterator(PyObject<sp/>*o,<sp/>visitproc<sp/>v,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a)<sp/>{</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e;</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__ValueIterator" kindref="compound">__pyx_obj_7svector_ValueIterator</ref><sp/>*p<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__ValueIterator" kindref="compound">__pyx_obj_7svector_ValueIterator</ref><sp/>*)o;</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;v)<sp/>{</highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>=<sp/>(*v)(((PyObject*)p-&gt;v),<sp/>a);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e;</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"></highlight></codeline>
<codeline lineno="3714"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_tp_clear_7svector_ValueIterator(PyObject<sp/>*o)<sp/>{</highlight></codeline>
<codeline lineno="3715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__ValueIterator" kindref="compound">__pyx_obj_7svector_ValueIterator</ref><sp/>*p<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__ValueIterator" kindref="compound">__pyx_obj_7svector_ValueIterator</ref><sp/>*)o;</highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/>PyObject*<sp/>tmp;</highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>((PyObject*)p-&gt;v);</highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/>p-&gt;v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_7svector_Vector<sp/>*)Py_None);<sp/>Py_INCREF(Py_None);</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/>Py_XDECREF(tmp);</highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"></highlight></codeline>
<codeline lineno="3723"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PyMethodDef<sp/>__pyx_methods_7svector_ValueIterator[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;__iter__&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_7svector_13ValueIterator___iter__,<sp/>METH_NOARGS|METH_COEXIST,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;__next__&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_7svector_13ValueIterator___next__,<sp/>METH_NOARGS|METH_COEXIST,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/>0}</highlight></codeline>
<codeline lineno="3727"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"></highlight></codeline>
<codeline lineno="3729"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyNumberMethods<sp/>__pyx_tp_as_number_ValueIterator<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_add*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_subtract*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_multiply*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3733"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3734"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3735"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3736"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_remainder*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3737"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_divmod*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_power*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_negative*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_positive*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_absolute*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_nonzero*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_invert*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_lshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_rshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_and*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_xor*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_or*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3749"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3750"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_coerce*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3751"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3752"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_int*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3753"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight></codeline>
<codeline lineno="3754"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*reserved*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3755"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight></codeline>
<codeline lineno="3756"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_long*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3757"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3758"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_float*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3759"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3760"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_oct*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3761"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3762"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3763"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_hex*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3764"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3765"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_add*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_subtract*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_multiply*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3768"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3769"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3770"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3771"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_remainder*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3772"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_power*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_lshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_rshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_and*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_xor*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_or*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_floor_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_true_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_floor_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_true_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3782"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>(PY_MAJOR_VERSION<sp/>&gt;=<sp/>3)<sp/>||<sp/>(Py_TPFLAGS_DEFAULT<sp/>&amp;<sp/>Py_TPFLAGS_HAVE_INDEX)</highlight></codeline>
<codeline lineno="3783"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_index*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3784"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3785"><highlight class="preprocessor"></highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"></highlight></codeline>
<codeline lineno="3787"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PySequenceMethods<sp/>__pyx_tp_as_sequence_ValueIterator<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_length*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_concat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_repeat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_item*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_slice*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_ass_item*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3794"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_ass_slice*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_contains*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_inplace_concat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_inplace_repeat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3798"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"></highlight></codeline>
<codeline lineno="3800"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMappingMethods<sp/>__pyx_tp_as_mapping_ValueIterator<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*mp_length*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*mp_subscript*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*mp_ass_subscript*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3804"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"></highlight></codeline>
<codeline lineno="3806"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyBufferProcs<sp/>__pyx_tp_as_buffer_ValueIterator<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3808"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getreadbuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3809"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3810"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3811"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getwritebuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3812"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3813"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3814"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getsegcount*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3815"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3816"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3817"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getcharbuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3818"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3819"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x02060000</highlight></codeline>
<codeline lineno="3820"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getbuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3821"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3822"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x02060000</highlight></codeline>
<codeline lineno="3823"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_releasebuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3824"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3825"><highlight class="preprocessor"></highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"></highlight></codeline>
<codeline lineno="3827"><highlight class="normal">PyTypeObject<sp/>__pyx_type_7svector_ValueIterator<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/>PyVarObject_HEAD_INIT(0,<sp/>0)</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/>__Pyx_NAMESTR(&quot;svector.ValueIterator&quot;),<sp/></highlight><highlight class="comment">/*tp_name*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/>sizeof(struct<sp/><ref refid="struct____pyx__obj__7svector__ValueIterator" kindref="compound">__pyx_obj_7svector_ValueIterator</ref>),<sp/></highlight><highlight class="comment">/*tp_basicsize*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_itemsize*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/>__pyx_tp_dealloc_7svector_ValueIterator,<sp/></highlight><highlight class="comment">/*tp_dealloc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_print*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_getattr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_setattr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_compare*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_repr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/>&amp;__pyx_tp_as_number_ValueIterator,<sp/></highlight><highlight class="comment">/*tp_as_number*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/>&amp;__pyx_tp_as_sequence_ValueIterator,<sp/></highlight><highlight class="comment">/*tp_as_sequence*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/>&amp;__pyx_tp_as_mapping_ValueIterator,<sp/></highlight><highlight class="comment">/*tp_as_mapping*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_hash*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_call*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_str*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_getattro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_setattro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/>&amp;__pyx_tp_as_buffer_ValueIterator,<sp/></highlight><highlight class="comment">/*tp_as_buffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/>Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC,<sp/></highlight><highlight class="comment">/*tp_flags*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_doc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/>__pyx_tp_traverse_7svector_ValueIterator,<sp/></highlight><highlight class="comment">/*tp_traverse*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/>__pyx_tp_clear_7svector_ValueIterator,<sp/></highlight><highlight class="comment">/*tp_clear*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_richcompare*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_weaklistoffset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/>__pyx_pf_7svector_13ValueIterator___iter__,<sp/></highlight><highlight class="comment">/*tp_iter*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/>__pyx_pf_7svector_13ValueIterator___next__,<sp/></highlight><highlight class="comment">/*tp_iternext*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/>__pyx_methods_7svector_ValueIterator,<sp/></highlight><highlight class="comment">/*tp_methods*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_members*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_getset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_base*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_dict*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_descr_get*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_descr_set*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_dictoffset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_init*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_alloc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/>__pyx_tp_new_7svector_ValueIterator,<sp/></highlight><highlight class="comment">/*tp_new*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_free*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_is_gc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_bases*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_mro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_cache*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_subclasses*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_weaklist*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3873"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"></highlight></codeline>
<codeline lineno="3875"><highlight class="normal">static<sp/>PyObject<sp/>*__pyx_tp_new_7svector_KeyValueIterator(PyTypeObject<sp/>*t,<sp/>PyObject<sp/>*a,<sp/>PyObject<sp/>*k)<sp/>{</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyValueIterator" kindref="compound">__pyx_obj_7svector_KeyValueIterator</ref><sp/>*p;</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/>PyObject<sp/>*o<sp/>=<sp/>(*t-&gt;tp_alloc)(t,<sp/>0);</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!o)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyValueIterator" kindref="compound">__pyx_obj_7svector_KeyValueIterator</ref><sp/>*)o);</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/>p-&gt;v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_7svector_Vector<sp/>*)Py_None);<sp/>Py_INCREF(Py_None);</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_pf_7svector_16KeyValueIterator___cinit__(o,<sp/>a,<sp/>k)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(o);<sp/>o<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>o;</highlight></codeline>
<codeline lineno="3885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"></highlight></codeline>
<codeline lineno="3887"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__pyx_tp_dealloc_7svector_KeyValueIterator(PyObject<sp/>*o)<sp/>{</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyValueIterator" kindref="compound">__pyx_obj_7svector_KeyValueIterator</ref><sp/>*p<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyValueIterator" kindref="compound">__pyx_obj_7svector_KeyValueIterator</ref><sp/>*)o;</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*etype,<sp/>*eval,<sp/>*etb;</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Fetch(&amp;etype,<sp/>&amp;eval,<sp/>&amp;etb);</highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/><sp/><sp/>++Py_REFCNT(o);</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_pf_7svector_16KeyValueIterator___dealloc__(o);</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyErr_Occurred())<sp/>PyErr_WriteUnraisable(o);</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/><sp/><sp/>--Py_REFCNT(o);</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Restore(etype,<sp/>eval,<sp/>etb);</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/>Py_XDECREF(((PyObject<sp/>*)p-&gt;v));</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/>(*Py_TYPE(o)-&gt;tp_free)(o);</highlight></codeline>
<codeline lineno="3900"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"></highlight></codeline>
<codeline lineno="3902"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_tp_traverse_7svector_KeyValueIterator(PyObject<sp/>*o,<sp/>visitproc<sp/>v,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a)<sp/>{</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e;</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyValueIterator" kindref="compound">__pyx_obj_7svector_KeyValueIterator</ref><sp/>*p<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyValueIterator" kindref="compound">__pyx_obj_7svector_KeyValueIterator</ref><sp/>*)o;</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;v)<sp/>{</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>=<sp/>(*v)(((PyObject*)p-&gt;v),<sp/>a);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e;</highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3909"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"></highlight></codeline>
<codeline lineno="3911"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_tp_clear_7svector_KeyValueIterator(PyObject<sp/>*o)<sp/>{</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyValueIterator" kindref="compound">__pyx_obj_7svector_KeyValueIterator</ref><sp/>*p<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____pyx__obj__7svector__KeyValueIterator" kindref="compound">__pyx_obj_7svector_KeyValueIterator</ref><sp/>*)o;</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/>PyObject*<sp/>tmp;</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>((PyObject*)p-&gt;v);</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/>p-&gt;v<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_7svector_Vector<sp/>*)Py_None);<sp/>Py_INCREF(Py_None);</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/>Py_XDECREF(tmp);</highlight></codeline>
<codeline lineno="3917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3918"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3919"><highlight class="normal"></highlight></codeline>
<codeline lineno="3920"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PyMethodDef<sp/>__pyx_methods_7svector_KeyValueIterator[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;__iter__&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_7svector_16KeyValueIterator___iter__,<sp/>METH_NOARGS|METH_COEXIST,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;__next__&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_7svector_16KeyValueIterator___next__,<sp/>METH_NOARGS|METH_COEXIST,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/>0}</highlight></codeline>
<codeline lineno="3924"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"></highlight></codeline>
<codeline lineno="3926"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyNumberMethods<sp/>__pyx_tp_as_number_KeyValueIterator<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_add*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_subtract*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_multiply*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3930"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3931"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3932"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3933"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_remainder*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_divmod*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_power*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_negative*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_positive*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_absolute*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_nonzero*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_invert*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_lshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_rshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_and*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_xor*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_or*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3946"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3947"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_coerce*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3948"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3949"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_int*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3950"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight></codeline>
<codeline lineno="3951"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*reserved*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3952"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight></codeline>
<codeline lineno="3953"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_long*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3954"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3955"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_float*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3956"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3957"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_oct*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3958"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3959"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3960"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_hex*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3961"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3962"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_add*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_subtract*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3964"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_multiply*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3965"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="3966"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3967"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3968"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_remainder*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3969"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_power*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3970"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_lshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_rshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_and*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_xor*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_or*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_floor_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_true_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3977"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_floor_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_true_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3979"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>(PY_MAJOR_VERSION<sp/>&gt;=<sp/>3)<sp/>||<sp/>(Py_TPFLAGS_DEFAULT<sp/>&amp;<sp/>Py_TPFLAGS_HAVE_INDEX)</highlight></codeline>
<codeline lineno="3980"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_index*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3981"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="3982"><highlight class="preprocessor"></highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="3983"><highlight class="normal"></highlight></codeline>
<codeline lineno="3984"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PySequenceMethods<sp/>__pyx_tp_as_sequence_KeyValueIterator<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_length*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_concat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_repeat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_item*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_slice*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_ass_item*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_ass_slice*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_contains*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_inplace_concat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_inplace_repeat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3995"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"></highlight></codeline>
<codeline lineno="3997"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMappingMethods<sp/>__pyx_tp_as_mapping_KeyValueIterator<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*mp_length*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*mp_subscript*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*mp_ass_subscript*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4001"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"></highlight></codeline>
<codeline lineno="4003"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyBufferProcs<sp/>__pyx_tp_as_buffer_KeyValueIterator<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="4005"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getreadbuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4006"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4007"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="4008"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getwritebuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4009"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4010"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="4011"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getsegcount*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4012"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4013"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="4014"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getcharbuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4015"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4016"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x02060000</highlight></codeline>
<codeline lineno="4017"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getbuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4018"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4019"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x02060000</highlight></codeline>
<codeline lineno="4020"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_releasebuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4021"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4022"><highlight class="preprocessor"></highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"></highlight></codeline>
<codeline lineno="4024"><highlight class="normal">PyTypeObject<sp/>__pyx_type_7svector_KeyValueIterator<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/>PyVarObject_HEAD_INIT(0,<sp/>0)</highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/>__Pyx_NAMESTR(&quot;svector.KeyValueIterator&quot;),<sp/></highlight><highlight class="comment">/*tp_name*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/>sizeof(struct<sp/><ref refid="struct____pyx__obj__7svector__KeyValueIterator" kindref="compound">__pyx_obj_7svector_KeyValueIterator</ref>),<sp/></highlight><highlight class="comment">/*tp_basicsize*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_itemsize*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/>__pyx_tp_dealloc_7svector_KeyValueIterator,<sp/></highlight><highlight class="comment">/*tp_dealloc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4030"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_print*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4031"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_getattr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_setattr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_compare*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_repr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/>&amp;__pyx_tp_as_number_KeyValueIterator,<sp/></highlight><highlight class="comment">/*tp_as_number*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4036"><highlight class="normal"><sp/><sp/>&amp;__pyx_tp_as_sequence_KeyValueIterator,<sp/></highlight><highlight class="comment">/*tp_as_sequence*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/>&amp;__pyx_tp_as_mapping_KeyValueIterator,<sp/></highlight><highlight class="comment">/*tp_as_mapping*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_hash*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_call*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_str*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_getattro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4042"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_setattro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/>&amp;__pyx_tp_as_buffer_KeyValueIterator,<sp/></highlight><highlight class="comment">/*tp_as_buffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/>Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC,<sp/></highlight><highlight class="comment">/*tp_flags*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_doc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/>__pyx_tp_traverse_7svector_KeyValueIterator,<sp/></highlight><highlight class="comment">/*tp_traverse*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><sp/><sp/>__pyx_tp_clear_7svector_KeyValueIterator,<sp/></highlight><highlight class="comment">/*tp_clear*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_richcompare*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_weaklistoffset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/>__pyx_pf_7svector_16KeyValueIterator___iter__,<sp/></highlight><highlight class="comment">/*tp_iter*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4051"><highlight class="normal"><sp/><sp/>__pyx_pf_7svector_16KeyValueIterator___next__,<sp/></highlight><highlight class="comment">/*tp_iternext*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/>__pyx_methods_7svector_KeyValueIterator,<sp/></highlight><highlight class="comment">/*tp_methods*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4053"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_members*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4054"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_getset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_base*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_dict*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_descr_get*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_descr_set*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_dictoffset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_init*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_alloc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4062"><highlight class="normal"><sp/><sp/>__pyx_tp_new_7svector_KeyValueIterator,<sp/></highlight><highlight class="comment">/*tp_new*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_free*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_is_gc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_bases*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_mro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4067"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_cache*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_subclasses*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_weaklist*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4070"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"></highlight></codeline>
<codeline lineno="4072"><highlight class="normal">static<sp/>struct<sp/>PyMethodDef<sp/>__pyx_methods[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/>0}</highlight></codeline>
<codeline lineno="4074"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4075"><highlight class="normal"></highlight></codeline>
<codeline lineno="4076"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__pyx_init_filenames(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4077"><highlight class="normal"></highlight></codeline>
<codeline lineno="4078"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight></codeline>
<codeline lineno="4079"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PyModuleDef<sp/>__pyx_moduledef<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="4080"><highlight class="normal"><sp/><sp/><sp/><sp/>PyModuleDef_HEAD_INIT,</highlight></codeline>
<codeline lineno="4081"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;svector&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4082"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*<sp/>m_doc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4083"><highlight class="normal"><sp/><sp/><sp/><sp/>-1,<sp/></highlight><highlight class="comment">/*<sp/>m_size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4084"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_methods<sp/></highlight><highlight class="comment">/*<sp/>m_methods<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4085"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL,<sp/></highlight><highlight class="comment">/*<sp/>m_reload<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4086"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL,<sp/></highlight><highlight class="comment">/*<sp/>m_traverse<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4087"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL,<sp/></highlight><highlight class="comment">/*<sp/>m_clear<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL<sp/></highlight><highlight class="comment">/*<sp/>m_free<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4089"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4090"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4091"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4092"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct____Pyx__StringTabEntry" kindref="compound">__Pyx_StringTabEntry</ref><sp/>__pyx_string_tab[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp___main__,<sp/>__pyx_k___main__,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k___main__),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp___cinit__,<sp/>__pyx_k___cinit__,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k___cinit__),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp___dealloc__,<sp/>__pyx_k___dealloc__,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k___dealloc__),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4096"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp___iter__,<sp/>__pyx_k___iter__,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k___iter__),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp___next__,<sp/>__pyx_k___next__,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k___next__),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp___init__,<sp/>__pyx_k___init__,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k___init__),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp___copy__,<sp/>__pyx_k___copy__,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k___copy__),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp___str__,<sp/>__pyx_k___str__,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k___str__),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp___reduce__,<sp/>__pyx_k___reduce__,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k___reduce__),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp___len__,<sp/>__pyx_k___len__,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k___len__),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp___setitem__,<sp/>__pyx_k___setitem__,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k___setitem__),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4104"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp___getitem__,<sp/>__pyx_k___getitem__,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k___getitem__),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp___delitem__,<sp/>__pyx_k___delitem__,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k___delitem__),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4106"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_iterkeys,<sp/>__pyx_k_iterkeys,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_iterkeys),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_itervalues,<sp/>__pyx_k_itervalues,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_itervalues),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_iteritems,<sp/>__pyx_k_iteritems,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_iteritems),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp___contains__,<sp/>__pyx_k___contains__,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k___contains__),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4110"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp___iadd__,<sp/>__pyx_k___iadd__,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k___iadd__),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4111"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp___isub__,<sp/>__pyx_k___isub__,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k___isub__),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp___imul__,<sp/>__pyx_k___imul__,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k___imul__),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp___idiv__,<sp/>__pyx_k___idiv__,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k___idiv__),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp___add__,<sp/>__pyx_k___add__,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k___add__),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp___sub__,<sp/>__pyx_k___sub__,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k___sub__),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp___mul__,<sp/>__pyx_k___mul__,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k___mul__),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp___div__,<sp/>__pyx_k___div__,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k___div__),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4118"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp___neg__,<sp/>__pyx_k___neg__,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k___neg__),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp___pos__,<sp/>__pyx_k___pos__,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k___pos__),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4120"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_dot,<sp/>__pyx_k_dot,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_dot),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4121"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_norm,<sp/>__pyx_k_norm,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_norm),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4122"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_v,<sp/>__pyx_k_v,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_v),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4123"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_f,<sp/>__pyx_k_f,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_f),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_x,<sp/>__pyx_k_x,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_x),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_other,<sp/>__pyx_k_other,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_other),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_self,<sp/>__pyx_k_self,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_self),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_StopIteration,<sp/>__pyx_k_StopIteration,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_StopIteration),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_TypeError,<sp/>__pyx_k_TypeError,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_TypeError),<sp/>1,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0}</highlight></codeline>
<codeline lineno="4130"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4131"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_InitCachedBuiltins(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4132"><highlight class="normal"><sp/><sp/>__pyx_builtin_StopIteration<sp/>=<sp/>__Pyx_GetName(__pyx_b,<sp/>__pyx_kp_StopIteration);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_builtin_StopIteration)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>72;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"><sp/><sp/>__pyx_builtin_TypeError<sp/>=<sp/>__Pyx_GetName(__pyx_b,<sp/>__pyx_kp_TypeError);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_builtin_TypeError)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>140;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4135"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4138"><highlight class="normal"></highlight></codeline>
<codeline lineno="4139"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_InitGlobals(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_InitStrings(__pyx_string_tab)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4145"><highlight class="normal"></highlight></codeline>
<codeline lineno="4146"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="4147"><highlight class="preprocessor"></highlight><highlight class="normal">PyMODINIT_FUNC<sp/>initsvector(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4148"><highlight class="normal">PyMODINIT_FUNC<sp/>initsvector(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4149"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="4150"><highlight class="preprocessor"></highlight><highlight class="normal">PyMODINIT_FUNC<sp/>PyInit_svector(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4151"><highlight class="normal">PyMODINIT_FUNC<sp/>PyInit_svector(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4152"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4153"><highlight class="preprocessor"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4154"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>CYTHON_REFNANNY</highlight></codeline>
<codeline lineno="4155"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>__pyx_refchk<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/>__Pyx_Refnanny<sp/>=<sp/>__Pyx_ImportRefcountAPI(</highlight><highlight class="stringliteral">&quot;refnanny&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__Pyx_Refnanny)<sp/>{</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_Refnanny<sp/>=<sp/>__Pyx_ImportRefcountAPI(</highlight><highlight class="stringliteral">&quot;Cython.Runtime.refnanny&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__Pyx_Refnanny)</highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_FatalError(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>import<sp/>refnanny<sp/>module&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4163"><highlight class="normal"><sp/><sp/>__pyx_refchk<sp/>=<sp/>__Pyx_Refnanny-&gt;NewContext(</highlight><highlight class="stringliteral">&quot;PyMODINIT_FUNC<sp/>PyInit_svector(void)&quot;</highlight><highlight class="normal">,<sp/>__LINE__,<sp/>__FILE__);</highlight></codeline>
<codeline lineno="4164"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4165"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>__pyx_empty_tuple<sp/>=<sp/>PyTuple_New(0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_empty_tuple))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Library<sp/>function<sp/>declarations<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4167"><highlight class="normal"><sp/><sp/>__pyx_init_filenames();</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Threads<sp/>initialization<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4169"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(__PYX_FORCE_INIT_THREADS)<sp/>&amp;&amp;<sp/>__PYX_FORCE_INIT_THREADS</highlight></codeline>
<codeline lineno="4170"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>WITH_THREAD<sp/></highlight><highlight class="comment">/*<sp/>Python<sp/>build<sp/>with<sp/>threading<sp/>support?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4171"><highlight class="normal"><sp/><sp/>PyEval_InitThreads();</highlight></codeline>
<codeline lineno="4172"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4173"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4174"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Initialize<sp/>various<sp/>global<sp/>constants<sp/>etc.<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_InitGlobals()<sp/>&lt;<sp/>0))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Module<sp/>creation<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4177"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="4178"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>__pyx_m<sp/>=<sp/>Py_InitModule4(__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;svector&quot;</highlight><highlight class="normal">),<sp/>__pyx_methods,<sp/>0,<sp/>0,<sp/>PYTHON_API_VERSION);</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight></codeline>
<codeline lineno="4180"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>__pyx_m<sp/>=<sp/>PyModule_Create(&amp;__pyx_moduledef);</highlight></codeline>
<codeline lineno="4181"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4182"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_m)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="4184"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>Py_INCREF(__pyx_m);</highlight></codeline>
<codeline lineno="4185"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4186"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>__pyx_b<sp/>=<sp/>PyImport_AddModule(__Pyx_NAMESTR(__Pyx_BUILTIN_MODULE_NAME));</highlight></codeline>
<codeline lineno="4187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_b)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="4188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_SetAttrString(__pyx_m,<sp/></highlight><highlight class="stringliteral">&quot;__builtins__&quot;</highlight><highlight class="normal">,<sp/>__pyx_b)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="4189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_module_is_main_svector)<sp/>{</highlight></codeline>
<codeline lineno="4190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_SetAttrString(__pyx_m,<sp/></highlight><highlight class="stringliteral">&quot;__name__&quot;</highlight><highlight class="normal">,<sp/>__pyx_kp___main__)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Builtin<sp/>init<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_InitCachedBuiltins()<sp/>&lt;<sp/>0))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><sp/><sp/>__pyx_skip_dispatch<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Global<sp/>init<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Function<sp/>export<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Type<sp/>init<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyType_Ready(&amp;__pyx_type_7svector_Vector)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>116;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_SetAttrString(__pyx_m,<sp/></highlight><highlight class="stringliteral">&quot;Vector&quot;</highlight><highlight class="normal">,<sp/>(PyObject<sp/>*)&amp;__pyx_type_7svector_Vector)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>116;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4200"><highlight class="normal"><sp/><sp/>__pyx_ptype_7svector_Vector<sp/>=<sp/>&amp;__pyx_type_7svector_Vector;</highlight></codeline>
<codeline lineno="4201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyType_Ready(&amp;__pyx_type_7svector_KeyIterator)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>54;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_SetAttrString(__pyx_m,<sp/></highlight><highlight class="stringliteral">&quot;KeyIterator&quot;</highlight><highlight class="normal">,<sp/>(PyObject<sp/>*)&amp;__pyx_type_7svector_KeyIterator)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>54;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4203"><highlight class="normal"><sp/><sp/>__pyx_ptype_7svector_KeyIterator<sp/>=<sp/>&amp;__pyx_type_7svector_KeyIterator;</highlight></codeline>
<codeline lineno="4204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyType_Ready(&amp;__pyx_type_7svector_ValueIterator)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>74;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_SetAttrString(__pyx_m,<sp/></highlight><highlight class="stringliteral">&quot;ValueIterator&quot;</highlight><highlight class="normal">,<sp/>(PyObject<sp/>*)&amp;__pyx_type_7svector_ValueIterator)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>74;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4206"><highlight class="normal"><sp/><sp/>__pyx_ptype_7svector_ValueIterator<sp/>=<sp/>&amp;__pyx_type_7svector_ValueIterator;</highlight></codeline>
<codeline lineno="4207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyType_Ready(&amp;__pyx_type_7svector_KeyValueIterator)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>94;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_SetAttrString(__pyx_m,<sp/></highlight><highlight class="stringliteral">&quot;KeyValueIterator&quot;</highlight><highlight class="normal">,<sp/>(PyObject<sp/>*)&amp;__pyx_type_7svector_KeyValueIterator)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>94;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/>__pyx_ptype_7svector_KeyValueIterator<sp/>=<sp/>&amp;__pyx_type_7svector_KeyValueIterator;</highlight></codeline>
<codeline lineno="4210"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Type<sp/>import<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Function<sp/>import<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Execution<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4213"><highlight class="normal"></highlight></codeline>
<codeline lineno="4214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/auto/nlg-01/chiangd/svector/numberizer.pxd&quot;:1</highlight></codeline>
<codeline lineno="4215"><highlight class="comment"><sp/>*<sp/>cdef<sp/>extern<sp/>from<sp/>&quot;string&quot;:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4216"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>ctypedef<sp/>struct<sp/>c_string<sp/>&quot;std::string&quot;</highlight></codeline>
<codeline lineno="4217"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4218"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="4220"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="4221"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;svector&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4222"><highlight class="normal"><sp/><sp/>Py_DECREF(__pyx_m);<sp/>__pyx_m<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4223"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="4224"><highlight class="normal"><sp/><sp/>__Pyx_FinishRefcountContext();</highlight></codeline>
<codeline lineno="4225"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="4226"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight></codeline>
<codeline lineno="4228"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_m;</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4230"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="4231"><highlight class="normal"></highlight></codeline>
<codeline lineno="4232"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filenames[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;svector.pyx&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4234"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4235"><highlight class="normal"></highlight></codeline>
<codeline lineno="4236"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Runtime<sp/>support<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4237"><highlight class="normal"></highlight></codeline>
<codeline lineno="4238"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__pyx_init_filenames(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/>__pyx_f<sp/>=<sp/>__pyx_filenames;</highlight></codeline>
<codeline lineno="4240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4241"><highlight class="normal"></highlight></codeline>
<codeline lineno="4242"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_RaiseDoubleKeywordsError(</highlight></codeline>
<codeline lineno="4243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>func_name,</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>kw_name)</highlight></codeline>
<codeline lineno="4245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,</highlight></codeline>
<codeline lineno="4247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>got<sp/>multiple<sp/>values<sp/>for<sp/>keyword<sp/>argument<sp/>&apos;%U&apos;&quot;</highlight><highlight class="normal">,<sp/>func_name,<sp/>kw_name);</highlight></codeline>
<codeline lineno="4249"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight></codeline>
<codeline lineno="4250"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>got<sp/>multiple<sp/>values<sp/>for<sp/>keyword<sp/>argument<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>func_name,</highlight></codeline>
<codeline lineno="4251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyString_AS_STRING(kw_name));</highlight></codeline>
<codeline lineno="4252"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4253"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="4254"><highlight class="normal"></highlight></codeline>
<codeline lineno="4255"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_RaiseArgtupleInvalid(</highlight></codeline>
<codeline lineno="4256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>func_name,</highlight></codeline>
<codeline lineno="4257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exact,</highlight></codeline>
<codeline lineno="4258"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>num_min,</highlight></codeline>
<codeline lineno="4259"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>num_max,</highlight></codeline>
<codeline lineno="4260"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>num_found)</highlight></codeline>
<codeline lineno="4261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4262"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>num_expected;</highlight></codeline>
<codeline lineno="4263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*number,<sp/>*more_or_less;</highlight></codeline>
<codeline lineno="4264"><highlight class="normal"></highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_found<sp/>&lt;<sp/>num_min)<sp/>{</highlight></codeline>
<codeline lineno="4266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_expected<sp/>=<sp/>num_min;</highlight></codeline>
<codeline lineno="4267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>more_or_less<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;at<sp/>least&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_expected<sp/>=<sp/>num_max;</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>more_or_less<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;at<sp/>most&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exact)<sp/>{</highlight></codeline>
<codeline lineno="4273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>more_or_less<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;exactly&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4275"><highlight class="normal"><sp/><sp/><sp/><sp/>number<sp/>=<sp/>(num_expected<sp/>==<sp/>1)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4276"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,</highlight></codeline>
<codeline lineno="4277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x02050000</highlight></codeline>
<codeline lineno="4278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>takes<sp/>%s<sp/>%d<sp/>positional<sp/>argument%s<sp/>(%d<sp/>given)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>takes<sp/>%s<sp/>%zd<sp/>positional<sp/>argument%s<sp/>(%zd<sp/>given)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func_name,<sp/>more_or_less,<sp/>num_expected,<sp/>number,<sp/>num_found);</highlight></codeline>
<codeline lineno="4283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4284"><highlight class="normal"></highlight></codeline>
<codeline lineno="4285"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_ParseOptionalKeywords(</highlight></codeline>
<codeline lineno="4286"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*kwds,</highlight></codeline>
<codeline lineno="4287"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>**argnames[],</highlight></codeline>
<codeline lineno="4288"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*kwds2,</highlight></codeline>
<codeline lineno="4289"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*values[],</highlight></codeline>
<codeline lineno="4290"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>num_pos_args,</highlight></codeline>
<codeline lineno="4291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>function_name)</highlight></codeline>
<codeline lineno="4292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4293"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*key<sp/>=<sp/>0,<sp/>*value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject***<sp/>name;</highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject***<sp/>first_kw_arg<sp/>=<sp/>argnames<sp/>+<sp/>num_pos_args;</highlight></codeline>
<codeline lineno="4297"><highlight class="normal"></highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(PyDict_Next(kwds,<sp/>&amp;pos,<sp/>&amp;key,<sp/>&amp;value))<sp/>{</highlight></codeline>
<codeline lineno="4299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>first_kw_arg;</highlight></codeline>
<codeline lineno="4300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*name<sp/>&amp;&amp;<sp/>(**name<sp/>!=<sp/>key))<sp/>name++;</highlight></codeline>
<codeline lineno="4301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*name)<sp/>{</highlight></codeline>
<codeline lineno="4302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values[name-argnames]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="4303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4304"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="4305"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!PyString_CheckExact(key))<sp/>&amp;&amp;<sp/>unlikely(!PyString_Check(key)))<sp/>{</highlight></codeline>
<codeline lineno="4306"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight></codeline>
<codeline lineno="4307"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!PyUnicode_CheckExact(key))<sp/>&amp;&amp;<sp/>unlikely(!PyUnicode_Check(key)))<sp/>{</highlight></codeline>
<codeline lineno="4308"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4309"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>invalid_keyword_type;</highlight></codeline>
<codeline lineno="4310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(name<sp/>=<sp/>first_kw_arg;<sp/>*name;<sp/>name++)<sp/>{</highlight></codeline>
<codeline lineno="4312"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight></codeline>
<codeline lineno="4313"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyUnicode_GET_SIZE(**name)<sp/>==<sp/>PyUnicode_GET_SIZE(key)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyUnicode_Compare(**name,<sp/>key)<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight></codeline>
<codeline lineno="4316"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyString_GET_SIZE(**name)<sp/>==<sp/>PyString_GET_SIZE(key)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_PyString_Eq(**name,<sp/>key))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4318"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4319"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*name)<sp/>{</highlight></codeline>
<codeline lineno="4321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values[name-argnames]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="4322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unexpected<sp/>keyword<sp/>found<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(name=argnames;<sp/>name<sp/>!=<sp/>first_kw_arg;<sp/>name++)<sp/>{</highlight></codeline>
<codeline lineno="4325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(**name<sp/>==<sp/>key)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>arg_passed_twice;</highlight></codeline>
<codeline lineno="4326"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight></codeline>
<codeline lineno="4327"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyUnicode_GET_SIZE(**name)<sp/>==<sp/>PyUnicode_GET_SIZE(key)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyUnicode_Compare(**name,<sp/>key)<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>arg_passed_twice;</highlight></codeline>
<codeline lineno="4329"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight></codeline>
<codeline lineno="4330"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyString_GET_SIZE(**name)<sp/>==<sp/>PyString_GET_SIZE(key)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_PyString_Eq(**name,<sp/>key))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>arg_passed_twice;</highlight></codeline>
<codeline lineno="4332"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4333"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kwds2)<sp/>{</highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyDict_SetItem(kwds2,<sp/>key,<sp/>value)))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="4336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>invalid_keyword;</highlight></codeline>
<codeline lineno="4338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4344"><highlight class="normal">arg_passed_twice:</highlight></codeline>
<codeline lineno="4345"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_RaiseDoubleKeywordsError(function_name,<sp/>**name);</highlight></codeline>
<codeline lineno="4346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="4347"><highlight class="normal">invalid_keyword_type:</highlight></codeline>
<codeline lineno="4348"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,</highlight></codeline>
<codeline lineno="4349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>keywords<sp/>must<sp/>be<sp/>strings&quot;</highlight><highlight class="normal">,<sp/>function_name);</highlight></codeline>
<codeline lineno="4350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="4351"><highlight class="normal">invalid_keyword:</highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/><sp/><sp/>#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>got<sp/>an<sp/>unexpected<sp/>keyword<sp/>argument<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function_name,<sp/>PyString_AsString(key));</highlight></codeline>
<codeline lineno="4356"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight></codeline>
<codeline lineno="4357"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>got<sp/>an<sp/>unexpected<sp/>keyword<sp/>argument<sp/>&apos;%U&apos;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function_name,<sp/>key);</highlight></codeline>
<codeline lineno="4359"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4360"><highlight class="preprocessor"></highlight><highlight class="normal">bad:</highlight></codeline>
<codeline lineno="4361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4363"><highlight class="normal"></highlight></codeline>
<codeline lineno="4364"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_CheckKeywordStrings(</highlight></codeline>
<codeline lineno="4365"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*kwdict,</highlight></codeline>
<codeline lineno="4366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>function_name,</highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kw_allowed)</highlight></codeline>
<codeline lineno="4368"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>key<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(PyDict_Next(kwdict,<sp/>&amp;pos,<sp/>&amp;key,<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="4372"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="4373"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!PyString_CheckExact(key))<sp/>&amp;&amp;<sp/>unlikely(!PyString_Check(key)))</highlight></codeline>
<codeline lineno="4374"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight></codeline>
<codeline lineno="4375"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!PyUnicode_CheckExact(key))<sp/>&amp;&amp;<sp/>unlikely(!PyUnicode_Check(key)))</highlight></codeline>
<codeline lineno="4376"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4377"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>invalid_keyword_type;</highlight></codeline>
<codeline lineno="4378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!kw_allowed)<sp/>&amp;&amp;<sp/>unlikely(key))</highlight></codeline>
<codeline lineno="4380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>invalid_keyword;</highlight></codeline>
<codeline lineno="4381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4382"><highlight class="normal">invalid_keyword_type:</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>keywords<sp/>must<sp/>be<sp/>strings&quot;</highlight><highlight class="normal">,<sp/>function_name);</highlight></codeline>
<codeline lineno="4385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4386"><highlight class="normal">invalid_keyword:</highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"><sp/><sp/><sp/><sp/>#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="4389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>got<sp/>an<sp/>unexpected<sp/>keyword<sp/>argument<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function_name,<sp/>PyString_AsString(key));</highlight></codeline>
<codeline lineno="4391"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight></codeline>
<codeline lineno="4392"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>got<sp/>an<sp/>unexpected<sp/>keyword<sp/>argument<sp/>&apos;%U&apos;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function_name,<sp/>key);</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4395"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4397"><highlight class="normal"></highlight></codeline>
<codeline lineno="4398"><highlight class="normal"></highlight></codeline>
<codeline lineno="4399"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_TypeTest(PyObject<sp/>*obj,<sp/>PyTypeObject<sp/>*type)<sp/>{</highlight></codeline>
<codeline lineno="4400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!type)<sp/>{</highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_SystemError,<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>type<sp/>object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>Py_None<sp/>||<sp/>PyObject_TypeCheck(obj,<sp/>type))</highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4406"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>convert<sp/>%s<sp/>to<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_TYPE(obj)-&gt;tp_name,<sp/>type-&gt;tp_name);</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"></highlight></codeline>
<codeline lineno="4411"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_ArgTypeTest(PyObject<sp/>*obj,<sp/>PyTypeObject<sp/>*type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>none_allowed,</highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exact)</highlight></codeline>
<codeline lineno="4413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!type)<sp/>{</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_SystemError,<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>type<sp/>object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(none_allowed<sp/>&amp;&amp;<sp/>obj<sp/>==<sp/>Py_None)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exact)<sp/>{</highlight></codeline>
<codeline lineno="4420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Py_TYPE(obj)<sp/>==<sp/>type)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_TypeCheck(obj,<sp/>type))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Argument<sp/>&apos;%s&apos;<sp/>has<sp/>incorrect<sp/>type<sp/>(expected<sp/>%s,<sp/>got<sp/>%s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name,<sp/>type-&gt;tp_name,<sp/>Py_TYPE(obj)-&gt;tp_name);</highlight></codeline>
<codeline lineno="4428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"></highlight></codeline>
<codeline lineno="4431"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_GetName(PyObject<sp/>*dict,<sp/>PyObject<sp/>*name)<sp/>{</highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*result;</highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>PyObject_GetAttr(dict,<sp/>name);</highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result)</highlight></codeline>
<codeline lineno="4435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetObject(PyExc_NameError,<sp/>name);</highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4438"><highlight class="normal"></highlight></codeline>
<codeline lineno="4439"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_Raise(PyObject<sp/>*type,<sp/>PyObject<sp/>*value,<sp/>PyObject<sp/>*tb)<sp/>{</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XINCREF(type);</highlight></codeline>
<codeline lineno="4441"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XINCREF(value);</highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XINCREF(tb);</highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First,<sp/>check<sp/>the<sp/>traceback<sp/>argument,<sp/>replacing<sp/>None<sp/>with<sp/>NULL.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tb<sp/>==<sp/>Py_None)<sp/>{</highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(tb);</highlight></codeline>
<codeline lineno="4446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tb<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tb<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>!PyTraceBack_Check(tb))<sp/>{</highlight></codeline>
<codeline lineno="4449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;raise:<sp/>arg<sp/>3<sp/>must<sp/>be<sp/>a<sp/>traceback<sp/>or<sp/>None&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>raise_error;</highlight></codeline>
<codeline lineno="4452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Next,<sp/>replace<sp/>a<sp/>missing<sp/>value<sp/>with<sp/>None<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>Py_None;</highlight></codeline>
<codeline lineno="4456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(value);</highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4458"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x02050000</highlight></codeline>
<codeline lineno="4459"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyClass_Check(type))</highlight></codeline>
<codeline lineno="4460"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight></codeline>
<codeline lineno="4461"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyType_Check(type))</highlight></codeline>
<codeline lineno="4462"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4463"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Raising<sp/>an<sp/>instance.<sp/><sp/>The<sp/>value<sp/>should<sp/>be<sp/>a<sp/>dummy.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>!=<sp/>Py_None)<sp/>{</highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;instance<sp/>exception<sp/>may<sp/>not<sp/>have<sp/>a<sp/>separate<sp/>value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>raise_error;</highlight></codeline>
<codeline lineno="4469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Normalize<sp/>to<sp/>raise<sp/>&lt;class&gt;,<sp/>&lt;instance&gt;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(value);</highlight></codeline>
<codeline lineno="4472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="4473"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x02050000</highlight></codeline>
<codeline lineno="4474"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyInstance_Check(type))<sp/>{</highlight></codeline>
<codeline lineno="4475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>(PyObject*)<sp/>((PyInstanceObject*)type)-&gt;in_class;</highlight></codeline>
<codeline lineno="4476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(type);</highlight></codeline>
<codeline lineno="4477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;raise:<sp/>exception<sp/>must<sp/>be<sp/>an<sp/>old-style<sp/>class<sp/>or<sp/>instance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>raise_error;</highlight></codeline>
<codeline lineno="4483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4484"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight></codeline>
<codeline lineno="4485"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>(PyObject*)<sp/>Py_TYPE(type);</highlight></codeline>
<codeline lineno="4486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(type);</highlight></codeline>
<codeline lineno="4487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyType_IsSubtype((PyTypeObject<sp/>*)type,<sp/>(PyTypeObject<sp/>*)PyExc_BaseException))<sp/>{</highlight></codeline>
<codeline lineno="4488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;raise:<sp/>exception<sp/>class<sp/>must<sp/>be<sp/>a<sp/>subclass<sp/>of<sp/>BaseException&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>raise_error;</highlight></codeline>
<codeline lineno="4491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4492"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4493"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4494"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_ErrRestore(type,<sp/>value,<sp/>tb);</highlight></codeline>
<codeline lineno="4495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4496"><highlight class="normal">raise_error:</highlight></codeline>
<codeline lineno="4497"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(value);</highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(type);</highlight></codeline>
<codeline lineno="4499"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(tb);</highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4502"><highlight class="normal"></highlight></codeline>
<codeline lineno="4503"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_ErrRestore(PyObject<sp/>*type,<sp/>PyObject<sp/>*value,<sp/>PyObject<sp/>*tb)<sp/>{</highlight></codeline>
<codeline lineno="4504"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp_type,<sp/>*tmp_value,<sp/>*tmp_tb;</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"><sp/><sp/><sp/><sp/>PyThreadState<sp/>*tstate<sp/>=<sp/>PyThreadState_GET();</highlight></codeline>
<codeline lineno="4506"><highlight class="normal"></highlight></codeline>
<codeline lineno="4507"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight></codeline>
<codeline lineno="4508"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note:<sp/>this<sp/>is<sp/>a<sp/>temporary<sp/>work-around<sp/>to<sp/>prevent<sp/>crashes<sp/>in<sp/>Python<sp/>3.0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tstate-&gt;exc_type<sp/>!=<sp/>NULL)<sp/>&amp;<sp/>(tstate-&gt;exc_type<sp/>!=<sp/>Py_None))<sp/>{</highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_type<sp/>=<sp/>tstate-&gt;exc_type;</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_value<sp/>=<sp/>tstate-&gt;exc_value;</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_tb<sp/>=<sp/>tstate-&gt;exc_traceback;</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_NormalizeException(&amp;type,<sp/>&amp;value,<sp/>&amp;tb);</highlight></codeline>
<codeline lineno="4514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_NormalizeException(&amp;tmp_type,<sp/>&amp;tmp_value,<sp/>&amp;tmp_tb);</highlight></codeline>
<codeline lineno="4515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tstate-&gt;exc_type<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tstate-&gt;exc_value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tstate-&gt;exc_traceback<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyException_SetContext(value,<sp/>tmp_value);</highlight></codeline>
<codeline lineno="4519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(tmp_type);</highlight></codeline>
<codeline lineno="4520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_XDECREF(tmp_tb);</highlight></codeline>
<codeline lineno="4521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4522"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4523"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4524"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp_type<sp/>=<sp/>tstate-&gt;curexc_type;</highlight></codeline>
<codeline lineno="4525"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp_value<sp/>=<sp/>tstate-&gt;curexc_value;</highlight></codeline>
<codeline lineno="4526"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp_tb<sp/>=<sp/>tstate-&gt;curexc_traceback;</highlight></codeline>
<codeline lineno="4527"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate-&gt;curexc_type<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="4528"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate-&gt;curexc_value<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="4529"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate-&gt;curexc_traceback<sp/>=<sp/>tb;</highlight></codeline>
<codeline lineno="4530"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(tmp_type);</highlight></codeline>
<codeline lineno="4531"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(tmp_value);</highlight></codeline>
<codeline lineno="4532"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(tmp_tb);</highlight></codeline>
<codeline lineno="4533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4534"><highlight class="normal"></highlight></codeline>
<codeline lineno="4535"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_ErrFetch(PyObject<sp/>**type,<sp/>PyObject<sp/>**value,<sp/>PyObject<sp/>**tb)<sp/>{</highlight></codeline>
<codeline lineno="4536"><highlight class="normal"><sp/><sp/><sp/><sp/>PyThreadState<sp/>*tstate<sp/>=<sp/>PyThreadState_GET();</highlight></codeline>
<codeline lineno="4537"><highlight class="normal"><sp/><sp/><sp/><sp/>*type<sp/>=<sp/>tstate-&gt;curexc_type;</highlight></codeline>
<codeline lineno="4538"><highlight class="normal"><sp/><sp/><sp/><sp/>*value<sp/>=<sp/>tstate-&gt;curexc_value;</highlight></codeline>
<codeline lineno="4539"><highlight class="normal"><sp/><sp/><sp/><sp/>*tb<sp/>=<sp/>tstate-&gt;curexc_traceback;</highlight></codeline>
<codeline lineno="4540"><highlight class="normal"></highlight></codeline>
<codeline lineno="4541"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate-&gt;curexc_type<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4542"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate-&gt;curexc_value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4543"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate-&gt;curexc_traceback<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4545"><highlight class="normal"></highlight></codeline>
<codeline lineno="4546"><highlight class="normal"></highlight></codeline>
<codeline lineno="4547"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_RaiseNeedMoreValuesError(Py_ssize_t<sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="4548"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_ValueError,</highlight></codeline>
<codeline lineno="4549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x02050000</highlight></codeline>
<codeline lineno="4550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;need<sp/>more<sp/>than<sp/>%d<sp/>value%s<sp/>to<sp/>unpack&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)index,</highlight></codeline>
<codeline lineno="4551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;need<sp/>more<sp/>than<sp/>%zd<sp/>value%s<sp/>to<sp/>unpack&quot;</highlight><highlight class="normal">,<sp/>index,</highlight></codeline>
<codeline lineno="4553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(index<sp/>==<sp/>1)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4556"><highlight class="normal"></highlight></codeline>
<codeline lineno="4557"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_RaiseTooManyValuesError(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4558"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;too<sp/>many<sp/>values<sp/>to<sp/>unpack&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4560"><highlight class="normal"></highlight></codeline>
<codeline lineno="4561"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_UnpackItem(PyObject<sp/>*iter,<sp/>Py_ssize_t<sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="4562"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*item;</highlight></codeline>
<codeline lineno="4563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(item<sp/>=<sp/>PyIter_Next(iter)))<sp/>{</highlight></codeline>
<codeline lineno="4564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyErr_Occurred())<sp/>{</highlight></codeline>
<codeline lineno="4565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_RaiseNeedMoreValuesError(index);</highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item;</highlight></codeline>
<codeline lineno="4569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4570"><highlight class="normal"></highlight></codeline>
<codeline lineno="4571"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_EndUnpack(PyObject<sp/>*iter)<sp/>{</highlight></codeline>
<codeline lineno="4572"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*item;</highlight></codeline>
<codeline lineno="4573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((item<sp/>=<sp/>PyIter_Next(iter)))<sp/>{</highlight></codeline>
<codeline lineno="4574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(item);</highlight></codeline>
<codeline lineno="4575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_RaiseTooManyValuesError();</highlight></codeline>
<codeline lineno="4576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyErr_Occurred())</highlight></codeline>
<codeline lineno="4579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4583"><highlight class="normal"></highlight></codeline>
<codeline lineno="4584"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_StrEq(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s2)<sp/>{</highlight></codeline>
<codeline lineno="4585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*s1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*s1<sp/>==<sp/>*s2)<sp/>{<sp/>s1++;<sp/>s2++;<sp/>}</highlight></codeline>
<codeline lineno="4586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*s1<sp/>==<sp/>*s2;</highlight></codeline>
<codeline lineno="4587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4588"><highlight class="normal"></highlight></codeline>
<codeline lineno="4589"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsUnsignedChar(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="4590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsLong(x);</highlight></codeline>
<codeline lineno="4592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>!=<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)val))<sp/>{</highlight></codeline>
<codeline lineno="4593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>PyErr_Occurred()))</highlight></codeline>
<codeline lineno="4594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="4595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="4597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>unsigned<sp/>char&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;value<sp/>too<sp/>large<sp/>to<sp/>convert<sp/>to<sp/>unsigned<sp/>char&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="4603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)val;</highlight></codeline>
<codeline lineno="4605"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)__Pyx_PyInt_AsUnsignedLong(x);</highlight></codeline>
<codeline lineno="4607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4608"><highlight class="normal"></highlight></codeline>
<codeline lineno="4609"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsUnsignedShort(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="4610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsLong(x);</highlight></codeline>
<codeline lineno="4612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>!=<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)val))<sp/>{</highlight></codeline>
<codeline lineno="4613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>PyErr_Occurred()))</highlight></codeline>
<codeline lineno="4614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="4615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="4616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="4617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>unsigned<sp/>short&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="4619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="4621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;value<sp/>too<sp/>large<sp/>to<sp/>convert<sp/>to<sp/>unsigned<sp/>short&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="4623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)val;</highlight></codeline>
<codeline lineno="4625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)__Pyx_PyInt_AsUnsignedLong(x);</highlight></codeline>
<codeline lineno="4627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4628"><highlight class="normal"></highlight></codeline>
<codeline lineno="4629"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsUnsignedInt(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="4630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsLong(x);</highlight></codeline>
<codeline lineno="4632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>!=<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)val))<sp/>{</highlight></codeline>
<codeline lineno="4633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>PyErr_Occurred()))</highlight></codeline>
<codeline lineno="4634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="4635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="4636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="4637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>unsigned<sp/>int&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="4639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="4641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;value<sp/>too<sp/>large<sp/>to<sp/>convert<sp/>to<sp/>unsigned<sp/>int&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="4643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)val;</highlight></codeline>
<codeline lineno="4645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)__Pyx_PyInt_AsUnsignedLong(x);</highlight></codeline>
<codeline lineno="4647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"></highlight></codeline>
<codeline lineno="4649"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsChar(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="4650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsLong(x);</highlight></codeline>
<codeline lineno="4652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>!=<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)val))<sp/>{</highlight></codeline>
<codeline lineno="4653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>PyErr_Occurred()))</highlight></codeline>
<codeline lineno="4654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="4655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="4656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;value<sp/>too<sp/>large<sp/>to<sp/>convert<sp/>to<sp/>char&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="4658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)val;</highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)__Pyx_PyInt_AsLong(x);</highlight></codeline>
<codeline lineno="4662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4663"><highlight class="normal"></highlight></codeline>
<codeline lineno="4664"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsShort(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="4665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsLong(x);</highlight></codeline>
<codeline lineno="4667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>!=<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)val))<sp/>{</highlight></codeline>
<codeline lineno="4668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>PyErr_Occurred()))</highlight></codeline>
<codeline lineno="4669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="4670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;value<sp/>too<sp/>large<sp/>to<sp/>convert<sp/>to<sp/>short&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="4673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)val;</highlight></codeline>
<codeline lineno="4675"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)__Pyx_PyInt_AsLong(x);</highlight></codeline>
<codeline lineno="4677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4678"><highlight class="normal"></highlight></codeline>
<codeline lineno="4679"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsInt(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="4680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsLong(x);</highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>!=<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)val))<sp/>{</highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>PyErr_Occurred()))</highlight></codeline>
<codeline lineno="4684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="4685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="4686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;value<sp/>too<sp/>large<sp/>to<sp/>convert<sp/>to<sp/>int&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="4688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)val;</highlight></codeline>
<codeline lineno="4690"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)__Pyx_PyInt_AsLong(x);</highlight></codeline>
<codeline lineno="4692"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4693"><highlight class="normal"></highlight></codeline>
<codeline lineno="4694"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsSignedChar(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="4695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsLong(x);</highlight></codeline>
<codeline lineno="4697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>!=<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)val))<sp/>{</highlight></codeline>
<codeline lineno="4698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>PyErr_Occurred()))</highlight></codeline>
<codeline lineno="4699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="4700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="4701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;value<sp/>too<sp/>large<sp/>to<sp/>convert<sp/>to<sp/>signed<sp/>char&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)val;</highlight></codeline>
<codeline lineno="4705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)__Pyx_PyInt_AsSignedLong(x);</highlight></codeline>
<codeline lineno="4707"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4708"><highlight class="normal"></highlight></codeline>
<codeline lineno="4709"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsSignedShort(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="4710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsLong(x);</highlight></codeline>
<codeline lineno="4712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>!=<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)val))<sp/>{</highlight></codeline>
<codeline lineno="4713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>PyErr_Occurred()))</highlight></codeline>
<codeline lineno="4714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="4715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="4716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;value<sp/>too<sp/>large<sp/>to<sp/>convert<sp/>to<sp/>signed<sp/>short&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="4718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)val;</highlight></codeline>
<codeline lineno="4720"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)__Pyx_PyInt_AsSignedLong(x);</highlight></codeline>
<codeline lineno="4722"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4723"><highlight class="normal"></highlight></codeline>
<codeline lineno="4724"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsSignedInt(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="4725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsLong(x);</highlight></codeline>
<codeline lineno="4727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>!=<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)val))<sp/>{</highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>PyErr_Occurred()))</highlight></codeline>
<codeline lineno="4729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="4730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="4731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;value<sp/>too<sp/>large<sp/>to<sp/>convert<sp/>to<sp/>signed<sp/>int&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="4733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)val;</highlight></codeline>
<codeline lineno="4735"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)__Pyx_PyInt_AsSignedLong(x);</highlight></codeline>
<codeline lineno="4737"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4738"><highlight class="normal"></highlight></codeline>
<codeline lineno="4739"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsUnsignedLong(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="4740"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03000000</highlight></codeline>
<codeline lineno="4741"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyInt_CheckExact(x)<sp/>||<sp/>PyInt_Check(x)))<sp/>{</highlight></codeline>
<codeline lineno="4742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>PyInt_AS_LONG(x);</highlight></codeline>
<codeline lineno="4743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="4744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="4745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>unsigned<sp/>long&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="4747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)val;</highlight></codeline>
<codeline lineno="4749"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4750"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4751"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyLong_CheckExact(x)<sp/>||<sp/>PyLong_Check(x)))<sp/>{</highlight></codeline>
<codeline lineno="4752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(Py_SIZE(x)<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="4753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="4754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>unsigned<sp/>long&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="4756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_AsUnsignedLong(x);</highlight></codeline>
<codeline lineno="4758"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="4760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp<sp/>=<sp/>__Pyx_PyNumber_Int(x);</highlight></codeline>
<codeline lineno="4761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tmp)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="4762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsUnsignedLong(tmp);</highlight></codeline>
<codeline lineno="4763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(tmp);</highlight></codeline>
<codeline lineno="4764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4767"><highlight class="normal"></highlight></codeline>
<codeline lineno="4768"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG<sp/>__Pyx_PyInt_AsUnsignedLongLong(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="4769"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03000000</highlight></codeline>
<codeline lineno="4770"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyInt_CheckExact(x)<sp/>||<sp/>PyInt_Check(x)))<sp/>{</highlight></codeline>
<codeline lineno="4771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>PyInt_AS_LONG(x);</highlight></codeline>
<codeline lineno="4772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="4773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="4774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>unsigned<sp/>PY_LONG_LONG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)-1;</highlight></codeline>
<codeline lineno="4776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)val;</highlight></codeline>
<codeline lineno="4778"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4779"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4780"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyLong_CheckExact(x)<sp/>||<sp/>PyLong_Check(x)))<sp/>{</highlight></codeline>
<codeline lineno="4781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(Py_SIZE(x)<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="4782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="4783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>unsigned<sp/>PY_LONG_LONG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)-1;</highlight></codeline>
<codeline lineno="4785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_AsUnsignedLongLong(x);</highlight></codeline>
<codeline lineno="4787"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG<sp/>val;</highlight></codeline>
<codeline lineno="4789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp<sp/>=<sp/>__Pyx_PyNumber_Int(x);</highlight></codeline>
<codeline lineno="4790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tmp)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)-1;</highlight></codeline>
<codeline lineno="4791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsUnsignedLongLong(tmp);</highlight></codeline>
<codeline lineno="4792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(tmp);</highlight></codeline>
<codeline lineno="4793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="4794"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4795"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4796"><highlight class="normal"></highlight></codeline>
<codeline lineno="4797"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsLong(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="4798"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03000000</highlight></codeline>
<codeline lineno="4799"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyInt_CheckExact(x)<sp/>||<sp/>PyInt_Check(x)))<sp/>{</highlight></codeline>
<codeline lineno="4800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>PyInt_AS_LONG(x);</highlight></codeline>
<codeline lineno="4801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)val;</highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4803"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4804"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyLong_CheckExact(x)<sp/>||<sp/>PyLong_Check(x)))<sp/>{</highlight></codeline>
<codeline lineno="4805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_AsLong(x);</highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="4808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp<sp/>=<sp/>__Pyx_PyNumber_Int(x);</highlight></codeline>
<codeline lineno="4809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tmp)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="4810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsLong(tmp);</highlight></codeline>
<codeline lineno="4811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(tmp);</highlight></codeline>
<codeline lineno="4812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="4813"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4815"><highlight class="normal"></highlight></codeline>
<codeline lineno="4816"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/>PY_LONG_LONG<sp/>__Pyx_PyInt_AsLongLong(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="4817"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03000000</highlight></codeline>
<codeline lineno="4818"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyInt_CheckExact(x)<sp/>||<sp/>PyInt_Check(x)))<sp/>{</highlight></codeline>
<codeline lineno="4819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>PyInt_AS_LONG(x);</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(PY_LONG_LONG)val;</highlight></codeline>
<codeline lineno="4821"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4822"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4823"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyLong_CheckExact(x)<sp/>||<sp/>PyLong_Check(x)))<sp/>{</highlight></codeline>
<codeline lineno="4824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_AsLongLong(x);</highlight></codeline>
<codeline lineno="4825"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PY_LONG_LONG<sp/>val;</highlight></codeline>
<codeline lineno="4827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp<sp/>=<sp/>__Pyx_PyNumber_Int(x);</highlight></codeline>
<codeline lineno="4828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tmp)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(PY_LONG_LONG)-1;</highlight></codeline>
<codeline lineno="4829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsLongLong(tmp);</highlight></codeline>
<codeline lineno="4830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(tmp);</highlight></codeline>
<codeline lineno="4831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="4832"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4833"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4834"><highlight class="normal"></highlight></codeline>
<codeline lineno="4835"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsSignedLong(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="4836"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03000000</highlight></codeline>
<codeline lineno="4837"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyInt_CheckExact(x)<sp/>||<sp/>PyInt_Check(x)))<sp/>{</highlight></codeline>
<codeline lineno="4838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>PyInt_AS_LONG(x);</highlight></codeline>
<codeline lineno="4839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)val;</highlight></codeline>
<codeline lineno="4840"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4841"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4842"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyLong_CheckExact(x)<sp/>||<sp/>PyLong_Check(x)))<sp/>{</highlight></codeline>
<codeline lineno="4843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_AsLong(x);</highlight></codeline>
<codeline lineno="4844"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="4846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp<sp/>=<sp/>__Pyx_PyNumber_Int(x);</highlight></codeline>
<codeline lineno="4847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tmp)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="4848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsSignedLong(tmp);</highlight></codeline>
<codeline lineno="4849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(tmp);</highlight></codeline>
<codeline lineno="4850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="4851"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4853"><highlight class="normal"></highlight></codeline>
<codeline lineno="4854"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/>PY_LONG_LONG<sp/>__Pyx_PyInt_AsSignedLongLong(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="4855"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03000000</highlight></codeline>
<codeline lineno="4856"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyInt_CheckExact(x)<sp/>||<sp/>PyInt_Check(x)))<sp/>{</highlight></codeline>
<codeline lineno="4857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>PyInt_AS_LONG(x);</highlight></codeline>
<codeline lineno="4858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/>PY_LONG_LONG)val;</highlight></codeline>
<codeline lineno="4859"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4860"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4861"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyLong_CheckExact(x)<sp/>||<sp/>PyLong_Check(x)))<sp/>{</highlight></codeline>
<codeline lineno="4862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_AsLongLong(x);</highlight></codeline>
<codeline lineno="4863"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/>PY_LONG_LONG<sp/>val;</highlight></codeline>
<codeline lineno="4865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp<sp/>=<sp/>__Pyx_PyNumber_Int(x);</highlight></codeline>
<codeline lineno="4866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tmp)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/>PY_LONG_LONG)-1;</highlight></codeline>
<codeline lineno="4867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsSignedLongLong(tmp);</highlight></codeline>
<codeline lineno="4868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(tmp);</highlight></codeline>
<codeline lineno="4869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="4870"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4872"><highlight class="normal"></highlight></codeline>
<codeline lineno="4873"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;compile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4874"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;frameobject.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4875"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;traceback.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4876"><highlight class="normal"></highlight></codeline>
<codeline lineno="4877"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_AddTraceback(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*funcname)<sp/>{</highlight></codeline>
<codeline lineno="4878"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*py_srcfile<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4879"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*py_funcname<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4880"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*py_globals<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4881"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*empty_string<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4882"><highlight class="normal"><sp/><sp/><sp/><sp/>PyCodeObject<sp/>*py_code<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4883"><highlight class="normal"><sp/><sp/><sp/><sp/>PyFrameObject<sp/>*py_frame<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4884"><highlight class="normal"></highlight></codeline>
<codeline lineno="4885"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="4886"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>py_srcfile<sp/>=<sp/>PyString_FromString(__pyx_filename);</highlight></codeline>
<codeline lineno="4887"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight></codeline>
<codeline lineno="4888"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>py_srcfile<sp/>=<sp/>PyUnicode_FromString(__pyx_filename);</highlight></codeline>
<codeline lineno="4889"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4890"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!py_srcfile)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="4891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_clineno)<sp/>{</highlight></codeline>
<codeline lineno="4892"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="4893"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_funcname<sp/>=<sp/>PyString_FromFormat(<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>(%s:%d)&quot;</highlight><highlight class="normal">,<sp/>funcname,<sp/>__pyx_cfilenm,<sp/>__pyx_clineno);</highlight></codeline>
<codeline lineno="4894"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight></codeline>
<codeline lineno="4895"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_funcname<sp/>=<sp/>PyUnicode_FromFormat(<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>(%s:%d)&quot;</highlight><highlight class="normal">,<sp/>funcname,<sp/>__pyx_cfilenm,<sp/>__pyx_clineno);</highlight></codeline>
<codeline lineno="4896"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4897"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4899"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="4900"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_funcname<sp/>=<sp/>PyString_FromString(funcname);</highlight></codeline>
<codeline lineno="4901"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight></codeline>
<codeline lineno="4902"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_funcname<sp/>=<sp/>PyUnicode_FromString(funcname);</highlight></codeline>
<codeline lineno="4903"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4904"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!py_funcname)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="4906"><highlight class="normal"><sp/><sp/><sp/><sp/>py_globals<sp/>=<sp/>PyModule_GetDict(__pyx_m);</highlight></codeline>
<codeline lineno="4907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!py_globals)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="4908"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="4909"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>empty_string<sp/>=<sp/>PyString_FromStringAndSize(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="4910"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight></codeline>
<codeline lineno="4911"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>empty_string<sp/>=<sp/>PyBytes_FromStringAndSize(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="4912"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4913"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!empty_string)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="4914"><highlight class="normal"><sp/><sp/><sp/><sp/>py_code<sp/>=<sp/>PyCode_New(</highlight></codeline>
<codeline lineno="4915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*int<sp/>argcount,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight></codeline>
<codeline lineno="4917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*int<sp/>kwonlyargcount,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*int<sp/>nlocals,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*int<sp/>stacksize,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*int<sp/>flags,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>empty_string,<sp/></highlight><highlight class="comment">/*PyObject<sp/>*code,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_empty_tuple,<sp/><sp/></highlight><highlight class="comment">/*PyObject<sp/>*consts,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_empty_tuple,<sp/><sp/></highlight><highlight class="comment">/*PyObject<sp/>*names,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_empty_tuple,<sp/><sp/></highlight><highlight class="comment">/*PyObject<sp/>*varnames,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_empty_tuple,<sp/><sp/></highlight><highlight class="comment">/*PyObject<sp/>*freevars,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_empty_tuple,<sp/><sp/></highlight><highlight class="comment">/*PyObject<sp/>*cellvars,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_srcfile,<sp/><sp/><sp/></highlight><highlight class="comment">/*PyObject<sp/>*filename,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_funcname,<sp/><sp/></highlight><highlight class="comment">/*PyObject<sp/>*name,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_lineno,<sp/><sp/><sp/></highlight><highlight class="comment">/*int<sp/>firstlineno,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>empty_string<sp/><sp/></highlight><highlight class="comment">/*PyObject<sp/>*lnotab*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4932"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!py_code)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="4934"><highlight class="normal"><sp/><sp/><sp/><sp/>py_frame<sp/>=<sp/>PyFrame_New(</highlight></codeline>
<codeline lineno="4935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyThreadState_GET(),<sp/></highlight><highlight class="comment">/*PyThreadState<sp/>*tstate,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_code,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*PyCodeObject<sp/>*code,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_globals,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*PyObject<sp/>*globals,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*PyObject<sp/>*locals*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4939"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!py_frame)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bad;</highlight></codeline>
<codeline lineno="4941"><highlight class="normal"><sp/><sp/><sp/><sp/>py_frame-&gt;f_lineno<sp/>=<sp/>__pyx_lineno;</highlight></codeline>
<codeline lineno="4942"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTraceBack_Here(py_frame);</highlight></codeline>
<codeline lineno="4943"><highlight class="normal">bad:</highlight></codeline>
<codeline lineno="4944"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(py_srcfile);</highlight></codeline>
<codeline lineno="4945"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(py_funcname);</highlight></codeline>
<codeline lineno="4946"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(empty_string);</highlight></codeline>
<codeline lineno="4947"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(py_code);</highlight></codeline>
<codeline lineno="4948"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(py_frame);</highlight></codeline>
<codeline lineno="4949"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4950"><highlight class="normal"></highlight></codeline>
<codeline lineno="4951"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_InitStrings(<ref refid="struct____Pyx__StringTabEntry" kindref="compound">__Pyx_StringTabEntry</ref><sp/>*t)<sp/>{</highlight></codeline>
<codeline lineno="4952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(t-&gt;p)<sp/>{</highlight></codeline>
<codeline lineno="4953"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="4954"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;is_unicode<sp/>&amp;&amp;<sp/>(!t-&gt;is_identifier))<sp/>{</highlight></codeline>
<codeline lineno="4955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*t-&gt;p<sp/>=<sp/>PyUnicode_DecodeUTF8(t-&gt;s,<sp/>t-&gt;n<sp/>-<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="4956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;intern)<sp/>{</highlight></codeline>
<codeline lineno="4957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*t-&gt;p<sp/>=<sp/>PyString_InternFromString(t-&gt;s);</highlight></codeline>
<codeline lineno="4958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*t-&gt;p<sp/>=<sp/>PyString_FromStringAndSize(t-&gt;s,<sp/>t-&gt;n<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="4960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4961"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else<sp/><sp/></highlight><highlight class="comment">/*<sp/>Python<sp/>3+<sp/>has<sp/>unicode<sp/>identifiers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;is_identifier<sp/>||<sp/>(t-&gt;is_unicode<sp/>&amp;&amp;<sp/>t-&gt;intern))<sp/>{</highlight></codeline>
<codeline lineno="4963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*t-&gt;p<sp/>=<sp/>PyUnicode_InternFromString(t-&gt;s);</highlight></codeline>
<codeline lineno="4964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;is_unicode)<sp/>{</highlight></codeline>
<codeline lineno="4965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*t-&gt;p<sp/>=<sp/>PyUnicode_FromStringAndSize(t-&gt;s,<sp/>t-&gt;n<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="4966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*t-&gt;p<sp/>=<sp/>PyBytes_FromStringAndSize(t-&gt;s,<sp/>t-&gt;n<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="4968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4969"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="4970"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*t-&gt;p)</highlight></codeline>
<codeline lineno="4971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++t;</highlight></codeline>
<codeline lineno="4973"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4975"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4976"><highlight class="normal"></highlight></codeline>
<codeline lineno="4977"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Type<sp/>Conversion<sp/>Functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4978"><highlight class="normal"></highlight></codeline>
<codeline lineno="4979"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyObject_IsTrue(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="4980"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>==<sp/>Py_True)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4981"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((x<sp/>==<sp/>Py_False)<sp/>|<sp/>(x<sp/>==<sp/>Py_None))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4982"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_IsTrue(x);</highlight></codeline>
<codeline lineno="4983"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4984"><highlight class="normal"></highlight></codeline>
<codeline lineno="4985"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/>PyObject*<sp/>__Pyx_PyNumber_Int(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="4986"><highlight class="normal"><sp/><sp/>PyNumberMethods<sp/>*m;</highlight></codeline>
<codeline lineno="4987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4988"><highlight class="normal"><sp/><sp/>PyObject<sp/>*res<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4989"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03000000</highlight></codeline>
<codeline lineno="4990"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyInt_Check(x)<sp/>||<sp/>PyLong_Check(x))</highlight></codeline>
<codeline lineno="4991"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="4992"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyLong_Check(x))</highlight></codeline>
<codeline lineno="4993"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4994"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Py_INCREF(x),<sp/>x;</highlight></codeline>
<codeline lineno="4995"><highlight class="normal"><sp/><sp/>m<sp/>=<sp/>Py_TYPE(x)-&gt;tp_as_number;</highlight></codeline>
<codeline lineno="4996"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03000000</highlight></codeline>
<codeline lineno="4997"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&amp;&amp;<sp/>m-&gt;nb_int)<sp/>{</highlight></codeline>
<codeline lineno="4998"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;int&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4999"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>PyNumber_Int(x);</highlight></codeline>
<codeline lineno="5000"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5001"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&amp;&amp;<sp/>m-&gt;nb_long)<sp/>{</highlight></codeline>
<codeline lineno="5002"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;long&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5003"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>PyNumber_Long(x);</highlight></codeline>
<codeline lineno="5004"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5005"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="5006"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&amp;&amp;<sp/>m-&gt;nb_int)<sp/>{</highlight></codeline>
<codeline lineno="5007"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;int&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5008"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>PyNumber_Long(x);</highlight></codeline>
<codeline lineno="5009"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5010"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="5011"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res)<sp/>{</highlight></codeline>
<codeline lineno="5012"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03000000</highlight></codeline>
<codeline lineno="5013"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyInt_Check(res)<sp/>&amp;&amp;<sp/>!PyLong_Check(res))<sp/>{</highlight></codeline>
<codeline lineno="5014"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="5015"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyLong_Check(res))<sp/>{</highlight></codeline>
<codeline lineno="5016"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="5017"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,</highlight></codeline>
<codeline lineno="5018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;__%s__<sp/>returned<sp/>non-%s<sp/>(type<sp/>%.200s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name,<sp/>name,<sp/>Py_TYPE(res)-&gt;tp_name);</highlight></codeline>
<codeline lineno="5020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(res);</highlight></codeline>
<codeline lineno="5021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5022"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5023"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5024"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyErr_Occurred())<sp/>{</highlight></codeline>
<codeline lineno="5025"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="5026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;an<sp/>integer<sp/>is<sp/>required&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5027"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5028"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="5029"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5030"><highlight class="normal"></highlight></codeline>
<codeline lineno="5031"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/>Py_ssize_t<sp/>__Pyx_PyIndex_AsSsize_t(PyObject*<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="5032"><highlight class="normal"><sp/><sp/>Py_ssize_t<sp/>ival;</highlight></codeline>
<codeline lineno="5033"><highlight class="normal"><sp/><sp/>PyObject*<sp/>x<sp/>=<sp/>PyNumber_Index(b);</highlight></codeline>
<codeline lineno="5034"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!x)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="5035"><highlight class="normal"><sp/><sp/>ival<sp/>=<sp/>PyInt_AsSsize_t(x);</highlight></codeline>
<codeline lineno="5036"><highlight class="normal"><sp/><sp/>Py_DECREF(x);</highlight></codeline>
<codeline lineno="5037"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ival;</highlight></codeline>
<codeline lineno="5038"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5039"><highlight class="normal"></highlight></codeline>
<codeline lineno="5040"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/>PyObject<sp/>*<sp/>__Pyx_PyInt_FromSize_t(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ival)<sp/>{</highlight></codeline>
<codeline lineno="5041"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x02050000</highlight></codeline>
<codeline lineno="5042"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ival<sp/>&lt;=<sp/>LONG_MAX)</highlight></codeline>
<codeline lineno="5043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyInt_FromLong((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)ival);</highlight></codeline>
<codeline lineno="5044"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;ival;</highlight></codeline>
<codeline lineno="5046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>one<sp/>=<sp/>1;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>little<sp/>=<sp/>(int)*(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;one;</highlight></codeline>
<codeline lineno="5047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_PyLong_FromByteArray(bytes,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">),<sp/>little,<sp/>0);</highlight></codeline>
<codeline lineno="5048"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5049"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="5050"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyInt_FromSize_t(ival);</highlight></codeline>
<codeline lineno="5051"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="5052"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="5053"><highlight class="normal"></highlight></codeline>
<codeline lineno="5054"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INLINE<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsSize_t(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="5055"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG<sp/>val<sp/>=<sp/>__Pyx_PyInt_AsUnsignedLongLong(x);</highlight></codeline>
<codeline lineno="5056"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>==<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)-1<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{</highlight></codeline>
<codeline lineno="5057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="5058"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>!=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)val))<sp/>{</highlight></codeline>
<codeline lineno="5059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="5060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;value<sp/>too<sp/>large<sp/>to<sp/>convert<sp/>to<sp/>size_t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="5062"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5063"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)val;</highlight></codeline>
<codeline lineno="5064"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5065"><highlight class="normal"></highlight></codeline>
<codeline lineno="5066"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/srush/Projects/relax_decode/hypergraph/svector.cpp"/>
  </compounddef>
</doxygen>

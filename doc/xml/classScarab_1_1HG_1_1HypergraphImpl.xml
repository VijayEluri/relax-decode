<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="classScarab_1_1HG_1_1HypergraphImpl" kind="class" prot="public">
    <compoundname>Scarab::HG::HypergraphImpl</compoundname>
    <basecompoundref refid="classScarab_1_1HG_1_1HGraph" prot="public" virt="non-virtual">Scarab::HG::HGraph</basecompoundref>
    <derivedcompoundref refid="classDepParser" prot="public" virt="non-virtual">DepParser</derivedcompoundref>
    <derivedcompoundref refid="classForest" prot="public" virt="non-virtual">Forest</derivedcompoundref>
    <derivedcompoundref refid="classMRFHypergraph" prot="public" virt="non-virtual">MRFHypergraph</derivedcompoundref>
    <derivedcompoundref refid="classPhraseBased" prot="public" virt="non-virtual">PhraseBased</derivedcompoundref>
    <derivedcompoundref refid="classTagger" prot="public" virt="non-virtual">Tagger</derivedcompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classScarab_1_1HG_1_1HypergraphImpl_1aa7192cf8f168e5bfed67a8faf85c8cb4" prot="protected" static="no" mutable="no">
        <type>::Hypergraph *</type>
        <definition>::Hypergraph* Scarab::HG::HypergraphImpl::hgraph</definition>
        <argsstring></argsstring>
        <name>hgraph</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" line="205" bodyfile="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classScarab_1_1HG_1_1HypergraphImpl_1a7035fdae4c04d0752aaaf1e7eba7600e" prot="protected" static="no" mutable="no">
        <type><ref refid="classScarab_1_1HG_1_1Hypernode" kindref="compound">Hypernode</ref> *</type>
        <definition>Hypernode* Scarab::HG::HypergraphImpl::_root</definition>
        <argsstring></argsstring>
        <name>_root</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" line="206" bodyfile="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classScarab_1_1HG_1_1HypergraphImpl_1a4cc57d9255e2f09714c5913d67cd0554" prot="protected" static="no" mutable="no">
        <type>vector&lt; <ref refid="classScarab_1_1HG_1_1Hypernode" kindref="compound">Hypernode</ref> * &gt;</type>
        <definition>vector&lt;Hypernode *&gt; Scarab::HG::HypergraphImpl::_nodes</definition>
        <argsstring></argsstring>
        <name>_nodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" line="207" bodyfile="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classScarab_1_1HG_1_1HypergraphImpl_1a56fb710140f3359646b1a17cb0417d74" prot="protected" static="no" mutable="no">
        <type>vector&lt; <ref refid="classScarab_1_1HG_1_1Hyperedge" kindref="compound">Hyperedge</ref> * &gt;</type>
        <definition>vector&lt;Hyperedge *&gt; Scarab::HG::HypergraphImpl::_edges</definition>
        <argsstring></argsstring>
        <name>_edges</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" line="208" bodyfile="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classScarab_1_1HG_1_1HypergraphImpl_1a067b2daae46f4758f9621fb9d803bef2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Scarab::HG::HypergraphImpl::HypergraphImpl</definition>
        <argsstring>()</argsstring>
        <name>HypergraphImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" line="160" bodyfile="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" bodystart="160" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1HypergraphImpl_1a935bed9b8cf9235a1adb61d0889f6ac7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Scarab::HG::HypergraphImpl::HypergraphImpl</definition>
        <argsstring>(vector&lt; Hypernode * &gt; nodes, vector&lt; Hyperedge * &gt; edges, Hypernode *root)</argsstring>
        <name>HypergraphImpl</name>
        <param>
          <type>vector&lt; <ref refid="classScarab_1_1HG_1_1Hypernode" kindref="compound">Hypernode</ref> * &gt;</type>
          <declname>nodes</declname>
        </param>
        <param>
          <type>vector&lt; <ref refid="classScarab_1_1HG_1_1Hyperedge" kindref="compound">Hyperedge</ref> * &gt;</type>
          <declname>edges</declname>
        </param>
        <param>
          <type><ref refid="classScarab_1_1HG_1_1Hypernode" kindref="compound">Hypernode</ref> *</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" line="163" bodyfile="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" bodystart="162" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1HypergraphImpl_1af9726fe39b4cfdbcbead1cba4efa6a01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Scarab::HG::HypergraphImpl::~HypergraphImpl</definition>
        <argsstring>()</argsstring>
        <name>~HypergraphImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" line="164" bodyfile="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" bodystart="164" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1HypergraphImpl_1a31172009b97d179f6b1199f191197a32" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="classScarab_1_1HG_1_1Hypernode" kindref="compound">Hypernode</ref> &amp;</type>
        <definition>const Hypernode&amp; Scarab::HG::HypergraphImpl::root</definition>
        <argsstring>() const </argsstring>
        <name>root</name>
        <reimplements refid="classScarab_1_1HG_1_1HGraph_1a5ede392b158e41dd7e95ded1c4b0b5d6">root</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the root of the hypergraph</para><para><simplesect kind="return"><para><ref refid="classScarab_1_1HG_1_1Hypernode" kindref="compound">Hypernode</ref> at root </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" line="167" bodyfile="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" bodystart="167" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1HypergraphImpl_1a0adcc8783b94cbe07b092220082d00ab" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>unsigned int</type>
        <definition>unsigned int Scarab::HG::HypergraphImpl::num_edges</definition>
        <argsstring>() const </argsstring>
        <name>num_edges</name>
        <reimplements refid="classScarab_1_1HG_1_1HGraph_1a8309003db80be5bdbe4bb64f98a78ea8">num_edges</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" line="171" bodyfile="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" bodystart="171" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1HypergraphImpl_1ad39e917a84acb1d4caf0145ce8a903a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>uint</type>
        <definition>uint Scarab::HG::HypergraphImpl::num_nodes</definition>
        <argsstring>() const </argsstring>
        <name>num_nodes</name>
        <reimplements refid="classScarab_1_1HG_1_1HGraph_1a6f4d37ef034cb38aa09c702b80a6e4f7">num_nodes</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" line="175" bodyfile="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" bodystart="175" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1HypergraphImpl_1a9276a6faa074eb4f3bbb2f8b8d5d4fbf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="classScarab_1_1HG_1_1Hypernode" kindref="compound">Hypernode</ref> &amp;</type>
        <definition>const Hypernode&amp; Scarab::HG::HypergraphImpl::get_node</definition>
        <argsstring>(unsigned int i) const </argsstring>
        <name>get_node</name>
        <reimplements refid="classScarab_1_1HG_1_1HGraph_1acad57dd952956b1a1a4367bba0e9383b">get_node</reimplements>
        <param>
          <type>unsigned int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" line="179" bodyfile="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" bodystart="179" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1HypergraphImpl_1a31a148139b888b6bd10e78fe555144c7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="classScarab_1_1HG_1_1Hyperedge" kindref="compound">Hyperedge</ref> &amp;</type>
        <definition>const Hyperedge&amp; Scarab::HG::HypergraphImpl::get_edge</definition>
        <argsstring>(uint i) const </argsstring>
        <name>get_edge</name>
        <reimplements refid="classScarab_1_1HG_1_1HGraph_1aa599b296ae01affc9606f519e4e44e9e">get_edge</reimplements>
        <param>
          <type>uint</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" line="186" bodyfile="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" bodystart="186" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1HypergraphImpl_1a1f33418f90b826db9cfc0bb34e1ca9cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Scarab::HG::HypergraphImpl::build_from_file</definition>
        <argsstring>(const char *file_name)</argsstring>
        <name>build_from_file</name>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" line="193" bodyfile="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.cpp" bodystart="86" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1HypergraphImpl_1a9aef2881b489c86d4d83e996a70f8141" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const vector&lt; <ref refid="classScarab_1_1HG_1_1Hypernode" kindref="compound">Hypernode</ref> * &gt; &amp;</type>
        <definition>const vector&lt;Hypernode*&gt;&amp; Scarab::HG::HypergraphImpl::nodes</definition>
        <argsstring>() const </argsstring>
        <name>nodes</name>
        <reimplements refid="classScarab_1_1HG_1_1HGraph_1a74d893fba015520774f71f02a46bb6ca">nodes</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get all hypernodes in the hypergraph. (Assume unordered) WARNING: Treat this as a const iterator. <simplesect kind="return"><para>Const iterator to hypernodes in hypergraph . </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" line="195" bodyfile="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" bodystart="195" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1HypergraphImpl_1a0c8373e545fe59b0cb7036b4751508e1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const vector&lt; <ref refid="classScarab_1_1HG_1_1Hyperedge" kindref="compound">Hyperedge</ref> * &gt; &amp;</type>
        <definition>const vector&lt;Hyperedge*&gt;&amp; Scarab::HG::HypergraphImpl::edges</definition>
        <argsstring>() const </argsstring>
        <name>edges</name>
        <reimplements refid="classScarab_1_1HG_1_1HGraph_1a57328729f90cc4152ca79ff15ecdd4bb">edges</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get all hyperedges in the hypergraph. (Assume unordered) WARNING: Treat this as a const iterator. <simplesect kind="return"><para>Const iterator to edges in hypergraph . </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" line="198" bodyfile="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" bodystart="198" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1HypergraphImpl_1a98701d5529aaf3e5d4fa386694843f20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Scarab::HG::HypergraphImpl::prune</definition>
        <argsstring>(const HypergraphPrune &amp;prune)</argsstring>
        <name>prune</name>
        <param>
          <type>const <ref refid="structScarab_1_1HG_1_1HypergraphPrune" kindref="compound">HypergraphPrune</ref> &amp;</type>
          <declname>prune</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" line="202" bodyfile="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.cpp" bodystart="12" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1HypergraphImpl_1af8f5ed38a355676c473e8d54b5552cc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Scarab::HG::HypergraphImpl::write_to_file</definition>
        <argsstring>(const char *file_name)</argsstring>
        <name>write_to_file</name>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" line="203" bodyfile="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.cpp" bodystart="43" bodyend="84"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classScarab_1_1HG_1_1HypergraphImpl_1af14198ba5fccb5d4118188fa42feb8ff" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classScarab_1_1HG_1_1Hypernode" kindref="compound">Hypernode</ref> *</type>
        <definition>virtual Hypernode* Scarab::HG::HypergraphImpl::make_node</definition>
        <argsstring>(const Hypergraph_Node &amp;node, wvector *features)</argsstring>
        <name>make_node</name>
        <reimplementedby refid="classForest_1ab40070ea9e3885d252fb7848c11f27ef">make_node</reimplementedby>
        <param>
          <type>const Hypergraph_Node &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>wvector *</type>
          <declname>features</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" line="210" bodyfile="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" bodystart="210" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1HypergraphImpl_1a238a7ce3b578c8126eccbc7803570638" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Scarab::HG::HypergraphImpl::make_edge</definition>
        <argsstring>(const Hypergraph_Edge &amp;edge, const Hyperedge *our_edge)</argsstring>
        <name>make_edge</name>
        <reimplementedby refid="classTagger_1a305fd4cf75f2149a57109772e195eb47">make_edge</reimplementedby>
        <reimplementedby refid="classDepParser_1a04d313d931d1e8b0bac3a36ca7be469b">make_edge</reimplementedby>
        <param>
          <type>const Hypergraph_Edge &amp;</type>
          <declname>edge</declname>
        </param>
        <param>
          <type>const <ref refid="classScarab_1_1HG_1_1Hyperedge" kindref="compound">Hyperedge</ref> *</type>
          <declname>our_edge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" line="215" bodyfile="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" bodystart="215" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1HypergraphImpl_1a30349aca0e3b8f8dc72ed74d78e8c5b8" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Scarab::HG::HypergraphImpl::convert_edge</definition>
        <argsstring>(const Hyperedge *our_edge, Hypergraph_Edge *edge)</argsstring>
        <name>convert_edge</name>
        <param>
          <type>const <ref refid="classScarab_1_1HG_1_1Hyperedge" kindref="compound">Hyperedge</ref> *</type>
          <declname>our_edge</declname>
        </param>
        <param>
          <type>Hypergraph_Edge *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" line="216" bodyfile="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" bodystart="216" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1HypergraphImpl_1a93e9e250fa457a2171bf07241b7829eb" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Scarab::HG::HypergraphImpl::convert_node</definition>
        <argsstring>(const Hypernode *our_node, Hypergraph_Node *node)</argsstring>
        <name>convert_node</name>
        <param>
          <type>const <ref refid="classScarab_1_1HG_1_1Hypernode" kindref="compound">Hypernode</ref> *</type>
          <declname>our_node</declname>
        </param>
        <param>
          <type>Hypergraph_Node *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" line="217" bodyfile="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" bodystart="217" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1HypergraphImpl_1ae91de73e633e450b01664e3ec964019c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Scarab::HG::HypergraphImpl::set_up</definition>
        <argsstring>(const Hypergraph &amp;hgraph)</argsstring>
        <name>set_up</name>
        <reimplementedby refid="classTagger_1afafa6e435d17467db344ca615f24746f">set_up</reimplementedby>
        <reimplementedby refid="classPhraseBased_1a3883660c72be6ce8daab08f368317853">set_up</reimplementedby>
        <reimplementedby refid="classDepParser_1a6131e95a8ec7b07f7a4d68dae224d52f">set_up</reimplementedby>
        <param>
          <type>const Hypergraph &amp;</type>
          <declname>hgraph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" line="218" bodyfile="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" bodystart="218" bodyend="218"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="677">
        <label>Scarab::HG::HypergraphImpl</label>
        <link refid="classScarab_1_1HG_1_1HypergraphImpl"/>
        <childnode refid="678" relation="public-inheritance">
        </childnode>
      </node>
      <node id="679">
        <label>DepParser</label>
        <link refid="classDepParser"/>
        <childnode refid="677" relation="public-inheritance">
        </childnode>
      </node>
      <node id="681">
        <label>MRFHypergraph</label>
        <link refid="classMRFHypergraph"/>
        <childnode refid="677" relation="public-inheritance">
        </childnode>
      </node>
      <node id="680">
        <label>Forest</label>
        <link refid="classForest"/>
        <childnode refid="677" relation="public-inheritance">
        </childnode>
      </node>
      <node id="678">
        <label>Scarab::HG::HGraph</label>
        <link refid="classScarab_1_1HG_1_1HGraph"/>
      </node>
      <node id="682">
        <label>PhraseBased</label>
        <link refid="classPhraseBased"/>
        <childnode refid="677" relation="public-inheritance">
        </childnode>
      </node>
      <node id="683">
        <label>Tagger</label>
        <link refid="classTagger"/>
        <childnode refid="677" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="689">
        <label>Scarab::HG::Hyperedge</label>
        <link refid="classScarab_1_1HG_1_1Hyperedge"/>
      </node>
      <node id="684">
        <label>Scarab::HG::HypergraphImpl</label>
        <link refid="classScarab_1_1HG_1_1HypergraphImpl"/>
        <childnode refid="685" relation="public-inheritance">
        </childnode>
        <childnode refid="686" relation="usage">
          <edgelabel>_nodes</edgelabel>
        </childnode>
        <childnode refid="688" relation="usage">
          <edgelabel>_edges</edgelabel>
        </childnode>
        <childnode refid="687" relation="usage">
          <edgelabel>_root</edgelabel>
        </childnode>
      </node>
      <node id="687">
        <label>Scarab::HG::Hypernode</label>
        <link refid="classScarab_1_1HG_1_1Hypernode"/>
      </node>
      <node id="686">
        <label>std::vector&lt; Hypernode * &gt;</label>
        <childnode refid="687" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="685">
        <label>Scarab::HG::HGraph</label>
        <link refid="classScarab_1_1HG_1_1HGraph"/>
      </node>
      <node id="688">
        <label>std::vector&lt; Hyperedge * &gt;</label>
        <childnode refid="689" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" line="158" bodyfile="/home/srush/Projects/relax_decode/hypergraph/HypergraphImpl.h" bodystart="158" bodyend="220"/>
    <listofallmembers>
      <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a56fb710140f3359646b1a17cb0417d74" prot="protected" virt="non-virtual"><scope>Scarab::HG::HypergraphImpl</scope><name>_edges</name></member>
      <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a4cc57d9255e2f09714c5913d67cd0554" prot="protected" virt="non-virtual"><scope>Scarab::HG::HypergraphImpl</scope><name>_nodes</name></member>
      <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a7035fdae4c04d0752aaaf1e7eba7600e" prot="protected" virt="non-virtual"><scope>Scarab::HG::HypergraphImpl</scope><name>_root</name></member>
      <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a1f33418f90b826db9cfc0bb34e1ca9cf" prot="public" virt="non-virtual"><scope>Scarab::HG::HypergraphImpl</scope><name>build_from_file</name></member>
      <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a30349aca0e3b8f8dc72ed74d78e8c5b8" prot="protected" virt="virtual"><scope>Scarab::HG::HypergraphImpl</scope><name>convert_edge</name></member>
      <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a93e9e250fa457a2171bf07241b7829eb" prot="protected" virt="virtual"><scope>Scarab::HG::HypergraphImpl</scope><name>convert_node</name></member>
      <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a0c8373e545fe59b0cb7036b4751508e1" prot="public" virt="virtual"><scope>Scarab::HG::HypergraphImpl</scope><name>edges</name></member>
      <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a31a148139b888b6bd10e78fe555144c7" prot="public" virt="virtual"><scope>Scarab::HG::HypergraphImpl</scope><name>get_edge</name></member>
      <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a9276a6faa074eb4f3bbb2f8b8d5d4fbf" prot="public" virt="virtual"><scope>Scarab::HG::HypergraphImpl</scope><name>get_node</name></member>
      <member refid="classScarab_1_1HG_1_1HypergraphImpl_1aa7192cf8f168e5bfed67a8faf85c8cb4" prot="protected" virt="non-virtual"><scope>Scarab::HG::HypergraphImpl</scope><name>hgraph</name></member>
      <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a067b2daae46f4758f9621fb9d803bef2" prot="public" virt="non-virtual"><scope>Scarab::HG::HypergraphImpl</scope><name>HypergraphImpl</name></member>
      <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a935bed9b8cf9235a1adb61d0889f6ac7" prot="public" virt="non-virtual"><scope>Scarab::HG::HypergraphImpl</scope><name>HypergraphImpl</name></member>
      <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a238a7ce3b578c8126eccbc7803570638" prot="protected" virt="virtual"><scope>Scarab::HG::HypergraphImpl</scope><name>make_edge</name></member>
      <member refid="classScarab_1_1HG_1_1HypergraphImpl_1af14198ba5fccb5d4118188fa42feb8ff" prot="protected" virt="virtual"><scope>Scarab::HG::HypergraphImpl</scope><name>make_node</name></member>
      <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a9aef2881b489c86d4d83e996a70f8141" prot="public" virt="virtual"><scope>Scarab::HG::HypergraphImpl</scope><name>nodes</name></member>
      <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a0adcc8783b94cbe07b092220082d00ab" prot="public" virt="virtual"><scope>Scarab::HG::HypergraphImpl</scope><name>num_edges</name></member>
      <member refid="classScarab_1_1HG_1_1HypergraphImpl_1ad39e917a84acb1d4caf0145ce8a903a2" prot="public" virt="virtual"><scope>Scarab::HG::HypergraphImpl</scope><name>num_nodes</name></member>
      <member refid="classScarab_1_1HG_1_1HGraph_1ab5aa11c932b28864b56f28e0babbc1c1" prot="public" virt="pure-virtual"><scope>Scarab::HG::HypergraphImpl</scope><name>print</name></member>
      <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a98701d5529aaf3e5d4fa386694843f20" prot="public" virt="non-virtual"><scope>Scarab::HG::HypergraphImpl</scope><name>prune</name></member>
      <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a31172009b97d179f6b1199f191197a32" prot="public" virt="virtual"><scope>Scarab::HG::HypergraphImpl</scope><name>root</name></member>
      <member refid="classScarab_1_1HG_1_1HypergraphImpl_1ae91de73e633e450b01664e3ec964019c" prot="protected" virt="virtual"><scope>Scarab::HG::HypergraphImpl</scope><name>set_up</name></member>
      <member refid="classScarab_1_1HG_1_1HypergraphImpl_1af8f5ed38a355676c473e8d54b5552cc6" prot="public" virt="non-virtual"><scope>Scarab::HG::HypergraphImpl</scope><name>write_to_file</name></member>
      <member refid="classScarab_1_1HG_1_1HGraph_1a54e1901fef9f35caecf6f1f75eecf21a" prot="public" virt="virtual"><scope>Scarab::HG::HypergraphImpl</scope><name>~HGraph</name></member>
      <member refid="classScarab_1_1HG_1_1HypergraphImpl_1af9726fe39b4cfdbcbead1cba4efa6a01" prot="public" virt="non-virtual"><scope>Scarab::HG::HypergraphImpl</scope><name>~HypergraphImpl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

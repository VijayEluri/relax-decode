<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="classsvector" kind="class" prot="public">
    <compoundname>svector</compoundname>
    <innerclass refid="structsvector_1_1divide__op" prot="protected">svector::divide_op</innerclass>
    <innerclass refid="structsvector_1_1dot__op" prot="protected">svector::dot_op</innerclass>
    <innerclass refid="structsvector_1_1multiply__op" prot="protected">svector::multiply_op</innerclass>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>F</declname>
        <defname>F</defname>
      </param>
      <param>
        <type>class</type>
        <declname>V</declname>
        <defname>V</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsvector_1a781cf3071f4c7e8ed3b9247c34c783c1" prot="public" static="no">
        <type>std::map&lt; F, V &gt;::size_type</type>
        <definition>typedef std::map&lt;F,V&gt;::size_type svector&lt; F, V &gt;::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="13" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsvector_1a6ad53776885c70adeb9fb67c7a4d6f23" prot="public" static="no">
        <type>std::map&lt; F, V &gt;::value_type</type>
        <definition>typedef std::map&lt;F,V&gt;::value_type svector&lt; F, V &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="14" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsvector_1a49425052f4c63a771edf0c09ad52bb2e" prot="public" static="no">
        <type>std::map&lt; F, V &gt;::iterator</type>
        <definition>typedef std::map&lt;F,V&gt;::iterator svector&lt; F, V &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="15" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsvector_1a12c0ac4d5d48eb68f0024b4a1ebe597b" prot="public" static="no">
        <type>std::map&lt; F, V &gt;::const_iterator</type>
        <definition>typedef std::map&lt;F,V&gt;::const_iterator svector&lt; F, V &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="16" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsvector_1a781cf3071f4c7e8ed3b9247c34c783c1" prot="public" static="no">
        <type>std::map&lt; F, V &gt;::size_type</type>
        <definition>typedef std::map&lt;F,V&gt;::size_type svector&lt; F, V &gt;::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="13" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsvector_1a6ad53776885c70adeb9fb67c7a4d6f23" prot="public" static="no">
        <type>std::map&lt; F, V &gt;::value_type</type>
        <definition>typedef std::map&lt;F,V&gt;::value_type svector&lt; F, V &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="14" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsvector_1a49425052f4c63a771edf0c09ad52bb2e" prot="public" static="no">
        <type>std::map&lt; F, V &gt;::iterator</type>
        <definition>typedef std::map&lt;F,V&gt;::iterator svector&lt; F, V &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="15" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsvector_1a12c0ac4d5d48eb68f0024b4a1ebe597b" prot="public" static="no">
        <type>std::map&lt; F, V &gt;::const_iterator</type>
        <definition>typedef std::map&lt;F,V&gt;::const_iterator svector&lt; F, V &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="16" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsvector_1ac25b00aafed8c1046798a9c673fd4d02" prot="private" static="no" mutable="no">
        <type>std::map&lt; F, V &gt;</type>
        <definition>std::map&lt; F, V &gt; svector&lt; F, V &gt;::m</definition>
        <argsstring></argsstring>
        <name>m</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="10" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsvector_1a4e0580f25d632108eafcc643b799ca03" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>svector&lt; F, V &gt;::svector</definition>
        <argsstring>()</argsstring>
        <name>svector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="19" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1af80c78063c502c408ce9de9e29802c4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>svector&lt; F, V &gt;::svector</definition>
        <argsstring>(const F &amp;f, const V &amp;v)</argsstring>
        <name>svector</name>
        <param>
          <type>const F &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const V &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="21" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="21" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1a7f6261a28ccf2e7e38b8921716a35e3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void svector&lt; F, V &gt;::swap</definition>
        <argsstring>(svector&lt; F, V &gt; &amp;other)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classsvector" kindref="compound">svector</ref>&lt; F, V &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="27" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1ad6df678466732e7a17ea1b1223ff7747" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type svector&lt; F, V &gt;::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="28" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1aa7a575ad6a3a810adf89785b4a5d49b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void svector&lt; F, V &gt;::erase</definition>
        <argsstring>(const F &amp;f)</argsstring>
        <name>erase</name>
        <param>
          <type>const F &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="29" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1ae1a20b7ecc6899bc36f6c74c09b80f21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>V &amp;</type>
        <definition>V&amp; svector&lt; F, V &gt;::operator[]</definition>
        <argsstring>(const F &amp;f)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const F &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="30" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1a8654fa07ce4f88f6f1f781ddd4968da9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator svector&lt; F, V &gt;::find</definition>
        <argsstring>(const F &amp;f)</argsstring>
        <name>find</name>
        <param>
          <type>const F &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="31" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1ab57caec3eab9d57eaec2ad1c436fc3d6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator svector&lt; F, V &gt;::find</definition>
        <argsstring>(const F &amp;f) const </argsstring>
        <name>find</name>
        <param>
          <type>const F &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="32" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1a8a296d1d27c0242a6d8c89d4fdf67388" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; iterator, bool &gt;</type>
        <definition>std::pair&lt;iterator, bool&gt; svector&lt; F, V &gt;::insert</definition>
        <argsstring>(const value_type &amp;fv)</argsstring>
        <name>insert</name>
        <param>
          <type>const value_type &amp;</type>
          <declname>fv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="33" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1ad62a2162f09c4d4ea2b9ab9a93ebdfdd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator svector&lt; F, V &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="34" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1a24c1e2612bd13a2bf259dc2627675dfa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator svector&lt; F, V &gt;::begin</definition>
        <argsstring>() const </argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="35" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1a35b2c7f05af13cb957af871cedcc5e00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator svector&lt; F, V &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="36" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1ad40a20f476d65891c06db88f7b43c12e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator svector&lt; F, V &gt;::end</definition>
        <argsstring>() const </argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="37" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1a6dad0388185b81076751d6dad78e3fbf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsvector" kindref="compound">svector</ref> &amp;</type>
        <definition>svector&amp; svector&lt; F, V &gt;::operator*=</definition>
        <argsstring>(const V &amp;c)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const V &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="41" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="41" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1a5cffef009f0233103409edd38d658d11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsvector" kindref="compound">svector</ref> &amp;</type>
        <definition>svector&amp; svector&lt; F, V &gt;::operator/=</definition>
        <argsstring>(const V &amp;c)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const V &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="47" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="47" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1aea1f3107cc825f39969674dbe609a12a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsvector" kindref="compound">svector</ref></type>
        <definition>svector svector&lt; F, V &gt;::operator-</definition>
        <argsstring>() const </argsstring>
        <name>operator-</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="53" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1a5420004342894baf43b5811f8a49dd22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsvector" kindref="compound">svector</ref> &amp;</type>
        <definition>svector&amp; svector&lt; F, V &gt;::operator+=</definition>
        <argsstring>(const svector&lt; F, V &gt; &amp;y)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classsvector" kindref="compound">svector</ref>&lt; F, V &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="94" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1a141a4f013fb63eb81bf297c048a0e133" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsvector" kindref="compound">svector</ref> &amp;</type>
        <definition>svector&amp; svector&lt; F, V &gt;::operator-=</definition>
        <argsstring>(const svector&lt; F, V &gt; &amp;y)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classsvector" kindref="compound">svector</ref>&lt; F, V &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="98" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1a71e1ccf9f794dcc7ec2cf749bdcd2e23" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsvector" kindref="compound">svector</ref></type>
        <definition>svector svector&lt; F, V &gt;::operator*</definition>
        <argsstring>(const svector&lt; F, V &gt; &amp;y) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classsvector" kindref="compound">svector</ref>&lt; F, V &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="152" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="152" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1a0a5aaef6f64ca6a66e25880b445b3057" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>V</type>
        <definition>V svector&lt; F, V &gt;::dot</definition>
        <argsstring>(const svector&lt; F, V &gt; &amp;y) const </argsstring>
        <name>dot</name>
        <param>
          <type>const <ref refid="classsvector" kindref="compound">svector</ref>&lt; F, V &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="158" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="158" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1ac72bf8a1d29510edec5e19220733d708" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsvector" kindref="compound">svector</ref></type>
        <definition>svector svector&lt; F, V &gt;::operator/</definition>
        <argsstring>(const svector&lt; F, V &gt; &amp;y) const </argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="classsvector" kindref="compound">svector</ref>&lt; F, V &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="164" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="164" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1ab2252c92adf6656d0bde5aec708a371f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>V</type>
        <definition>V svector&lt; F, V &gt;::normsquared</definition>
        <argsstring>(void) const </argsstring>
        <name>normsquared</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="170" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="170" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1a4e0580f25d632108eafcc643b799ca03" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>svector&lt; F, V &gt;::svector</definition>
        <argsstring>()</argsstring>
        <name>svector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="19" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1af80c78063c502c408ce9de9e29802c4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>svector&lt; F, V &gt;::svector</definition>
        <argsstring>(const F &amp;f, const V &amp;v)</argsstring>
        <name>svector</name>
        <param>
          <type>const F &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const V &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="21" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="21" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1a7f6261a28ccf2e7e38b8921716a35e3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void svector&lt; F, V &gt;::swap</definition>
        <argsstring>(svector&lt; F, V &gt; &amp;other)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classsvector" kindref="compound">svector</ref>&lt; F, V &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="27" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1ad6df678466732e7a17ea1b1223ff7747" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type svector&lt; F, V &gt;::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="28" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1aa7a575ad6a3a810adf89785b4a5d49b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void svector&lt; F, V &gt;::erase</definition>
        <argsstring>(const F &amp;f)</argsstring>
        <name>erase</name>
        <param>
          <type>const F &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="29" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1ae1a20b7ecc6899bc36f6c74c09b80f21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>V &amp;</type>
        <definition>V&amp; svector&lt; F, V &gt;::operator[]</definition>
        <argsstring>(const F &amp;f)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const F &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="30" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1a8654fa07ce4f88f6f1f781ddd4968da9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator svector&lt; F, V &gt;::find</definition>
        <argsstring>(const F &amp;f)</argsstring>
        <name>find</name>
        <param>
          <type>const F &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="31" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1ab57caec3eab9d57eaec2ad1c436fc3d6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator svector&lt; F, V &gt;::find</definition>
        <argsstring>(const F &amp;f) const </argsstring>
        <name>find</name>
        <param>
          <type>const F &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="32" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1a8a296d1d27c0242a6d8c89d4fdf67388" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; iterator, bool &gt;</type>
        <definition>std::pair&lt;iterator, bool&gt; svector&lt; F, V &gt;::insert</definition>
        <argsstring>(const value_type &amp;fv)</argsstring>
        <name>insert</name>
        <param>
          <type>const value_type &amp;</type>
          <declname>fv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="33" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1ad62a2162f09c4d4ea2b9ab9a93ebdfdd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator svector&lt; F, V &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="34" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1a24c1e2612bd13a2bf259dc2627675dfa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator svector&lt; F, V &gt;::begin</definition>
        <argsstring>() const </argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="35" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1a35b2c7f05af13cb957af871cedcc5e00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator svector&lt; F, V &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="36" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1ad40a20f476d65891c06db88f7b43c12e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator svector&lt; F, V &gt;::end</definition>
        <argsstring>() const </argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="37" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1a6dad0388185b81076751d6dad78e3fbf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsvector" kindref="compound">svector</ref> &amp;</type>
        <definition>svector&amp; svector&lt; F, V &gt;::operator*=</definition>
        <argsstring>(const V &amp;c)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const V &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="41" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="41" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1a5cffef009f0233103409edd38d658d11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsvector" kindref="compound">svector</ref> &amp;</type>
        <definition>svector&amp; svector&lt; F, V &gt;::operator/=</definition>
        <argsstring>(const V &amp;c)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const V &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="47" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="47" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1aea1f3107cc825f39969674dbe609a12a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsvector" kindref="compound">svector</ref></type>
        <definition>svector svector&lt; F, V &gt;::operator-</definition>
        <argsstring>() const </argsstring>
        <name>operator-</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="53" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1a5420004342894baf43b5811f8a49dd22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsvector" kindref="compound">svector</ref> &amp;</type>
        <definition>svector&amp; svector&lt; F, V &gt;::operator+=</definition>
        <argsstring>(const svector&lt; F, V &gt; &amp;y)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classsvector" kindref="compound">svector</ref>&lt; F, V &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="94" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1a141a4f013fb63eb81bf297c048a0e133" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsvector" kindref="compound">svector</ref> &amp;</type>
        <definition>svector&amp; svector&lt; F, V &gt;::operator-=</definition>
        <argsstring>(const svector&lt; F, V &gt; &amp;y)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classsvector" kindref="compound">svector</ref>&lt; F, V &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="98" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1a71e1ccf9f794dcc7ec2cf749bdcd2e23" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsvector" kindref="compound">svector</ref></type>
        <definition>svector svector&lt; F, V &gt;::operator*</definition>
        <argsstring>(const svector&lt; F, V &gt; &amp;y) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classsvector" kindref="compound">svector</ref>&lt; F, V &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="152" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="152" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1a0a5aaef6f64ca6a66e25880b445b3057" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>V</type>
        <definition>V svector&lt; F, V &gt;::dot</definition>
        <argsstring>(const svector&lt; F, V &gt; &amp;y) const </argsstring>
        <name>dot</name>
        <param>
          <type>const <ref refid="classsvector" kindref="compound">svector</ref>&lt; F, V &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="158" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="158" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1ac72bf8a1d29510edec5e19220733d708" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsvector" kindref="compound">svector</ref></type>
        <definition>svector svector&lt; F, V &gt;::operator/</definition>
        <argsstring>(const svector&lt; F, V &gt; &amp;y) const </argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="classsvector" kindref="compound">svector</ref>&lt; F, V &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="164" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="164" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1ab2252c92adf6656d0bde5aec708a371f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>V</type>
        <definition>V svector&lt; F, V &gt;::normsquared</definition>
        <argsstring>(void) const </argsstring>
        <name>normsquared</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="170" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="170" bodyend="175"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classsvector_1aab15a76cc91f699acf5baa85f11439b3" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename C</type>
          </param>
        </templateparamlist>
        <type><ref refid="classsvector" kindref="compound">svector</ref> &amp;</type>
        <definition>svector&amp; svector&lt; F, V &gt;::add</definition>
        <argsstring>(const svector&lt; F, V &gt; &amp;y, const C &amp;c)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="classsvector" kindref="compound">svector</ref>&lt; F, V &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const C &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="59" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="59" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1a90ac317ae34f85b27980004cc0282e9d" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Op</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void svector&lt; F, V &gt;::intersect</definition>
        <argsstring>(const svector&lt; F, V &gt; &amp;y, Op &amp;op) const </argsstring>
        <name>intersect</name>
        <param>
          <type>const <ref refid="classsvector" kindref="compound">svector</ref>&lt; F, V &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>Op &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="104" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="104" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1aab15a76cc91f699acf5baa85f11439b3" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename C</type>
          </param>
        </templateparamlist>
        <type><ref refid="classsvector" kindref="compound">svector</ref> &amp;</type>
        <definition>svector&amp; svector&lt; F, V &gt;::add</definition>
        <argsstring>(const svector&lt; F, V &gt; &amp;y, const C &amp;c)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="classsvector" kindref="compound">svector</ref>&lt; F, V &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const C &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="59" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="59" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classsvector_1a90ac317ae34f85b27980004cc0282e9d" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Op</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void svector&lt; F, V &gt;::intersect</definition>
        <argsstring>(const svector&lt; F, V &gt; &amp;y, Op &amp;op) const </argsstring>
        <name>intersect</name>
        <param>
          <type>const <ref refid="classsvector" kindref="compound">svector</ref>&lt; F, V &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>Op &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="104" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="104" bodyend="133"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1558">
        <label>std::map&lt; F, V &gt;</label>
      </node>
      <node id="1557">
        <label>svector&lt; F, V &gt;</label>
        <link refid="classsvector"/>
        <childnode refid="1558" relation="usage">
          <edgelabel>m</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="9" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="9" bodyend="176"/>
    <listofallmembers>
      <member refid="classsvector_1aab15a76cc91f699acf5baa85f11439b3" prot="protected" virt="non-virtual"><scope>svector</scope><name>add</name></member>
      <member refid="classsvector_1aab15a76cc91f699acf5baa85f11439b3" prot="protected" virt="non-virtual"><scope>svector</scope><name>add</name></member>
      <member refid="classsvector_1ad62a2162f09c4d4ea2b9ab9a93ebdfdd" prot="public" virt="non-virtual"><scope>svector</scope><name>begin</name></member>
      <member refid="classsvector_1a24c1e2612bd13a2bf259dc2627675dfa" prot="public" virt="non-virtual"><scope>svector</scope><name>begin</name></member>
      <member refid="classsvector_1ad62a2162f09c4d4ea2b9ab9a93ebdfdd" prot="public" virt="non-virtual"><scope>svector</scope><name>begin</name></member>
      <member refid="classsvector_1a24c1e2612bd13a2bf259dc2627675dfa" prot="public" virt="non-virtual"><scope>svector</scope><name>begin</name></member>
      <member refid="classsvector_1a12c0ac4d5d48eb68f0024b4a1ebe597b" prot="public" virt="non-virtual"><scope>svector</scope><name>const_iterator</name></member>
      <member refid="classsvector_1a12c0ac4d5d48eb68f0024b4a1ebe597b" prot="public" virt="non-virtual"><scope>svector</scope><name>const_iterator</name></member>
      <member refid="classsvector_1a0a5aaef6f64ca6a66e25880b445b3057" prot="public" virt="non-virtual"><scope>svector</scope><name>dot</name></member>
      <member refid="classsvector_1a0a5aaef6f64ca6a66e25880b445b3057" prot="public" virt="non-virtual"><scope>svector</scope><name>dot</name></member>
      <member refid="classsvector_1a35b2c7f05af13cb957af871cedcc5e00" prot="public" virt="non-virtual"><scope>svector</scope><name>end</name></member>
      <member refid="classsvector_1ad40a20f476d65891c06db88f7b43c12e" prot="public" virt="non-virtual"><scope>svector</scope><name>end</name></member>
      <member refid="classsvector_1a35b2c7f05af13cb957af871cedcc5e00" prot="public" virt="non-virtual"><scope>svector</scope><name>end</name></member>
      <member refid="classsvector_1ad40a20f476d65891c06db88f7b43c12e" prot="public" virt="non-virtual"><scope>svector</scope><name>end</name></member>
      <member refid="classsvector_1aa7a575ad6a3a810adf89785b4a5d49b3" prot="public" virt="non-virtual"><scope>svector</scope><name>erase</name></member>
      <member refid="classsvector_1aa7a575ad6a3a810adf89785b4a5d49b3" prot="public" virt="non-virtual"><scope>svector</scope><name>erase</name></member>
      <member refid="classsvector_1a8654fa07ce4f88f6f1f781ddd4968da9" prot="public" virt="non-virtual"><scope>svector</scope><name>find</name></member>
      <member refid="classsvector_1ab57caec3eab9d57eaec2ad1c436fc3d6" prot="public" virt="non-virtual"><scope>svector</scope><name>find</name></member>
      <member refid="classsvector_1a8654fa07ce4f88f6f1f781ddd4968da9" prot="public" virt="non-virtual"><scope>svector</scope><name>find</name></member>
      <member refid="classsvector_1ab57caec3eab9d57eaec2ad1c436fc3d6" prot="public" virt="non-virtual"><scope>svector</scope><name>find</name></member>
      <member refid="classsvector_1a8a296d1d27c0242a6d8c89d4fdf67388" prot="public" virt="non-virtual"><scope>svector</scope><name>insert</name></member>
      <member refid="classsvector_1a8a296d1d27c0242a6d8c89d4fdf67388" prot="public" virt="non-virtual"><scope>svector</scope><name>insert</name></member>
      <member refid="classsvector_1a90ac317ae34f85b27980004cc0282e9d" prot="protected" virt="non-virtual"><scope>svector</scope><name>intersect</name></member>
      <member refid="classsvector_1a90ac317ae34f85b27980004cc0282e9d" prot="protected" virt="non-virtual"><scope>svector</scope><name>intersect</name></member>
      <member refid="classsvector_1a49425052f4c63a771edf0c09ad52bb2e" prot="public" virt="non-virtual"><scope>svector</scope><name>iterator</name></member>
      <member refid="classsvector_1a49425052f4c63a771edf0c09ad52bb2e" prot="public" virt="non-virtual"><scope>svector</scope><name>iterator</name></member>
      <member refid="classsvector_1ac25b00aafed8c1046798a9c673fd4d02" prot="private" virt="non-virtual"><scope>svector</scope><name>m</name></member>
      <member refid="classsvector_1ab2252c92adf6656d0bde5aec708a371f" prot="public" virt="non-virtual"><scope>svector</scope><name>normsquared</name></member>
      <member refid="classsvector_1ab2252c92adf6656d0bde5aec708a371f" prot="public" virt="non-virtual"><scope>svector</scope><name>normsquared</name></member>
      <member refid="classsvector_1a71e1ccf9f794dcc7ec2cf749bdcd2e23" prot="public" virt="non-virtual"><scope>svector</scope><name>operator*</name></member>
      <member refid="classsvector_1a71e1ccf9f794dcc7ec2cf749bdcd2e23" prot="public" virt="non-virtual"><scope>svector</scope><name>operator*</name></member>
      <member refid="classsvector_1a6dad0388185b81076751d6dad78e3fbf" prot="public" virt="non-virtual"><scope>svector</scope><name>operator*=</name></member>
      <member refid="classsvector_1a6dad0388185b81076751d6dad78e3fbf" prot="public" virt="non-virtual"><scope>svector</scope><name>operator*=</name></member>
      <member refid="classsvector_1a5420004342894baf43b5811f8a49dd22" prot="public" virt="non-virtual"><scope>svector</scope><name>operator+=</name></member>
      <member refid="classsvector_1a5420004342894baf43b5811f8a49dd22" prot="public" virt="non-virtual"><scope>svector</scope><name>operator+=</name></member>
      <member refid="classsvector_1aea1f3107cc825f39969674dbe609a12a" prot="public" virt="non-virtual"><scope>svector</scope><name>operator-</name></member>
      <member refid="classsvector_1aea1f3107cc825f39969674dbe609a12a" prot="public" virt="non-virtual"><scope>svector</scope><name>operator-</name></member>
      <member refid="classsvector_1a141a4f013fb63eb81bf297c048a0e133" prot="public" virt="non-virtual"><scope>svector</scope><name>operator-=</name></member>
      <member refid="classsvector_1a141a4f013fb63eb81bf297c048a0e133" prot="public" virt="non-virtual"><scope>svector</scope><name>operator-=</name></member>
      <member refid="classsvector_1ac72bf8a1d29510edec5e19220733d708" prot="public" virt="non-virtual"><scope>svector</scope><name>operator/</name></member>
      <member refid="classsvector_1ac72bf8a1d29510edec5e19220733d708" prot="public" virt="non-virtual"><scope>svector</scope><name>operator/</name></member>
      <member refid="classsvector_1a5cffef009f0233103409edd38d658d11" prot="public" virt="non-virtual"><scope>svector</scope><name>operator/=</name></member>
      <member refid="classsvector_1a5cffef009f0233103409edd38d658d11" prot="public" virt="non-virtual"><scope>svector</scope><name>operator/=</name></member>
      <member refid="classsvector_1ae1a20b7ecc6899bc36f6c74c09b80f21" prot="public" virt="non-virtual"><scope>svector</scope><name>operator[]</name></member>
      <member refid="classsvector_1ae1a20b7ecc6899bc36f6c74c09b80f21" prot="public" virt="non-virtual"><scope>svector</scope><name>operator[]</name></member>
      <member refid="classsvector_1ad6df678466732e7a17ea1b1223ff7747" prot="public" virt="non-virtual"><scope>svector</scope><name>size</name></member>
      <member refid="classsvector_1ad6df678466732e7a17ea1b1223ff7747" prot="public" virt="non-virtual"><scope>svector</scope><name>size</name></member>
      <member refid="classsvector_1a781cf3071f4c7e8ed3b9247c34c783c1" prot="public" virt="non-virtual"><scope>svector</scope><name>size_type</name></member>
      <member refid="classsvector_1a781cf3071f4c7e8ed3b9247c34c783c1" prot="public" virt="non-virtual"><scope>svector</scope><name>size_type</name></member>
      <member refid="classsvector_1a4e0580f25d632108eafcc643b799ca03" prot="public" virt="non-virtual"><scope>svector</scope><name>svector</name></member>
      <member refid="classsvector_1af80c78063c502c408ce9de9e29802c4e" prot="public" virt="non-virtual"><scope>svector</scope><name>svector</name></member>
      <member refid="classsvector_1a4e0580f25d632108eafcc643b799ca03" prot="public" virt="non-virtual"><scope>svector</scope><name>svector</name></member>
      <member refid="classsvector_1af80c78063c502c408ce9de9e29802c4e" prot="public" virt="non-virtual"><scope>svector</scope><name>svector</name></member>
      <member refid="classsvector_1a7f6261a28ccf2e7e38b8921716a35e3b" prot="public" virt="non-virtual"><scope>svector</scope><name>swap</name></member>
      <member refid="classsvector_1a7f6261a28ccf2e7e38b8921716a35e3b" prot="public" virt="non-virtual"><scope>svector</scope><name>swap</name></member>
      <member refid="classsvector_1a6ad53776885c70adeb9fb67c7a4d6f23" prot="public" virt="non-virtual"><scope>svector</scope><name>value_type</name></member>
      <member refid="classsvector_1a6ad53776885c70adeb9fb67c7a4d6f23" prot="public" virt="non-virtual"><scope>svector</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="classScarab_1_1HG_1_1BestHyp" kind="class" prot="public">
    <compoundname>Scarab::HG::BestHyp</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classScarab_1_1HG_1_1BestHyp_1ade1e1d72347eb5e143f1da6256032b32" prot="private" static="no" mutable="no">
        <type>map&lt; int, int &gt;</type>
        <definition>map&lt;int, int&gt; Scarab::HG::BestHyp::index_by_id</definition>
        <argsstring></argsstring>
        <name>index_by_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" line="18" bodyfile="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classScarab_1_1HG_1_1BestHyp_1a190f4624046cc5990311e9c7d9cde661" prot="private" static="no" mutable="no">
        <type>map&lt; int, vector&lt; int &gt; &gt;</type>
        <definition>map&lt;int, vector&lt;int&gt; &gt; Scarab::HG::BestHyp::index_by_right</definition>
        <argsstring></argsstring>
        <name>index_by_right</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" line="19" bodyfile="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classScarab_1_1HG_1_1BestHyp_1a148b642e513b91aded3b6ac63a4f6158" prot="private" static="no" mutable="no">
        <type>map&lt; int, vector&lt; int &gt; &gt;</type>
        <definition>map&lt;int, vector&lt;int&gt; &gt; Scarab::HG::BestHyp::index_by_left</definition>
        <argsstring></argsstring>
        <name>index_by_left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" line="20" bodyfile="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classScarab_1_1HG_1_1BestHyp_1ab293f04d4d58e1503066c0d7b4e4013b" prot="public" static="no" mutable="no">
        <type>vector&lt; <ref refid="structScarab_1_1HG_1_1Hypothesis" kindref="compound">Hypothesis</ref> * &gt;</type>
        <definition>vector&lt;Hypothesis *&gt; Scarab::HG::BestHyp::hyps</definition>
        <argsstring></argsstring>
        <name>hyps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" line="27" bodyfile="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classScarab_1_1HG_1_1BestHyp_1a63d4d0feac5cff2ce7e00bdd15feb738" prot="public" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; Scarab::HG::BestHyp::scores</definition>
        <argsstring></argsstring>
        <name>scores</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" line="28" bodyfile="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classScarab_1_1HG_1_1BestHyp_1abf49848ebb40edc6cd7c30af8139f389" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Scarab::HG::BestHyp::has_new</definition>
        <argsstring></argsstring>
        <name>has_new</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" line="30" bodyfile="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classScarab_1_1HG_1_1BestHyp_1acf115e7f6354fd9a8a2798c0fcbd5df9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Scarab::HG::BestHyp::BestHyp</definition>
        <argsstring>()</argsstring>
        <name>BestHyp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" line="31" bodyfile="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1BestHyp_1a8ebb56ed4cd363e793bc13936551a58a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Scarab::HG::BestHyp::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" line="72" bodyfile="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1BestHyp_1a3c032ac35ce142d64fdad17b8950b493" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Scarab::HG::BestHyp::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" line="76" bodyfile="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" bodystart="76" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1BestHyp_1a33ebfb0c6fc093b02e8d2e33082fd8a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structScarab_1_1HG_1_1Hypothesis" kindref="compound">Hypothesis</ref> &amp;</type>
        <definition>const Hypothesis&amp; Scarab::HG::BestHyp::get_hyp</definition>
        <argsstring>(int i) const </argsstring>
        <name>get_hyp</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" line="86" bodyfile="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" bodystart="86" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1BestHyp_1afd75d0946faf6a48d113d815c1f86bce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Scarab::HG::BestHyp::get_score</definition>
        <argsstring>(int i) const </argsstring>
        <name>get_score</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" line="90" bodyfile="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1BestHyp_1a60998ae47c3087d809d0ab1be0d2c21a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Scarab::HG::BestHyp::get_score_by_id</definition>
        <argsstring>(int id) const </argsstring>
        <name>get_score_by_id</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" line="94" bodyfile="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" bodystart="94" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1BestHyp_1ad68702666a75575acffd113f9038e92a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structScarab_1_1HG_1_1Hypothesis" kindref="compound">Hypothesis</ref> &amp;</type>
        <definition>const Hypothesis&amp; Scarab::HG::BestHyp::get_hyp_by_id</definition>
        <argsstring>(int id) const </argsstring>
        <name>get_hyp_by_id</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" line="101" bodyfile="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" bodystart="101" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1BestHyp_1acdb194cd10fe47e64ac7c96de296cb4e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Scarab::HG::BestHyp::has_id</definition>
        <argsstring>(int id) const </argsstring>
        <name>has_id</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" line="109" bodyfile="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" bodystart="109" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1BestHyp_1adb8421adc7af8cb8b4f5116599e807fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; int &gt;</type>
        <definition>vector&lt;int&gt; Scarab::HG::BestHyp::join</definition>
        <argsstring>(const Hypothesis &amp;other) const </argsstring>
        <name>join</name>
        <param>
          <type>const <ref refid="structScarab_1_1HG_1_1Hypothesis" kindref="compound">Hypothesis</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" line="115" bodyfile="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" bodystart="115" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1BestHyp_1ac9e2d1fc7e0d88865fa18d25877d63b8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; int &gt;</type>
        <definition>vector&lt;int&gt; Scarab::HG::BestHyp::join_back</definition>
        <argsstring>(const Hypothesis &amp;other) const </argsstring>
        <name>join_back</name>
        <param>
          <type>const <ref refid="structScarab_1_1HG_1_1Hypothesis" kindref="compound">Hypothesis</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" line="126" bodyfile="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" bodystart="126" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1BestHyp_1ac079b15bdd5c65ede04d4e99eb683ff8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Scarab::HG::BestHyp::try_set_hyp</definition>
        <argsstring>(Hypothesis *hyp, double score)</argsstring>
        <name>try_set_hyp</name>
        <param>
          <type><ref refid="structScarab_1_1HG_1_1Hypothesis" kindref="compound">Hypothesis</ref> *</type>
          <declname>hyp</declname>
        </param>
        <param>
          <type>double</type>
          <declname>score</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" line="136" bodyfile="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" bodystart="136" bodyend="161"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="246">
        <label>Scarab::HG::Hypothesis</label>
        <link refid="structScarab_1_1HG_1_1Hypothesis"/>
        <childnode refid="247" relation="usage">
          <edgelabel>back_edge</edgelabel>
        </childnode>
        <childnode refid="248" relation="usage">
          <edgelabel>right_side</edgelabel>
          <edgelabel>hook</edgelabel>
        </childnode>
        <childnode refid="249" relation="usage">
          <edgelabel>prev_hyp</edgelabel>
        </childnode>
      </node>
      <node id="251">
        <label>std::vector&lt; double &gt;</label>
      </node>
      <node id="247">
        <label>Scarab::HG::Hyperedge</label>
        <link refid="classScarab_1_1HG_1_1Hyperedge"/>
      </node>
      <node id="248">
        <label>Scarab::HG::State</label>
        <link refid="structScarab_1_1HG_1_1State"/>
        <childnode refid="249" relation="usage">
          <edgelabel>_state</edgelabel>
        </childnode>
      </node>
      <node id="244">
        <label>std::map&lt; int, int &gt;</label>
      </node>
      <node id="245">
        <label>std::vector&lt; Hypothesis * &gt;</label>
        <childnode refid="246" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="250">
        <label>std::map&lt; int, vector&lt; int &gt; &gt;</label>
        <childnode refid="249" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="243">
        <label>Scarab::HG::BestHyp</label>
        <link refid="classScarab_1_1HG_1_1BestHyp"/>
        <childnode refid="244" relation="usage">
          <edgelabel>index_by_id</edgelabel>
        </childnode>
        <childnode refid="245" relation="usage">
          <edgelabel>hyps</edgelabel>
        </childnode>
        <childnode refid="250" relation="usage">
          <edgelabel>index_by_left</edgelabel>
          <edgelabel>index_by_right</edgelabel>
        </childnode>
        <childnode refid="251" relation="usage">
          <edgelabel>scores</edgelabel>
        </childnode>
      </node>
      <node id="249">
        <label>std::vector&lt; int &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" line="15" bodyfile="/home/srush/Projects/relax_decode/hypergraph/BestHyp.h" bodystart="15" bodyend="162"/>
    <listofallmembers>
      <member refid="classScarab_1_1HG_1_1BestHyp_1acf115e7f6354fd9a8a2798c0fcbd5df9" prot="public" virt="non-virtual"><scope>Scarab::HG::BestHyp</scope><name>BestHyp</name></member>
      <member refid="classScarab_1_1HG_1_1BestHyp_1a3c032ac35ce142d64fdad17b8950b493" prot="public" virt="non-virtual"><scope>Scarab::HG::BestHyp</scope><name>clear</name></member>
      <member refid="classScarab_1_1HG_1_1BestHyp_1a33ebfb0c6fc093b02e8d2e33082fd8a9" prot="public" virt="non-virtual"><scope>Scarab::HG::BestHyp</scope><name>get_hyp</name></member>
      <member refid="classScarab_1_1HG_1_1BestHyp_1ad68702666a75575acffd113f9038e92a" prot="public" virt="non-virtual"><scope>Scarab::HG::BestHyp</scope><name>get_hyp_by_id</name></member>
      <member refid="classScarab_1_1HG_1_1BestHyp_1afd75d0946faf6a48d113d815c1f86bce" prot="public" virt="non-virtual"><scope>Scarab::HG::BestHyp</scope><name>get_score</name></member>
      <member refid="classScarab_1_1HG_1_1BestHyp_1a60998ae47c3087d809d0ab1be0d2c21a" prot="public" virt="non-virtual"><scope>Scarab::HG::BestHyp</scope><name>get_score_by_id</name></member>
      <member refid="classScarab_1_1HG_1_1BestHyp_1acdb194cd10fe47e64ac7c96de296cb4e" prot="public" virt="non-virtual"><scope>Scarab::HG::BestHyp</scope><name>has_id</name></member>
      <member refid="classScarab_1_1HG_1_1BestHyp_1abf49848ebb40edc6cd7c30af8139f389" prot="public" virt="non-virtual"><scope>Scarab::HG::BestHyp</scope><name>has_new</name></member>
      <member refid="classScarab_1_1HG_1_1BestHyp_1ab293f04d4d58e1503066c0d7b4e4013b" prot="public" virt="non-virtual"><scope>Scarab::HG::BestHyp</scope><name>hyps</name></member>
      <member refid="classScarab_1_1HG_1_1BestHyp_1ade1e1d72347eb5e143f1da6256032b32" prot="private" virt="non-virtual"><scope>Scarab::HG::BestHyp</scope><name>index_by_id</name></member>
      <member refid="classScarab_1_1HG_1_1BestHyp_1a148b642e513b91aded3b6ac63a4f6158" prot="private" virt="non-virtual"><scope>Scarab::HG::BestHyp</scope><name>index_by_left</name></member>
      <member refid="classScarab_1_1HG_1_1BestHyp_1a190f4624046cc5990311e9c7d9cde661" prot="private" virt="non-virtual"><scope>Scarab::HG::BestHyp</scope><name>index_by_right</name></member>
      <member refid="classScarab_1_1HG_1_1BestHyp_1adb8421adc7af8cb8b4f5116599e807fd" prot="public" virt="non-virtual"><scope>Scarab::HG::BestHyp</scope><name>join</name></member>
      <member refid="classScarab_1_1HG_1_1BestHyp_1ac9e2d1fc7e0d88865fa18d25877d63b8" prot="public" virt="non-virtual"><scope>Scarab::HG::BestHyp</scope><name>join_back</name></member>
      <member refid="classScarab_1_1HG_1_1BestHyp_1a63d4d0feac5cff2ce7e00bdd15feb738" prot="public" virt="non-virtual"><scope>Scarab::HG::BestHyp</scope><name>scores</name></member>
      <member refid="classScarab_1_1HG_1_1BestHyp_1a8ebb56ed4cd363e793bc13936551a58a" prot="public" virt="non-virtual"><scope>Scarab::HG::BestHyp</scope><name>size</name></member>
      <member refid="classScarab_1_1HG_1_1BestHyp_1ac079b15bdd5c65ede04d4e99eb683ff8" prot="public" virt="non-virtual"><scope>Scarab::HG::BestHyp</scope><name>try_set_hyp</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

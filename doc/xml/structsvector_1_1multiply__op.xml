<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="structsvector_1_1multiply__op" kind="struct" prot="protected">
    <compoundname>svector::multiply_op</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structsvector_1_1multiply__op_1a8b726798c1f02706cc6ae5c5aad9674d" prot="public" static="no" mutable="no">
        <type><ref refid="classsvector" kindref="compound">svector</ref>&lt; F, V &gt;</type>
        <definition>svector&lt; F, V &gt; svector&lt; F, V &gt;::multiply_op::result</definition>
        <argsstring></argsstring>
        <name>result</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="142" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structsvector_1_1multiply__op_1a710b27605bcc6af3c75098ff13430fc2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void svector&lt; F, V &gt;::multiply_op::operator()</definition>
        <argsstring>(F f, V x, V y)</argsstring>
        <name>operator()</name>
        <param>
          <type>F</type>
          <declname>f</declname>
        </param>
        <param>
          <type>V</type>
          <declname>x</declname>
        </param>
        <param>
          <type>V</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="143" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="143" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="structsvector_1_1multiply__op_1a710b27605bcc6af3c75098ff13430fc2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void svector&lt; F, V &gt;::multiply_op::operator()</definition>
        <argsstring>(F f, V x, V y)</argsstring>
        <name>operator()</name>
        <param>
          <type>F</type>
          <declname>f</declname>
        </param>
        <param>
          <type>V</type>
          <declname>x</declname>
        </param>
        <param>
          <type>V</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" line="143" bodyfile="/home/srush/Projects/relax_decode/third-party/svector/svector.hpp" bodystart="143" bodyend="143"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" line="141" bodyfile="/home/srush/Projects/relax_decode/hypergraph/svector.hpp" bodystart="141" bodyend="144"/>
    <listofallmembers>
      <member refid="structsvector_1_1multiply__op_1a710b27605bcc6af3c75098ff13430fc2" prot="public" virt="non-virtual"><scope>svector::multiply_op</scope><name>operator()</name></member>
      <member refid="structsvector_1_1multiply__op_1a710b27605bcc6af3c75098ff13430fc2" prot="public" virt="non-virtual"><scope>svector::multiply_op</scope><name>operator()</name></member>
      <member refid="structsvector_1_1multiply__op_1a8b726798c1f02706cc6ae5c5aad9674d" prot="public" virt="non-virtual"><scope>svector::multiply_op</scope><name>result</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

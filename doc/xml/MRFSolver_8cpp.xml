<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="MRFSolver_8cpp" kind="file">
    <compoundname>MRFSolver.cpp</compoundname>
    <includes refid="Weights_8h" local="yes">Weights.h</includes>
    <includes refid="Forest_8h" local="yes">Forest.h</includes>
    <includes refid="HypergraphAlgorithms_8h" local="no">HypergraphAlgorithms.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">iomanip</includes>
    <includes refid="common_8h" local="yes">common.h</includes>
    <includes refid="HypergraphLP_8h" local="yes">HypergraphLP.h</includes>
    <includes refid="MRFLP_8h" local="yes">MRFLP.h</includes>
    <includes refid="MRF_8h" local="yes">MRF.h</includes>
    <includes refid="MRFHypergraph_8h" local="yes">MRFHypergraph.h</includes>
    <incdepgraph>
      <node id="1069">
        <label>HypergraphLP.h</label>
        <link refid="HypergraphLP_8h_source"/>
        <childnode refid="1057" relation="include">
        </childnode>
        <childnode refid="1070" relation="include">
        </childnode>
        <childnode refid="1062" relation="include">
        </childnode>
      </node>
      <node id="1066">
        <label>iomanip</label>
      </node>
      <node id="1047">
        <label>MRFSolver.cpp</label>
        <link refid="MRFSolver.cpp"/>
        <childnode refid="1048" relation="include">
        </childnode>
        <childnode refid="1053" relation="include">
        </childnode>
        <childnode refid="1063" relation="include">
        </childnode>
        <childnode refid="1049" relation="include">
        </childnode>
        <childnode refid="1066" relation="include">
        </childnode>
        <childnode refid="1067" relation="include">
        </childnode>
        <childnode refid="1069" relation="include">
        </childnode>
        <childnode refid="1071" relation="include">
        </childnode>
        <childnode refid="1072" relation="include">
        </childnode>
        <childnode refid="1078" relation="include">
        </childnode>
      </node>
      <node id="1056">
        <label>assert.h</label>
      </node>
      <node id="1067">
        <label>common.h</label>
        <link refid="common_8h_source"/>
        <childnode refid="1068" relation="include">
        </childnode>
      </node>
      <node id="1078">
        <label>MRFHypergraph.h</label>
        <link refid="MRFHypergraph_8h_source"/>
        <childnode refid="1072" relation="include">
        </childnode>
        <childnode refid="1057" relation="include">
        </childnode>
        <childnode refid="1059" relation="include">
        </childnode>
        <childnode refid="1064" relation="include">
        </childnode>
      </node>
      <node id="1068">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="1072">
        <label>MRF.h</label>
        <link refid="MRF_8h_source"/>
        <childnode refid="1073" relation="include">
        </childnode>
        <childnode refid="1055" relation="include">
        </childnode>
        <childnode refid="1074" relation="include">
        </childnode>
        <childnode refid="1075" relation="include">
        </childnode>
        <childnode refid="1076" relation="include">
        </childnode>
        <childnode refid="1059" relation="include">
        </childnode>
        <childnode refid="1077" relation="include">
        </childnode>
        <childnode refid="1064" relation="include">
        </childnode>
      </node>
      <node id="1073">
        <label>cassert</label>
      </node>
      <node id="1055">
        <label>string</label>
      </node>
      <node id="1060">
        <label>hypergraph.pb.h</label>
      </node>
      <node id="1064">
        <label>EdgeCache.h</label>
        <link refid="EdgeCache_8h_source"/>
        <childnode refid="1054" relation="include">
        </childnode>
        <childnode refid="1065" relation="include">
        </childnode>
        <childnode refid="1056" relation="include">
        </childnode>
      </node>
      <node id="1059">
        <label>HypergraphImpl.h</label>
        <link refid="HypergraphImpl_8h_source"/>
        <childnode refid="1057" relation="include">
        </childnode>
        <childnode refid="1060" relation="include">
        </childnode>
        <childnode refid="1061" relation="include">
        </childnode>
        <childnode refid="1048" relation="include">
        </childnode>
        <childnode refid="1062" relation="include">
        </childnode>
        <childnode refid="1054" relation="include">
        </childnode>
        <childnode refid="1058" relation="include">
        </childnode>
      </node>
      <node id="1057">
        <label>Hypergraph.h</label>
        <link refid="Hypergraph_8h_source"/>
        <childnode refid="1048" relation="include">
        </childnode>
        <childnode refid="1054" relation="include">
        </childnode>
        <childnode refid="1058" relation="include">
        </childnode>
        <childnode refid="1055" relation="include">
        </childnode>
      </node>
      <node id="1050">
        <label>fstream</label>
      </node>
      <node id="1074">
        <label>Graph.h</label>
        <link refid="Graph_8h_source"/>
        <childnode refid="1054" relation="include">
        </childnode>
        <childnode refid="1055" relation="include">
        </childnode>
        <childnode refid="1062" relation="include">
        </childnode>
      </node>
      <node id="1071">
        <label>MRFLP.h</label>
        <link refid="MRFLP_8h_source"/>
        <childnode refid="1070" relation="include">
        </childnode>
        <childnode refid="1072" relation="include">
        </childnode>
        <childnode refid="1074" relation="include">
        </childnode>
      </node>
      <node id="1052">
        <label>svector.hpp</label>
      </node>
      <node id="1048">
        <label>Weights.h</label>
        <link refid="Weights_8h_source"/>
        <childnode refid="1049" relation="include">
        </childnode>
        <childnode refid="1050" relation="include">
        </childnode>
        <childnode refid="1051" relation="include">
        </childnode>
        <childnode refid="1052" relation="include">
        </childnode>
      </node>
      <node id="1062">
        <label>../common.h</label>
      </node>
      <node id="1065">
        <label>bitset</label>
      </node>
      <node id="1054">
        <label>vector</label>
      </node>
      <node id="1077">
        <label>GraphProtoInterface.h</label>
        <link refid="GraphProtoInterface_8h_source"/>
        <childnode refid="1075" relation="include">
        </childnode>
        <childnode refid="1074" relation="include">
        </childnode>
      </node>
      <node id="1063">
        <label>HypergraphAlgorithms.h</label>
        <link refid="HypergraphAlgorithms_8h_source"/>
        <childnode refid="1052" relation="include">
        </childnode>
        <childnode refid="1064" relation="include">
        </childnode>
        <childnode refid="1057" relation="include">
        </childnode>
      </node>
      <node id="1053">
        <label>Forest.h</label>
        <link refid="Forest_8h_source"/>
        <childnode refid="1054" relation="include">
        </childnode>
        <childnode refid="1052" relation="include">
        </childnode>
        <childnode refid="1055" relation="include">
        </childnode>
        <childnode refid="1056" relation="include">
        </childnode>
        <childnode refid="1057" relation="include">
        </childnode>
        <childnode refid="1059" relation="include">
        </childnode>
        <childnode refid="1060" relation="include">
        </childnode>
      </node>
      <node id="1076">
        <label>mrf.pb.h</label>
      </node>
      <node id="1075">
        <label>graph.pb.h</label>
      </node>
      <node id="1049">
        <label>iostream</label>
      </node>
      <node id="1051">
        <label>cy_svector.hpp</label>
      </node>
      <node id="1070">
        <label>gurobi_c++.h</label>
      </node>
      <node id="1058">
        <label>set</label>
      </node>
      <node id="1061">
        <label>features.pb.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="MRFSolver_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/MRFSolver.cpp" line="20" bodyfile="/home/srush/Projects/relax_decode/MRFSolver.cpp" bodystart="20" bodyend="71"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Weights.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Forest.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;HypergraphAlgorithms.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;HypergraphLP.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MRFLP.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MRF.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MRFHypergraph.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Scarab::HG;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>GOOGLE_PROTOBUF_VERIFY_VERSION;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Viterbi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>wvector<sp/>*<sp/>weight<sp/>=<sp/>load_weights_from_file(<sp/>argv[1]);<sp/></highlight><highlight class="comment">//vm[&quot;weights&quot;].as&lt;<sp/>string<sp/>&gt;().c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>GRBEnv<sp/>env<sp/>=<sp/>GRBEnv();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>GRBModel<sp/>model(env);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>stringstream<sp/>fname;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>fname<sp/>&lt;&lt;<sp/>argv[2];</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="classMRF" kindref="compound">MRF</ref><sp/>*<sp/>mrf<sp/>=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classMRF" kindref="compound">MRF</ref>();<sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/>fname.str()<sp/>&lt;&lt;endl;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>mrf-&gt;build_from_file(fname.str().c_str());</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>stringstream<sp/>prefix;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>prefix<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;cgroup_&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>i;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="structMRFLP" kindref="compound">MRFLP</ref><sp/>*<sp/>mrf_lp<sp/>=<sp/>MRFBuilderLP::add_mrf(*mrf,<sp/>prefix.str(),<sp/>model,<sp/>GRB_CONTINUOUS);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="classMRFHypergraph" kindref="compound">MRFHypergraph</ref><sp/>mrf_hyp<sp/>=<sp/>MRFHypergraph::from_mrf(*mrf);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;NODE<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mrf_hyp.nodes().size()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EDGE<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mrf_hyp.edges().size()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>mrf_hyp.write_to_file(</highlight><highlight class="stringliteral">&quot;/tmp/out_mrf&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="classScarab_1_1HG_1_1HypergraphAlgorithms" kindref="compound">HypergraphAlgorithms</ref><sp/>ha(mrf_hyp);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="classCache" kindref="compound">EdgeCache</ref><sp/>*<sp/>edge_weights<sp/>=<sp/>ha.cache_edge_weights(*weight);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="classCache" kindref="compound">NodeCache</ref><sp/><sp/>score_memo_table(mrf_hyp.num_nodes());<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="classCache" kindref="compound">NodeBackCache</ref><sp/><sp/>back_memo_table(mrf_hyp.num_nodes());</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>score<sp/>=<sp/>ha.best_path(<sp/>*edge_weights,<sp/>score_memo_table,<sp/>back_memo_table);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SCORE&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>score<sp/>&lt;&lt;endl;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>model.update();<sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//hard_cons.add_to_lp(lp_vars,<sp/>model);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//model.computeIIS();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//model.write(&quot;/tmp/model.ilp&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>model.write(</highlight><highlight class="stringliteral">&quot;/tmp/model.lp&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>model.set(GRB_IntAttr_ModelSense,<sp/>1);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>model.optimize();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>google::protobuf::ShutdownProtobufLibrary();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/srush/Projects/relax_decode/MRFSolver.cpp"/>
  </compounddef>
</doxygen>

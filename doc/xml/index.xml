<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygenindex xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd" version="1.6.3">
  <compound refid="classstd_1_1allocator" kind="class"><name>std::allocator</name>
    <member refid="classstd_1_1allocator_1a55f88dab1194d6b8a34e46017c4dfd79" kind="variable"><name>elements</name></member>
  </compound>
  <compound refid="classScarab_1_1HG_1_1AStar" kind="class"><name>Scarab::HG::AStar</name>
    <member refid="classScarab_1_1HG_1_1AStar_1a22a3758bafb6fc86ab2d70de38332eb8" kind="variable"><name>_hyps</name></member>
    <member refid="classScarab_1_1HG_1_1AStar_1aa37960dce5a94d0de3dca365e8aae651" kind="variable"><name>_locs</name></member>
    <member refid="classScarab_1_1HG_1_1AStar_1a0974256d756203a54f322ddd6d04e00a" kind="variable"><name>_forest</name></member>
    <member refid="classScarab_1_1HG_1_1AStar_1a6a7e395a5b0d9bd976ed02c0533f4d89" kind="variable"><name>_controller</name></member>
    <member refid="classScarab_1_1HG_1_1AStar_1ae6ca1714f804ae65ac2bdc93364a1cda" kind="variable"><name>_memo_table</name></member>
    <member refid="classScarab_1_1HG_1_1AStar_1a6f4c46ac0c3606999b6e5213f2fcb211" kind="variable"><name>_memo_edge_table</name></member>
    <member refid="classScarab_1_1HG_1_1AStar_1a2a749cd12de4dab506588dc60b83f1e2" kind="variable"><name>_edge_weights</name></member>
    <member refid="classScarab_1_1HG_1_1AStar_1a819cfda649b9d7365f719542055bed8c" kind="variable"><name>_heuristic</name></member>
    <member refid="classScarab_1_1HG_1_1AStar_1a0193d86afab32ed6a1e0568482c27c9e" kind="variable"><name>_queue</name></member>
    <member refid="classScarab_1_1HG_1_1AStar_1aff4af673e937ea26ef2295c7496206cc" kind="variable"><name>_best_so_far</name></member>
    <member refid="classScarab_1_1HG_1_1AStar_1a6dd1951d4e461ccdb69d1ee0ed50a23b" kind="variable"><name>_num_pops</name></member>
    <member refid="classScarab_1_1HG_1_1AStar_1a9ef783d4a8c542419265af112a9fe252" kind="variable"><name>_num_pushes</name></member>
    <member refid="classScarab_1_1HG_1_1AStar_1aac3afde8aee5ed28b81788f9e2d2b1a8" kind="variable"><name>_num_recompute</name></member>
    <member refid="classScarab_1_1HG_1_1AStar_1add1bfbed92beae4cd239af9a150b060b" kind="function"><name>AStar</name></member>
    <member refid="classScarab_1_1HG_1_1AStar_1a8079591e07aa9c4a5e4e14a5b1acb18b" kind="function"><name>best_path</name></member>
    <member refid="classScarab_1_1HG_1_1AStar_1a90695f3955cdd8aac180928e164d5342" kind="function"><name>~AStar</name></member>
    <member refid="classScarab_1_1HG_1_1AStar_1a99bb5e70d68c8b7a91253159a8e2a0e7" kind="function"><name>alloc_hyp</name></member>
    <member refid="classScarab_1_1HG_1_1AStar_1aff0ea4fac7891d3bf3d09ac78dffa23c" kind="function"><name>alloc_hyp</name></member>
    <member refid="classScarab_1_1HG_1_1AStar_1abe01cd22202d615b97b4be3fffb57c9f" kind="function"><name>alloc_loc</name></member>
    <member refid="classScarab_1_1HG_1_1AStar_1ad21195fbc57e21364f4fd522ca6c1a2f" kind="function"><name>get_next</name></member>
    <member refid="classScarab_1_1HG_1_1AStar_1a123f235568561677e99b8dbaf7c38c9f" kind="function"><name>add_to_queue</name></member>
    <member refid="classScarab_1_1HG_1_1AStar_1a3ae1d737792359f45bfc0bf66696ef7c" kind="function"><name>initialize_queue</name></member>
    <member refid="classScarab_1_1HG_1_1AStar_1acaf1769d8e0ab6caff37f5deda2a53a6" kind="function"><name>main_loop</name></member>
    <member refid="classScarab_1_1HG_1_1AStar_1a5e4f605c2720f9c8b6020f7de2add910" kind="function"><name>recompute_edge</name></member>
    <member refid="classScarab_1_1HG_1_1AStar_1a88afd7a50d14705724725a41eeb20a51" kind="function"><name>recompute_node</name></member>
    <member refid="classScarab_1_1HG_1_1AStar_1ac5112b783ec59b42ecf3735d9906fefd" kind="function"><name>forward_edge</name></member>
  </compound>
  <compound refid="classstd_1_1auto__ptr" kind="class"><name>std::auto_ptr</name>
    <member refid="classstd_1_1auto__ptr_1a076c936287003dc557981f9ccec1d841" kind="variable"><name>ptr</name></member>
  </compound>
  <compound refid="classstd_1_1bad__alloc" kind="class"><name>std::bad_alloc</name>
  </compound>
  <compound refid="classstd_1_1bad__cast" kind="class"><name>std::bad_cast</name>
  </compound>
  <compound refid="classstd_1_1bad__exception" kind="class"><name>std::bad_exception</name>
  </compound>
  <compound refid="classstd_1_1bad__typeid" kind="class"><name>std::bad_typeid</name>
  </compound>
  <compound refid="classstd_1_1basic__fstream" kind="class"><name>std::basic_fstream</name>
  </compound>
  <compound refid="classstd_1_1basic__ifstream" kind="class"><name>std::basic_ifstream</name>
  </compound>
  <compound refid="classstd_1_1basic__ios" kind="class"><name>std::basic_ios</name>
  </compound>
  <compound refid="classstd_1_1basic__iostream" kind="class"><name>std::basic_iostream</name>
  </compound>
  <compound refid="classstd_1_1basic__istream" kind="class"><name>std::basic_istream</name>
  </compound>
  <compound refid="classstd_1_1basic__istringstream" kind="class"><name>std::basic_istringstream</name>
  </compound>
  <compound refid="classstd_1_1basic__ofstream" kind="class"><name>std::basic_ofstream</name>
  </compound>
  <compound refid="classstd_1_1basic__ostream" kind="class"><name>std::basic_ostream</name>
  </compound>
  <compound refid="classstd_1_1basic__ostringstream" kind="class"><name>std::basic_ostringstream</name>
  </compound>
  <compound refid="classstd_1_1basic__string" kind="class"><name>std::basic_string</name>
  </compound>
  <compound refid="classstd_1_1basic__stringstream" kind="class"><name>std::basic_stringstream</name>
  </compound>
  <compound refid="classScarab_1_1HG_1_1BestHyp" kind="class"><name>Scarab::HG::BestHyp</name>
    <member refid="classScarab_1_1HG_1_1BestHyp_1ade1e1d72347eb5e143f1da6256032b32" kind="variable"><name>index_by_id</name></member>
    <member refid="classScarab_1_1HG_1_1BestHyp_1a190f4624046cc5990311e9c7d9cde661" kind="variable"><name>index_by_right</name></member>
    <member refid="classScarab_1_1HG_1_1BestHyp_1a148b642e513b91aded3b6ac63a4f6158" kind="variable"><name>index_by_left</name></member>
    <member refid="classScarab_1_1HG_1_1BestHyp_1ab293f04d4d58e1503066c0d7b4e4013b" kind="variable"><name>hyps</name></member>
    <member refid="classScarab_1_1HG_1_1BestHyp_1a63d4d0feac5cff2ce7e00bdd15feb738" kind="variable"><name>scores</name></member>
    <member refid="classScarab_1_1HG_1_1BestHyp_1abf49848ebb40edc6cd7c30af8139f389" kind="variable"><name>has_new</name></member>
    <member refid="classScarab_1_1HG_1_1BestHyp_1acf115e7f6354fd9a8a2798c0fcbd5df9" kind="function"><name>BestHyp</name></member>
    <member refid="classScarab_1_1HG_1_1BestHyp_1a8ebb56ed4cd363e793bc13936551a58a" kind="function"><name>size</name></member>
    <member refid="classScarab_1_1HG_1_1BestHyp_1a3c032ac35ce142d64fdad17b8950b493" kind="function"><name>clear</name></member>
    <member refid="classScarab_1_1HG_1_1BestHyp_1a33ebfb0c6fc093b02e8d2e33082fd8a9" kind="function"><name>get_hyp</name></member>
    <member refid="classScarab_1_1HG_1_1BestHyp_1afd75d0946faf6a48d113d815c1f86bce" kind="function"><name>get_score</name></member>
    <member refid="classScarab_1_1HG_1_1BestHyp_1a60998ae47c3087d809d0ab1be0d2c21a" kind="function"><name>get_score_by_id</name></member>
    <member refid="classScarab_1_1HG_1_1BestHyp_1ad68702666a75575acffd113f9038e92a" kind="function"><name>get_hyp_by_id</name></member>
    <member refid="classScarab_1_1HG_1_1BestHyp_1acdb194cd10fe47e64ac7c96de296cb4e" kind="function"><name>has_id</name></member>
    <member refid="classScarab_1_1HG_1_1BestHyp_1adb8421adc7af8cb8b4f5116599e807fd" kind="function"><name>join</name></member>
    <member refid="classScarab_1_1HG_1_1BestHyp_1ac9e2d1fc7e0d88865fa18d25877d63b8" kind="function"><name>join_back</name></member>
    <member refid="classScarab_1_1HG_1_1BestHyp_1ac079b15bdd5c65ede04d4e99eb683ff8" kind="function"><name>try_set_hyp</name></member>
  </compound>
  <compound refid="structBigram" kind="struct"><name>Bigram</name>
    <member refid="structBigram_1a27e17775db4f1239992f52ca5946c42b" kind="variable"><name>w1</name></member>
    <member refid="structBigram_1a0dfa6c244c9d3a4730c1338e94b1723b" kind="variable"><name>w2</name></member>
    <member refid="structBigram_1a020c686282bd0fb8d36bb1599c6b1a14" kind="function"><name>Bigram</name></member>
    <member refid="structBigram_1ace087c594c5f6848d963053d20f5e51e" kind="function"><name>Bigram</name></member>
  </compound>
  <compound refid="classBigramRescore" kind="class"><name>BigramRescore</name>
    <member refid="classBigramRescore_1a28dbb94694337f7242cdcc11c3f4991c" kind="variable"><name>current_weights</name></member>
    <member refid="classBigramRescore_1a744dbdec56457d73483d9bfcfc17d611" kind="variable"><name>update_position</name></member>
    <member refid="classBigramRescore_1aa83a3f7d332d91506504616e74b2fea3" kind="variable"><name>update_filter</name></member>
    <member refid="classBigramRescore_1a43f3e0de663790facaedf1bda6caea4b" kind="variable"><name>update_len</name></member>
    <member refid="classBigramRescore_1afa08f063330b0baa7670b36f91f17de3" kind="variable"><name>bigram_path</name></member>
    <member refid="classBigramRescore_1a02a749bfc729660c00179f7e7784c973" kind="variable"><name>best_split</name></member>
    <member refid="classBigramRescore_1a2e29fa7eae001bee8e7dd098bb976dcc" kind="variable"><name>bigram_weights</name></member>
    <member refid="classBigramRescore_1a0dde118f5790a6afd007e62754ebd4e6" kind="variable"><name>need_to_recompute</name></member>
    <member refid="classBigramRescore_1a466991eda63f64df056e15e2619f627e" kind="variable"><name>recomputed</name></member>
    <member refid="classBigramRescore_1a2402483d0d9768ca83d4ff64a4823032" kind="variable"><name>score_changed</name></member>
    <member refid="classBigramRescore_1a87df9ef1bcde242d9ac6c9e7ef753689" kind="variable"><name>forward_paths</name></member>
    <member refid="classBigramRescore_1ae2bc760e32b7cab4a5fd5ec0f0a5073e" kind="variable"><name>backward_paths</name></member>
    <member refid="classBigramRescore_1a9e315ecd42f963994d15ef08e20df79d" kind="variable"><name>gd</name></member>
    <member refid="classBigramRescore_1abe410aa73b326f5d06099926fcd93459" kind="variable"><name>graph</name></member>
    <member refid="classBigramRescore_1ac1fc6a3f7ac90cbf158e6bcd2f6518f8" kind="function"><name>BigramRescore</name></member>
    <member refid="classBigramRescore_1a2d3ec18a2decf6adbb92c2a044505041" kind="function"><name>update_weights</name></member>
    <member refid="classBigramRescore_1a25b5c1d281493c722ae1c0a02171d5ec" kind="function"><name>recompute_bigram_weights</name></member>
    <member refid="classBigramRescore_1a726d2e7088c39e26d924038e223e297c" kind="function"><name>get_bigram_path</name></member>
    <member refid="classBigramRescore_1a4ddc874583100444b08e97c44038f743" kind="function"><name>get_bigram_weight</name></member>
    <member refid="classBigramRescore_1a61ce65b0179222ed94c8fb0ee38b0906" kind="function"><name>reconstruct_path</name></member>
    <member refid="classBigramRescore_1a72701d7c6cfd54cf1300e0240d11b2c6" kind="function"><name>cache_paths</name></member>
    <member refid="classBigramRescore_1acc354ce6c7a48da5857f3ad766093701" kind="function"><name>cache_forward</name></member>
    <member refid="classBigramRescore_1a82f2cd4a6c0572473160175bc4351ebe" kind="function"><name>setup_problems</name></member>
    <member refid="classBigramRescore_1a8bde2161b64398be90982fc05e1372f3" kind="function"><name>find_shortest</name></member>
  </compound>
  <compound refid="classstd_1_1bitset" kind="class"><name>std::bitset</name>
  </compound>
  <compound refid="classBlankNonLocal" kind="class"><name>BlankNonLocal</name>
    <member refid="classBlankNonLocal_1a5ed5f82fd688ea1cd7fb52f40ea519e2" kind="function"><name>BlankNonLocal</name></member>
    <member refid="classBlankNonLocal_1ab48fb9f176d5b929aaa724e3f5b32a6a" kind="function"><name>compute</name></member>
    <member refid="classBlankNonLocal_1a61e2ac11c599d217cacfa5c54bd191b8" kind="function"><name>initialize</name></member>
  </compound>
  <compound refid="classCache" kind="class"><name>Cache</name>
    <member refid="classCache_1a4de9009630d4bdc7e78b9db7ea734411" kind="variable"><name>store</name></member>
    <member refid="classCache_1a30fcdd51d6ff0cd602cc23d4a12b5348" kind="variable"><name>has_value</name></member>
    <member refid="classCache_1ace98594381db6cd76b3228a73b18190a" kind="function"><name>Cache</name></member>
    <member refid="classCache_1ad0a38f45b45b59a772d1e1fd92e59973" kind="function"><name>size</name></member>
    <member refid="classCache_1a8d126a64723abe79878befff1c622145" kind="function"><name>get</name></member>
    <member refid="classCache_1a2616bfc563def72da44f91977552ca62" kind="function"><name>get_no_check</name></member>
    <member refid="classCache_1a9256aebb417928fbea6090f820d0652d" kind="function"><name>get</name></member>
    <member refid="classCache_1a509df0fde9598a4df9879b5ddb9d93d9" kind="function"><name>get_value</name></member>
    <member refid="classCache_1aeb9ab922add6cf79e2bef1b714f57e8a" kind="function"><name>set_value</name></member>
    <member refid="classCache_1a0864be6a32d0840a4c3009f9ae417902" kind="function"><name>has_key</name></member>
    <member refid="classCache_1a213273226c6bb403d33e10e2bc769fe1" kind="function"><name>has_key</name></member>
  </compound>
  <compound refid="structCandidate" kind="struct"><name>Candidate</name>
    <member refid="structCandidate_1a22db5a9c75fdebb31827505d6bc7d274" kind="variable"><name>hyp</name></member>
    <member refid="structCandidate_1acdb6d12cbf33f6e78b97fed5013a181b" kind="variable"><name>edge</name></member>
    <member refid="structCandidate_1afe2daf1c20513a5489d8407492ca7597" kind="variable"><name>vec</name></member>
    <member refid="structCandidate_1ac13c7ec637d37b63fc4d6bf3361fd449" kind="function"><name>Candidate</name></member>
    <member refid="structCandidate_1a5644a3a3d2d92498923ecc443bb4583c" kind="function"><name>operator&lt;</name></member>
  </compound>
  <compound refid="structcandidate__compare" kind="struct"><name>candidate_compare</name>
    <member refid="structcandidate__compare_1ad142d42876f8dd88301ee5f1b3aed03b" kind="function"><name>operator()</name></member>
  </compound>
  <compound refid="classClock" kind="class"><name>Clock</name>
    <member refid="classClock_1af45b8db844300755b8c4244a65f60833" kind="function"><name>diffclock</name></member>
  </compound>
  <compound refid="classstd_1_1complex" kind="class"><name>std::complex</name>
  </compound>
  <compound refid="classstd_1_1wstring_1_1const__iterator" kind="class"><name>std::wstring::const_iterator</name>
  </compound>
  <compound refid="classstd_1_1deque_1_1const__iterator" kind="class"><name>std::deque::const_iterator</name>
  </compound>
  <compound refid="classstd_1_1list_1_1const__iterator" kind="class"><name>std::list::const_iterator</name>
  </compound>
  <compound refid="classstd_1_1map_1_1const__iterator" kind="class"><name>std::map::const_iterator</name>
  </compound>
  <compound refid="classstd_1_1multimap_1_1const__iterator" kind="class"><name>std::multimap::const_iterator</name>
  </compound>
  <compound refid="classstd_1_1set_1_1const__iterator" kind="class"><name>std::set::const_iterator</name>
  </compound>
  <compound refid="classstd_1_1multiset_1_1const__iterator" kind="class"><name>std::multiset::const_iterator</name>
  </compound>
  <compound refid="classstd_1_1vector_1_1const__iterator" kind="class"><name>std::vector::const_iterator</name>
  </compound>
  <compound refid="classstd_1_1basic__string_1_1const__iterator" kind="class"><name>std::basic_string::const_iterator</name>
  </compound>
  <compound refid="classstd_1_1string_1_1const__iterator" kind="class"><name>std::string::const_iterator</name>
  </compound>
  <compound refid="classstd_1_1wstring_1_1const__reverse__iterator" kind="class"><name>std::wstring::const_reverse_iterator</name>
  </compound>
  <compound refid="classstd_1_1list_1_1const__reverse__iterator" kind="class"><name>std::list::const_reverse_iterator</name>
  </compound>
  <compound refid="classstd_1_1map_1_1const__reverse__iterator" kind="class"><name>std::map::const_reverse_iterator</name>
  </compound>
  <compound refid="classstd_1_1multimap_1_1const__reverse__iterator" kind="class"><name>std::multimap::const_reverse_iterator</name>
  </compound>
  <compound refid="classstd_1_1set_1_1const__reverse__iterator" kind="class"><name>std::set::const_reverse_iterator</name>
  </compound>
  <compound refid="classstd_1_1multiset_1_1const__reverse__iterator" kind="class"><name>std::multiset::const_reverse_iterator</name>
  </compound>
  <compound refid="classstd_1_1vector_1_1const__reverse__iterator" kind="class"><name>std::vector::const_reverse_iterator</name>
  </compound>
  <compound refid="classstd_1_1deque_1_1const__reverse__iterator" kind="class"><name>std::deque::const_reverse_iterator</name>
  </compound>
  <compound refid="classstd_1_1basic__string_1_1const__reverse__iterator" kind="class"><name>std::basic_string::const_reverse_iterator</name>
  </compound>
  <compound refid="classstd_1_1string_1_1const__reverse__iterator" kind="class"><name>std::string::const_reverse_iterator</name>
  </compound>
  <compound refid="classConstrainerDual" kind="class"><name>ConstrainerDual</name>
    <member refid="classConstrainerDual_1abda18ff85d425d3748f49709534ec9ea" kind="variable"><name>_tag_constraints</name></member>
    <member refid="classConstrainerDual_1a4dd6e580712c0b35da77e42e137c7274" kind="variable"><name>_cur_weights</name></member>
    <member refid="classConstrainerDual_1ae74adbb392415eec3451dd5a20820b6b" kind="function"><name>ConstrainerDual</name></member>
    <member refid="classConstrainerDual_1a8cd72c1288fc93a0fec014095ac7252b" kind="function"><name>solve</name></member>
    <member refid="classConstrainerDual_1a622b99f704a3324133f08521eb4924f5" kind="function"><name>update_weights</name></member>
  </compound>
  <compound refid="classConstraintGroup" kind="class"><name>ConstraintGroup</name>
    <member refid="classConstraintGroup_1ac96c45d3b2c4c1a6e1068837bc024d9c" kind="variable"><name>group</name></member>
    <member refid="classConstraintGroup_1a4f37823a56e405c16148c0ba6ae7f114" kind="function"><name>solve_hard</name></member>
  </compound>
  <compound refid="classScarab_1_1HG_1_1Controller" kind="class"><name>Scarab::HG::Controller</name>
    <member refid="classScarab_1_1HG_1_1Controller_1a34cfe4b8e7496ffca1cedf64cb3f0a73" kind="function"><name>combine</name></member>
    <member refid="classScarab_1_1HG_1_1Controller_1a4b596f04765ad11b691e29383f5fbc3b" kind="function"><name>combine_back</name></member>
    <member refid="classScarab_1_1HG_1_1Controller_1a5019e9591e6d4e5e29eb4ca6ac42d056" kind="function"><name>initialize_hypotheses</name></member>
    <member refid="classScarab_1_1HG_1_1Controller_1a34e4f087d77d06ee27fff2d3a8435473" kind="function"><name>initialize_out_root</name></member>
    <member refid="classScarab_1_1HG_1_1Controller_1ac4a38bf968379d3dc3f2b95cffabf540" kind="function"><name>find_best</name></member>
    <member refid="classScarab_1_1HG_1_1Controller_1a3498a09d093e6c6ed993e309db51480a" kind="function"><name>size</name></member>
    <member refid="classScarab_1_1HG_1_1Controller_1ab4282178c6b8d3670134ab0519eda518" kind="function"><name>dim</name></member>
  </compound>
  <compound refid="classCubePruning" kind="class"><name>CubePruning</name>
    <member refid="classCubePruning_1a7c031b1742e446a1db7e28a41f5d66df" kind="variable"><name>_forest</name></member>
    <member refid="classCubePruning_1ac0962dfa9a109dd8822b1a980e09c58a" kind="variable"><name>_weights</name></member>
    <member refid="classCubePruning_1abef892f4e09b46377f16525995508a72" kind="variable"><name>_non_local</name></member>
    <member refid="classCubePruning_1a6158216cbc0dbb94b284a3e146c835b5" kind="variable"><name>_k</name></member>
    <member refid="classCubePruning_1a13103f0ed1cb53e0f4b976f43a4ce57d" kind="variable"><name>_ratio</name></member>
    <member refid="classCubePruning_1a8782ee2405c6fce6c669353ec0a7954b" kind="variable"><name>_hypothesis_cache</name></member>
    <member refid="classCubePruning_1ab33f8ead8b29cb92a0a6c6dd52cdafe3" kind="variable"><name>_oldvec</name></member>
    <member refid="classCubePruning_1af17d9dda17f79a2c44b47501b9d99870" kind="function"><name>CubePruning</name></member>
    <member refid="classCubePruning_1a0e8d07fc09d695095be5b70780db95d6" kind="function"><name>get_derivation</name></member>
    <member refid="classCubePruning_1adf80c0c689d075765f250649433833e4" kind="function"><name>parse</name></member>
    <member refid="classCubePruning_1ab949710c0d8e552cbadbe837b1b62d47" kind="function"><name>run</name></member>
    <member refid="classCubePruning_1a14a4e797c638d07744dc328cf2ce568e" kind="function"><name>init_cube</name></member>
    <member refid="classCubePruning_1abe8c53bd14fe4ad98ff6388f38a849cb" kind="function"><name>kbest</name></member>
    <member refid="classCubePruning_1a5d3ab59862953b9000154e9c07c69634" kind="function"><name>next</name></member>
    <member refid="classCubePruning_1aa7d26357be4241b594f9eb24ac52da22" kind="function"><name>gethyp</name></member>
  </compound>
  <compound refid="classDecode" kind="class"><name>Decode</name>
    <member refid="classDecode_1a7309573ff383c7a4f3e38e84b8ff883b" kind="variable"><name>_subproblem</name></member>
    <member refid="classDecode_1a6119c9cbc0e650fe340a9412e8f63983" kind="variable"><name>_forest</name></member>
    <member refid="classDecode_1a05b24d98820a212580d80cf7dae65deb" kind="variable"><name>_lattice</name></member>
    <member refid="classDecode_1a6276e1c9f68c49b698b405a894a1910b" kind="variable"><name>_weight</name></member>
    <member refid="classDecode_1a0491a78a0d2cb8f14526f275de89c38e" kind="variable"><name>_lagrange_weights</name></member>
    <member refid="classDecode_1adf787bcbcf522da65ff4d1c009eb3da2" kind="variable"><name>_lm</name></member>
    <member refid="classDecode_1a486c2aa683af4e51bece37d07bebd17e" kind="variable"><name>_gd</name></member>
    <member refid="classDecode_1a90b47b6cc57b63ac14e828b3962c7352" kind="variable"><name>_cached_weights</name></member>
    <member refid="classDecode_1a65cd6a259bc924d8adb8c087009d0e40" kind="variable"><name>_cached_words</name></member>
    <member refid="classDecode_1a6ff22b34a04df90a0912a877264da674" kind="variable"><name>_projection</name></member>
    <member refid="classDecode_1a4d092aa5b1f9bbe420e198bd85640c68" kind="variable"><name>_proj_dim</name></member>
    <member refid="classDecode_1aa3b5dce8fdc2e7dfcf185edf6c4879bf" kind="variable"><name>lm_total</name></member>
    <member refid="classDecode_1a729f774a479323ee73a67906ebc4c202" kind="variable"><name>o_total</name></member>
    <member refid="classDecode_1a0f0ec6371be425e512f08a5b11ad5a17" kind="variable"><name>lag_total</name></member>
    <member refid="classDecode_1ad3163d84210926b84bd5008469e935a7" kind="variable"><name>_constraints</name></member>
    <member refid="classDecode_1acec5f8dc7046633f1733153af259e224" kind="variable"><name>_maintain_constraints</name></member>
    <member refid="classDecode_1a3b7e3a724342fe922e4d333292bde4a1" kind="variable"><name>_is_stuck_round</name></member>
    <member refid="classDecode_1a57bd53ddaf49e2fe4b86a7aad782110f" kind="function"><name>Decode</name></member>
    <member refid="classDecode_1a44f43126a6daa82c3a701625025877da" kind="function"><name>~Decode</name></member>
    <member refid="classDecode_1a6d86f91ee2c591c54ce2bb97c1dd6888" kind="function"><name>solve</name></member>
    <member refid="classDecode_1a9beca60221318f111b7f4d5acca8e329" kind="function"><name>update_weights</name></member>
    <member refid="classDecode_1a8f632992517beb5f95c1ed6096507a9d" kind="function"><name>debug</name></member>
    <member refid="classDecode_1a1adedd4e04bb25a2696567218640260c" kind="function"><name>greedy_projection</name></member>
    <member refid="classDecode_1abcc15af5f67c483ff32fe6dff7bb41a2" kind="function"><name>add_subgrad</name></member>
    <member refid="classDecode_1ab68ea75c3b7a96d488bbda5017b447f4" kind="function"><name>compute_primal</name></member>
    <member refid="classDecode_1a029fb5b3c6d38453572ad9a50110953c" kind="function"><name>lookup_string</name></member>
    <member refid="classDecode_1aa22ac7d6caa50d70c54801a6eacb0451" kind="function"><name>get_lat_edges</name></member>
    <member refid="classDecode_1a1084f9c2ff1eac08c6b1ed284ab5a57a" kind="function"><name>get_lex_lat_edges</name></member>
    <member refid="classDecode_1ac52e73ad021707c4d7abaeb437610492" kind="function"><name>sync_lattice_lm</name></member>
    <member refid="classDecode_1a9ab8ce9976610b8c50cc720c51eeeaec" kind="function"><name>print_output</name></member>
  </compound>
  <compound refid="structDependency" kind="struct"><name>Dependency</name>
    <member refid="structDependency_1ae50c91ea1c7f2a16a29e7ecf9cf0a6ba" kind="variable"><name>head</name></member>
    <member refid="structDependency_1a45e806cfc00a3bcce4d5ebaab52c1f77" kind="variable"><name>mod</name></member>
    <member refid="structDependency_1a95f049533781d9ae8fea8f447e4739fe" kind="variable"><name>length</name></member>
    <member refid="structDependency_1aa4df470ed18ee14e01722d7a54a8d96f" kind="variable"><name>_id</name></member>
    <member refid="structDependency_1aa92957076c5000d1d3a56073302f1a41" kind="function"><name>Dependency</name></member>
    <member refid="structDependency_1a92ebdf715c4c81e556bc274f86027400" kind="function"><name>Dependency</name></member>
    <member refid="structDependency_1a38ba361a116c72f4e41298b6320a6540" kind="function"><name>id</name></member>
  </compound>
  <compound refid="classDepParser" kind="class"><name>DepParser</name>
    <member refid="classDepParser_1a3c0028d72917281cd781f9971827a725" kind="variable"><name>_sent_length</name></member>
    <member refid="classDepParser_1a3ccda4c663c02fea6725f4ffd6dc74ce" kind="variable"><name>_dep_length</name></member>
    <member refid="classDepParser_1ab0cdf62ac8ce3d63d5a9531f01919fe2" kind="variable"><name>_h</name></member>
    <member refid="classDepParser_1a9e85dc266c9195f811014f7e481d4a50" kind="variable"><name>_edge_map</name></member>
    <member refid="classDepParser_1ac666427659ff3ebce502bddd4e616fa5" kind="variable"><name>_dep_map</name></member>
    <member refid="classDepParser_1abbd1d2882e4242f04954bdfebd311c8b" kind="variable"><name>_dependencies</name></member>
    <member refid="classDepParser_1a6d9e6718690678f1d0e82fe93723a4dd" kind="function"><name>~DepParser</name></member>
    <member refid="classDepParser_1a9aebbbde821bad423b6c01cc12f02a2c" kind="function"><name>print</name></member>
    <member refid="classDepParser_1a6131e95a8ec7b07f7a4d68dae224d52f" kind="function"><name>set_up</name></member>
    <member refid="classDepParser_1aaec31758432c2d3336d2164996571688" kind="function"><name>hypergraph</name></member>
    <member refid="classDepParser_1aa64f67830bf4c3bf9936ba6056dfdff0" kind="function"><name>dependencies</name></member>
    <member refid="classDepParser_1aaff55cf38fd9b1fbfb22090ddeb72ba8" kind="function"><name>num_deps</name></member>
    <member refid="classDepParser_1a86b99d09d76b7d6f8733b208e9f32822" kind="function"><name>sent_length</name></member>
    <member refid="classDepParser_1a49afcb1a83a3c924869faf34cd9e968e" kind="function"><name>make_dep</name></member>
    <member refid="classDepParser_1a9fa2f0bf24cd870404f0a99b5926c558" kind="function"><name>dep_to_edge</name></member>
    <member refid="classDepParser_1aa5ff87f99326c60633fb8e26d1737776" kind="function"><name>edge_to_dep</name></member>
    <member refid="classDepParser_1abd0b9171e59c1c40cdb58807a46a5449" kind="function"><name>edge_has_dep</name></member>
    <member refid="classDepParser_1a04d313d931d1e8b0bac3a36ca7be469b" kind="function"><name>make_edge</name></member>
  </compound>
  <compound refid="structScarab_1_1HG_1_1DepParserLP" kind="struct"><name>Scarab::HG::DepParserLP</name>
    <member refid="structScarab_1_1HG_1_1DepParserLP_1af31e9d91e3407559cd2588bfef2296e3" kind="variable"><name>dep_vars</name></member>
    <member refid="structScarab_1_1HG_1_1DepParserLP_1a93d0f269dabdd6fe83c68ee51baafb62" kind="variable"><name>p</name></member>
    <member refid="structScarab_1_1HG_1_1DepParserLP_1acab7463a0d1349c5a1250ac0653c0569" kind="variable"><name>h_lp</name></member>
    <member refid="structScarab_1_1HG_1_1DepParserLP_1aaec1248e50de35594c4a20e89a782e95" kind="function"><name>DepParserLP</name></member>
  </compound>
  <compound refid="classScarab_1_1HG_1_1DepParserLPBuilder" kind="class"><name>Scarab::HG::DepParserLPBuilder</name>
    <member refid="classScarab_1_1HG_1_1DepParserLPBuilder_1a8864b215a93fa51c4df30669dacb0ddc" kind="function"><name>show_results</name></member>
    <member refid="classScarab_1_1HG_1_1DepParserLPBuilder_1a862127f9347f244103941a119747b810" kind="function"><name>add_parse</name></member>
  </compound>
  <compound refid="classstd_1_1deque" kind="class"><name>std::deque</name>
    <member refid="classstd_1_1deque_1a090b92581de438d2e14bedc190f0b0f9" kind="variable"><name>elements</name></member>
  </compound>
  <compound refid="classstd_1_1domain__error" kind="class"><name>std::domain_error</name>
  </compound>
  <compound refid="classDualDecomposition" kind="class"><name>DualDecomposition</name>
    <member refid="classDualDecomposition_1ad4d8c2d0dc2548585f24a359e12b2de6" kind="variable"><name>_runner</name></member>
    <member refid="classDualDecomposition_1ac56b116e08ea70881c4a27f2690fa8fa" kind="variable"><name>_subgradsolver</name></member>
    <member refid="classDualDecomposition_1a652c2229bad83ce7b135aa06ef1283a5" kind="function"><name>DualDecomposition</name></member>
    <member refid="classDualDecomposition_1a0013544261cba254dc2ca2c68cbb1679" kind="function"><name>solve</name></member>
  </compound>
  <compound refid="classDualDecompositionRunner" kind="class"><name>DualDecompositionRunner</name>
    <member refid="classDualDecompositionRunner_1a13371fbf1e5109e8a9d920d2ed0b7bea" kind="variable"><name>_sub_producer1</name></member>
    <member refid="classDualDecompositionRunner_1a988b68df84c131bc47d142ae8638fbd1" kind="variable"><name>_sub_producer2</name></member>
    <member refid="classDualDecompositionRunner_1ad0af4c8b1a73612770d329cf560af9d1" kind="function"><name>DualDecompositionRunner</name></member>
    <member refid="classDualDecompositionRunner_1a4bcec895359acf32000d42155c4593ef" kind="function"><name>solve</name></member>
    <member refid="classDualDecompositionRunner_1a3cdf7ce33f6454f9fee9fb9c3287c5ac" kind="function"><name>update_weights</name></member>
  </compound>
  <compound refid="classDualDecompositionSubproblem" kind="class"><name>DualDecompositionSubproblem</name>
    <member refid="classDualDecompositionSubproblem_1aac234786c13091898be348dc0056a036" kind="function"><name>solve</name></member>
    <member refid="classDualDecompositionSubproblem_1a6d26fcb23023d5b03d54b3d191531b02" kind="function"><name>update_weights</name></member>
  </compound>
  <compound refid="structEisnerNode" kind="struct"><name>EisnerNode</name>
    <member refid="structEisnerNode_1a1e3b0f200089af99ca744d6d0a9c7f72" kind="variable"><name>node_span</name></member>
    <member refid="structEisnerNode_1a0013abe4607fb7979aa1d915a58868a1" kind="variable"><name>d</name></member>
    <member refid="structEisnerNode_1a682edd0712304525c84939b820a141d3" kind="variable"><name>s</name></member>
    <member refid="structEisnerNode_1a38fe91d99e35e7d8a6bda3c1bb45f3d6" kind="function"><name>name</name></member>
    <member refid="structEisnerNode_1a16b4c3b130c5cacf4639fb8fc01d1894" kind="function"><name>EisnerNode</name></member>
    <member refid="structEisnerNode_1a8ede91dac02b136ef673afbb68566623" kind="function"><name>operator&lt;</name></member>
  </compound>
  <compound refid="classEisnerToHypergraph" kind="class"><name>EisnerToHypergraph</name>
    <member refid="classEisnerToHypergraph_1a47df02a8804876cc0e33b55681b9a2f0" kind="variable"><name>hgraph</name></member>
    <member refid="classEisnerToHypergraph_1ad3ac4ca0b277243cb73c54e04f044e09" kind="variable"><name>_sent</name></member>
    <member refid="classEisnerToHypergraph_1a6aa371ceefe14e428a73164af65c969a" kind="variable"><name>_weights</name></member>
    <member refid="classEisnerToHypergraph_1a80d5cfb65d2d19d487066f2766c8e9b8" kind="variable"><name>_id</name></member>
    <member refid="classEisnerToHypergraph_1a4880899e2f0489ae9ae95f944700fc59" kind="variable"><name>_edge_id</name></member>
    <member refid="classEisnerToHypergraph_1ac171522977e036ad5d1f0f5b5c6265af" kind="variable"><name>_node_to_id</name></member>
    <member refid="classEisnerToHypergraph_1a2aa057dabf5c8cf05fd33339aa1f0af9" kind="variable"><name>_id_to_proto</name></member>
    <member refid="classEisnerToHypergraph_1a50fea768d93c1618ace2323bf0966f7a" kind="variable"><name>hyperedges</name></member>
    <member refid="classEisnerToHypergraph_1ac4c11a966298244ad74965dd35596c4c" kind="function"><name>EisnerToHypergraph</name></member>
    <member refid="classEisnerToHypergraph_1a8344d534c1b3d5f2795578c771fe4d31" kind="function"><name>convert</name></member>
    <member refid="classEisnerToHypergraph_1a5bb3adf09f0de42bca25e33d6292997b" kind="function"><name>length</name></member>
    <member refid="classEisnerToHypergraph_1a7dbc885a4bbe2088e25eaaf35d20912d" kind="function"><name>finalize_node</name></member>
    <member refid="classEisnerToHypergraph_1a5006966b5a8426d1fbce00d525359067" kind="function"><name>finalize_root</name></member>
    <member refid="classEisnerToHypergraph_1a4ff2050caf0f128e717ed00616cbb9ee" kind="function"><name>finalize_edge</name></member>
    <member refid="classEisnerToHypergraph_1a685c967ee7ff398fff635f52dc806421" kind="function"><name>get_weight</name></member>
  </compound>
  <compound refid="classstd_1_1exception" kind="class"><name>std::exception</name>
  </compound>
  <compound refid="classScarab_1_1HG_1_1ExtendCKY" kind="class"><name>Scarab::HG::ExtendCKY</name>
    <member refid="classScarab_1_1HG_1_1ExtendCKY_1a2ff5908e9f2a60b65d8044908c1c7cf2" kind="variable"><name>_forest</name></member>
    <member refid="classScarab_1_1HG_1_1ExtendCKY_1ac680e144a4a996b56cec09c10acdae20" kind="variable"><name>_total_best</name></member>
    <member refid="classScarab_1_1HG_1_1ExtendCKY_1ad2b3d6add9846c204cfc77cc423d0289" kind="variable"><name>_edge_weights</name></member>
    <member refid="classScarab_1_1HG_1_1ExtendCKY_1a149648cffc750914f342e9dd3bc184a7" kind="variable"><name>_old_edge_weights</name></member>
    <member refid="classScarab_1_1HG_1_1ExtendCKY_1a8d98e455a9215aa8cbb9cc87a5960fbb" kind="variable"><name>_controller</name></member>
    <member refid="classScarab_1_1HG_1_1ExtendCKY_1ac2192872281b15454a848abd30e62f57" kind="variable"><name>_memo_table</name></member>
    <member refid="classScarab_1_1HG_1_1ExtendCKY_1a98454ef845cd6d97d28c09672e5b80a2" kind="variable"><name>_memo_edge_table</name></member>
    <member refid="classScarab_1_1HG_1_1ExtendCKY_1a2362d43a59393c8f1dd7c6d4089c1fc3" kind="variable"><name>_memo_edge_back_table</name></member>
    <member refid="classScarab_1_1HG_1_1ExtendCKY_1a79ce737ac02a5347e085e027b9789f41" kind="variable"><name>_out_queue</name></member>
    <member refid="classScarab_1_1HG_1_1ExtendCKY_1a7a4146a0407aade5141ee7c8a6f43942" kind="variable"><name>_out_done</name></member>
    <member refid="classScarab_1_1HG_1_1ExtendCKY_1a009bc6fa80f918b1c86c66dcdb2af7b1" kind="variable"><name>_to_delete</name></member>
    <member refid="classScarab_1_1HG_1_1ExtendCKY_1a0a2faf1971677c5c352183166a567cff" kind="variable"><name>_is_first</name></member>
    <member refid="classScarab_1_1HG_1_1ExtendCKY_1a008898035d6c06258e25a502fbfd7377" kind="variable"><name>_outside_memo_table</name></member>
    <member refid="classScarab_1_1HG_1_1ExtendCKY_1a554aa074d56b38acb561fda8584b9b8a" kind="variable"><name>_outside_edge_memo_table</name></member>
    <member refid="classScarab_1_1HG_1_1ExtendCKY_1a393c61229e019cb875ba6b7b6b176aff" kind="function"><name>ExtendCKY</name></member>
    <member refid="classScarab_1_1HG_1_1ExtendCKY_1ae72fa6e6e0bb69464c575bd5225b1423" kind="function"><name>best_path</name></member>
    <member refid="classScarab_1_1HG_1_1ExtendCKY_1a038f64197127bc278e6a25c4565c72bd" kind="function"><name>outside</name></member>
    <member refid="classScarab_1_1HG_1_1ExtendCKY_1ab6e38ad73c293463711d8ddb9e2788cc" kind="function"><name>forward_edge</name></member>
    <member refid="classScarab_1_1HG_1_1ExtendCKY_1ad9f636162e49f7d2d1a551e62595a4c5" kind="function"><name>backward_edge</name></member>
    <member refid="classScarab_1_1HG_1_1ExtendCKY_1adec74b07c5d23e0d0e0025186068e207" kind="function"><name>node_best_path</name></member>
    <member refid="classScarab_1_1HG_1_1ExtendCKY_1a8edfaa9828290e922e7bc850a63c65d7" kind="function"><name>node_best_out_path</name></member>
    <member refid="classScarab_1_1HG_1_1ExtendCKY_1a64fc9fe57e9f894367c306a9f7370210" kind="function"><name>node_best_out_fast</name></member>
  </compound>
  <compound refid="classstd_1_1ios__base_1_1failure" kind="class"><name>std::ios_base::failure</name>
  </compound>
  <compound refid="classForest" kind="class"><name>Forest</name>
    <member refid="classForest_1a8eeca9daa4cabf76e8367b57fc7c1842" kind="function"><name>~Forest</name></member>
    <member refid="classForest_1a621a1a65d0f877bb33b15c79f9e24c4d" kind="function"><name>print</name></member>
    <member refid="classForest_1a4cc0cf94c18913eadd0b36f3dcf68cef" kind="function"><name>append_end_nodes</name></member>
    <member refid="classForest_1a1b9ddc0e03c1ccfcc73987fe9378fa84" kind="function"><name>from_file</name></member>
    <member refid="classForest_1ab40070ea9e3885d252fb7848c11f27ef" kind="function"><name>make_node</name></member>
  </compound>
  <compound refid="classForestLattice" kind="class"><name>ForestLattice</name>
    <member refid="classForestLattice_1a3c194341d2a88457604e0042534358fc" kind="variable"><name>num_nodes</name></member>
    <member refid="classForestLattice_1af7ac8b02750f52523a49b5b810e36601" kind="variable"><name>num_word_nodes</name></member>
    <member refid="classForestLattice_1ab0e2ec92e11ab7d77e33c109f2451d7d" kind="variable"><name>final</name></member>
    <member refid="classForestLattice_1a95785401e57ddbcc516116f59391a7cd" kind="variable"><name>start</name></member>
    <member refid="classForestLattice_1a2a0ccc16eaa3f83ae395c825c8bcf583" kind="variable"><name>original_edges</name></member>
    <member refid="classForestLattice_1af55e45f3503fafeb79ef53d25abfc78b" kind="variable"><name>edges_original</name></member>
    <member refid="classForestLattice_1ac38a1f457fae9f29fab0b922dd8b5b81" kind="variable"><name>bigrams_at_node</name></member>
    <member refid="classForestLattice_1a80b60a05f3f81f4291b1989baf240cf8" kind="variable"><name>_edge_label_by_nodes</name></member>
    <member refid="classForestLattice_1a3ddc7aaaa5a19287476cd2f16da244dc" kind="variable"><name>_proper_graph</name></member>
    <member refid="classForestLattice_1a3cfeb97f95e8ade9ba797d47395774c5" kind="variable"><name>word_node</name></member>
    <member refid="classForestLattice_1a98716f121b996283b696507d70739d10" kind="variable"><name>node_edges</name></member>
    <member refid="classForestLattice_1ab053bac22f4786ab9b51b078f6517c23" kind="variable"><name>_words</name></member>
    <member refid="classForestLattice_1a0d93c5fe5e267b9bf93845e2b9f40dad" kind="variable"><name>_is_word</name></member>
    <member refid="classForestLattice_1aefd360c9d562d321b77a473044c03651" kind="variable"><name>_words_lookup</name></member>
    <member refid="classForestLattice_1ad4cd9e803f63de8ff6314b809096436c" kind="variable"><name>graph</name></member>
    <member refid="classForestLattice_1a885f3d2c7a5040022e92795fd8681051" kind="variable"><name>_edge_by_nodes</name></member>
    <member refid="classForestLattice_1ab517764d45352cc1667d9eadf7cd411d" kind="variable"><name>_first_words</name></member>
    <member refid="classForestLattice_1adf857c9b4dc930da64a0a832cec66366" kind="variable"><name>_last_words</name></member>
    <member refid="classForestLattice_1a4a76b017a25479fec90611c445e91bf5" kind="variable"><name>_last_bigrams</name></member>
    <member refid="classForestLattice_1a8fdd0c1e5b188140e9fd3d07e7b21443" kind="variable"><name>_last_same</name></member>
    <member refid="classForestLattice_1a82c1ae83f29774968bcc7f9fdf5207a8" kind="variable"><name>edge_node</name></member>
    <member refid="classForestLattice_1afc023ff4666f929f698aaac521711df2" kind="variable"><name>ignore_nodes</name></member>
    <member refid="classForestLattice_1a032bb31ac2c963bbb8535eedb0a93a1a" kind="variable"><name>_original_id_to_edge</name></member>
    <member refid="classForestLattice_1a73a47f67c1d70046601d8a0d10b6de19" kind="variable"><name>_lat_word_to_hyp_node</name></member>
    <member refid="classForestLattice_1a1c0cfdc7b74623edcadf6cbd728c3068" kind="variable"><name>_hyp_node_to_lat_word</name></member>
    <member refid="classForestLattice_1ad14bc799ac36b716c292f410e1609462" kind="function"><name>get_word</name></member>
    <member refid="classForestLattice_1a8303ce943210d4a62132f1e4054b7191" kind="function"><name>get_graph</name></member>
    <member refid="classForestLattice_1a744558d8489b4428c44275f0966d587e" kind="function"><name>node</name></member>
    <member refid="classForestLattice_1a8afba92a7fb437a93db30b2336ad3824" kind="function"><name>is_phrase_node</name></member>
    <member refid="classForestLattice_1a9d82493dff97186334923b582999f63c" kind="function"><name>is_word</name></member>
    <member refid="classForestLattice_1a9ecaabd3e59148b28b3fad096806f9e9" kind="function"><name>ForestLattice</name></member>
    <member refid="classForestLattice_1a981af70e7207ece0e3454251b64fb6fa" kind="function"><name>get_edge</name></member>
    <member refid="classForestLattice_1a142184cf6e8d4275923774edbca97f5d" kind="function"><name>num_edges</name></member>
    <member refid="classForestLattice_1a3921d0378a94ef040246dc87e60df1c7" kind="function"><name>lookup_word</name></member>
    <member refid="classForestLattice_1a92e37fd15cd36ae5c9d0e3fe309d876e" kind="function"><name>get_edge_label</name></member>
    <member refid="classForestLattice_1a2474198bedc98ef2e3c8a02ebae14f00" kind="function"><name>get_nodes_by_labels</name></member>
    <member refid="classForestLattice_1a6fe3508e7fd7d62b44c423dcc113881b" kind="function"><name>num_first_words</name></member>
    <member refid="classForestLattice_1ae6c29306adee71cca87bb2dc2c1047df" kind="function"><name>num_last_words</name></member>
    <member refid="classForestLattice_1a7fcb5b75caf3d4e17b782849fc847ec9" kind="function"><name>num_last_bigrams</name></member>
    <member refid="classForestLattice_1a3b8e0f2d304ad0d9b10d9efb79d7905c" kind="function"><name>first_words</name></member>
    <member refid="classForestLattice_1a9af5d9ea84e0638599d13c5f78868d92" kind="function"><name>last_words</name></member>
    <member refid="classForestLattice_1a3332ad66005be68e6ac38d7daa40bb9d" kind="function"><name>last_bigrams</name></member>
    <member refid="classForestLattice_1a4da765944fa6d5892786ca592ef8c859" kind="function"><name>get_same</name></member>
    <member refid="classForestLattice_1a01fa72075f1de8421dd21e15540ce5c0" kind="function"><name>get_hypergraph_node_from_word</name></member>
    <member refid="classForestLattice_1a226887bedd13a3f3dc5cbe91242bd17a" kind="function"><name>get_word_from_hypergraph_node</name></member>
    <member refid="classForestLattice_1a8f474062475f4d272a8d8b676cdd0118" kind="function"><name>make_proper_graph</name></member>
  </compound>
  <compound refid="classForestNode" kind="class"><name>ForestNode</name>
    <member refid="classForestNode_1a0b79c0678d7555fdd0ccb7945f154dde" kind="variable"><name>_word</name></member>
    <member refid="classForestNode_1ae2cc9551c0625ab16b633157905b60b3" kind="variable"><name>_is_word</name></member>
    <member refid="classForestNode_1aeeb649eef15a82d283ae728b0a44d183" kind="function"><name>ForestNode</name></member>
    <member refid="classForestNode_1ab44af8003df7af0ce93b9b904301fb92" kind="function"><name>is_word</name></member>
    <member refid="classForestNode_1a18c00f9aae93bc963358e488f2cce308" kind="function"><name>word</name></member>
  </compound>
  <compound refid="classstd_1_1fstream" kind="class"><name>std::fstream</name>
  </compound>
  <compound refid="classScarab_1_1Graph_1_1Graph" kind="class"><name>Scarab::Graph::Graph</name>
    <member refid="classScarab_1_1Graph_1_1Graph_1a3aa39ece129605e2c7154b538efaf67e" kind="variable"><name>_nodes</name></member>
    <member refid="classScarab_1_1Graph_1_1Graph_1a44e776d5e69a7c0051ea5b23549b3175" kind="variable"><name>_edges</name></member>
    <member refid="classScarab_1_1Graph_1_1Graph_1ac753f9750341458516e06fb1437a1258" kind="function"><name>Graph</name></member>
    <member refid="classScarab_1_1Graph_1_1Graph_1afdfbdd8e5427a646707ceb22ca15d2e2" kind="function"><name>num_edges</name></member>
    <member refid="classScarab_1_1Graph_1_1Graph_1ac35877b52ec1f625ff452a4073026b26" kind="function"><name>num_nodes</name></member>
    <member refid="classScarab_1_1Graph_1_1Graph_1a8d0c6189ef1569626348a30e908870e4" kind="function"><name>nodes</name></member>
    <member refid="classScarab_1_1Graph_1_1Graph_1a19a63be838e64b57e46cba029e273162" kind="function"><name>edges</name></member>
    <member refid="classScarab_1_1Graph_1_1Graph_1af226b4907b00e178a8f7bd6e972e42d2" kind="function"><name>node</name></member>
  </compound>
  <compound refid="classGraphDecompose" kind="class"><name>GraphDecompose</name>
    <member refid="classGraphDecompose_1afbeb52935da971f4bc27f0e80ed48d33" kind="variable"><name>valid_bigrams</name></member>
    <member refid="classGraphDecompose_1aca254d25cf0f2d2ad0d58a5775a297a8" kind="variable"><name>forward_bigrams</name></member>
    <member refid="classGraphDecompose_1a2b5c495d7725ccd63c0c3d2590ebd1e1" kind="variable"><name>backward_bigrams</name></member>
    <member refid="classGraphDecompose_1a995544f00db3f554d00a01aa0dad2fd4" kind="variable"><name>all_pairs_path</name></member>
    <member refid="classGraphDecompose_1ab796844444689e795b83256f84eae00d" kind="variable"><name>all_pairs_path_exist</name></member>
    <member refid="classGraphDecompose_1a1b816922d0f47a646c40b2092dc50af1" kind="variable"><name>bigram_paths</name></member>
    <member refid="classGraphDecompose_1a73e8b0e3aa23fff46df75640ec1633d1" kind="variable"><name>g</name></member>
    <member refid="classGraphDecompose_1a79d486e583e40b058f642d1d60f6c800" kind="function"><name>GraphDecompose</name></member>
    <member refid="classGraphDecompose_1a671b195e2a0eff48eeefcee64d40fcb1" kind="function"><name>decompose</name></member>
    <member refid="classGraphDecompose_1a8e85b51d78e6bd961bbff6d121399ba7" kind="function"><name>path_exists</name></member>
    <member refid="classGraphDecompose_1a48e47d62512330c280ed8a89bafe3e10" kind="function"><name>get_path</name></member>
    <member refid="classGraphDecompose_1ac81de8323e0772507b700fa434674710" kind="function"><name>compute_bigrams</name></member>
    <member refid="classGraphDecompose_1a5a0a6da18e3045631d3bc51441c2fba6" kind="function"><name>graph_to_all_pairs</name></member>
    <member refid="classGraphDecompose_1a18df0d9bb4f322244c1f31e43ed2f951" kind="function"><name>reconstruct_path</name></member>
  </compound>
  <compound refid="classScarab_1_1Graph_1_1Graphedge" kind="class"><name>Scarab::Graph::Graphedge</name>
    <member refid="classScarab_1_1Graph_1_1Graphedge_1a2daff9c4ef37eef488b66ace0fe55fe6" kind="variable"><name>_id</name></member>
    <member refid="classScarab_1_1Graph_1_1Graphedge_1adcfadad4a86587f0c1713fd5488385dc" kind="variable"><name>_from_node</name></member>
    <member refid="classScarab_1_1Graph_1_1Graphedge_1a17c4bbcf008273845c990be303f7a0eb" kind="variable"><name>_to_node</name></member>
    <member refid="classScarab_1_1Graph_1_1Graphedge_1aea165d2e0b46a46180f5e684df52abdf" kind="function"><name>Graphedge</name></member>
    <member refid="classScarab_1_1Graph_1_1Graphedge_1a19e3a700cb4ab223810cadbe00fa573b" kind="function"><name>~Graphedge</name></member>
    <member refid="classScarab_1_1Graph_1_1Graphedge_1af4e2b922eb0db014aa6af45ef911e47c" kind="function"><name>id</name></member>
    <member refid="classScarab_1_1Graph_1_1Graphedge_1a10760ab9034b358f9bd4aa28c44117d5" kind="function"><name>from_node</name></member>
    <member refid="classScarab_1_1Graph_1_1Graphedge_1ae5b1fccfa8a11847b8be2a27690243f0" kind="function"><name>to_node</name></member>
  </compound>
  <compound refid="classScarab_1_1Graph_1_1Graphnode" kind="class"><name>Scarab::Graph::Graphnode</name>
    <member refid="classScarab_1_1Graph_1_1Graphnode_1a5adfcfca409e5a5889a4a61e894d27a4" kind="variable"><name>_id</name></member>
    <member refid="classScarab_1_1Graph_1_1Graphnode_1adff66a573b955bdcddf0ef3e17ae478d" kind="variable"><name>_edges</name></member>
    <member refid="classScarab_1_1Graph_1_1Graphnode_1a2e2b77e77174e9514786c41347c6562d" kind="variable"><name>_in_edges</name></member>
    <member refid="classScarab_1_1Graph_1_1Graphnode_1a2cda1b5dc57a6920b7cc551b92b0db0a" kind="variable"><name>_label</name></member>
    <member refid="classScarab_1_1Graph_1_1Graphnode_1adce1b3b5b83d8fca4952f244bd093b9f" kind="function"><name>Graphnode</name></member>
    <member refid="classScarab_1_1Graph_1_1Graphnode_1a0ee84da523f29d984e86b0f9637c67df" kind="function"><name>~Graphnode</name></member>
    <member refid="classScarab_1_1Graph_1_1Graphnode_1a74eaaed5d31a0a2c0445f3de0859148f" kind="function"><name>id</name></member>
    <member refid="classScarab_1_1Graph_1_1Graphnode_1a78229cc45113d24f1373a50a13bc7be4" kind="function"><name>num_edges</name></member>
    <member refid="classScarab_1_1Graph_1_1Graphnode_1a717294ebbae2d29e9f97633407dae4ce" kind="function"><name>num_in_edges</name></member>
    <member refid="classScarab_1_1Graph_1_1Graphnode_1a4ffd990052c812242cbdeeae7b0e1104" kind="function"><name>edges</name></member>
    <member refid="classScarab_1_1Graph_1_1Graphnode_1a001915a0fd7a6d4b06886f7865fc5189" kind="function"><name>in_edges</name></member>
    <member refid="classScarab_1_1Graph_1_1Graphnode_1ae37c75fd607395376ade1cda5294e2a4" kind="function"><name>set_edges</name></member>
    <member refid="classScarab_1_1Graph_1_1Graphnode_1a22e722e5bcd49dcfa643304d631416dc" kind="function"><name>add_edge</name></member>
    <member refid="classScarab_1_1Graph_1_1Graphnode_1a092b914639364b7b9168c84e3e556cea" kind="function"><name>add_in_edge</name></member>
    <member refid="classScarab_1_1Graph_1_1Graphnode_1a7ec0926462b47496b1158f16b87e69ca" kind="function"><name>set_label</name></member>
  </compound>
  <compound refid="classGraphProtoInterface" kind="class"><name>GraphProtoInterface</name>
    <member refid="classGraphProtoInterface_1a8e262de0a3f65eaa20e5c528363bbb2a" kind="variable"><name>_graph</name></member>
    <member refid="classGraphProtoInterface_1a4845501ec86ea627ce484cd78162c84c" kind="function"><name>build_from_file</name></member>
    <member refid="classGraphProtoInterface_1a0dbd0905dbab167b9293d0ef32409af3" kind="function"><name>process_node</name></member>
    <member refid="classGraphProtoInterface_1a3178c5f1eff8ed61d2512af8522cc550" kind="function"><name>process_edge</name></member>
    <member refid="classGraphProtoInterface_1a8b3125379c7b2bbf832b6b955496b76e" kind="function"><name>set_up</name></member>
    <member refid="classGraphProtoInterface_1a920e88785192db805206c875a8a3feed" kind="function"><name>graph</name></member>
  </compound>
  <compound refid="classHardConstraints" kind="class"><name>HardConstraints</name>
    <member refid="classHardConstraints_1ae0305e95d8065eb186ccae220b8e16f4" kind="variable"><name>_constraint_struct</name></member>
    <member refid="classHardConstraints_1a6b370ae5376bf283115092ab4bd33743" kind="variable"><name>group_used</name></member>
    <member refid="classHardConstraints_1ad457a78e966e6ce3d71bfb3401b0300b" kind="function"><name>read_from_file</name></member>
    <member refid="classHardConstraints_1a923f4ddd8b164d924147c22f054a9c7e" kind="function"><name>make_lin_expr</name></member>
    <member refid="classHardConstraints_1a0945fb67209be1cc95b31522d96e51cc" kind="function"><name>show_results</name></member>
    <member refid="classHardConstraints_1a71ae98e67f5e5d3035aff1c2ef941a92" kind="function"><name>add_to_lp</name></member>
  </compound>
  <compound refid="classHardPosConstraintsLP" kind="class"><name>HardPosConstraintsLP</name>
    <member refid="classHardPosConstraintsLP_1a16ba65107e587a8cb43cc10949b0ebcf" kind="variable"><name>group_used</name></member>
    <member refid="classHardPosConstraintsLP_1ad3b98e9e78140b02098420c674fcbaab" kind="variable"><name>slacks_pos</name></member>
    <member refid="classHardPosConstraintsLP_1ac758c0971f82ef892f7f708db15bf472" kind="variable"><name>slacks_neg</name></member>
    <member refid="classHardPosConstraintsLP_1aa5c46efababe8dd5282a71ceb233c548" kind="variable"><name>groups</name></member>
    <member refid="classHardPosConstraintsLP_1a29ebf61b9238d27227a512c59f9476de" kind="variable"><name>_constraints</name></member>
    <member refid="classHardPosConstraintsLP_1a156a0884c0b78e0233257deb36a379a5" kind="variable"><name>_penalty</name></member>
    <member refid="classHardPosConstraintsLP_1a2979e37eb163b00f48a38ee8fccd1a64" kind="function"><name>HardPosConstraintsLP</name></member>
    <member refid="classHardPosConstraintsLP_1aa841ffcec001c0ee31714d0d39027c26" kind="function"><name>make_lin_expr</name></member>
    <member refid="classHardPosConstraintsLP_1a7a7bb0c41351c9de3130045f0013c67b" kind="function"><name>add_to_lp</name></member>
    <member refid="classHardPosConstraintsLP_1a4307bcde1a701018736de348a718262b" kind="function"><name>show_results</name></member>
  </compound>
  <compound refid="classScarab_1_1HG_1_1Heuristic" kind="class"><name>Scarab::HG::Heuristic</name>
    <member refid="classScarab_1_1HG_1_1Heuristic_1afad5a99d38b6783521e4c670d3edcf0a" kind="function"><name>has_value</name></member>
    <member refid="classScarab_1_1HG_1_1Heuristic_1aca6b5924257b35be9e65058062fdc0d5" kind="function"><name>get_value</name></member>
  </compound>
  <compound refid="classScarab_1_1HG_1_1HGraph" kind="class"><name>Scarab::HG::HGraph</name>
    <member refid="classScarab_1_1HG_1_1HGraph_1a54e1901fef9f35caecf6f1f75eecf21a" kind="function"><name>~HGraph</name></member>
    <member refid="classScarab_1_1HG_1_1HGraph_1ab5aa11c932b28864b56f28e0babbc1c1" kind="function"><name>print</name></member>
    <member refid="classScarab_1_1HG_1_1HGraph_1a5ede392b158e41dd7e95ded1c4b0b5d6" kind="function"><name>root</name></member>
    <member refid="classScarab_1_1HG_1_1HGraph_1a8309003db80be5bdbe4bb64f98a78ea8" kind="function"><name>num_edges</name></member>
    <member refid="classScarab_1_1HG_1_1HGraph_1a6f4d37ef034cb38aa09c702b80a6e4f7" kind="function"><name>num_nodes</name></member>
    <member refid="classScarab_1_1HG_1_1HGraph_1acad57dd952956b1a1a4367bba0e9383b" kind="function"><name>get_node</name></member>
    <member refid="classScarab_1_1HG_1_1HGraph_1aa599b296ae01affc9606f519e4e44e9e" kind="function"><name>get_edge</name></member>
    <member refid="classScarab_1_1HG_1_1HGraph_1a74d893fba015520774f71f02a46bb6ca" kind="function"><name>nodes</name></member>
    <member refid="classScarab_1_1HG_1_1HGraph_1a57328729f90cc4152ca79ff15ecdd4bb" kind="function"><name>edges</name></member>
  </compound>
  <compound refid="structHyp" kind="struct"><name>Hyp</name>
    <member refid="structHyp_1a7d24c5a317140b8050dc57255bb7922a" kind="variable"><name>score</name></member>
    <member refid="structHyp_1a4aa96a03dc6b82416074985e0ecd39c3" kind="variable"><name>sig</name></member>
    <member refid="structHyp_1a076825f81d94a1f2b20bb5141eb9f4c7" kind="variable"><name>full_derivation</name></member>
    <member refid="structHyp_1a5a489de5f40008993c20ea19744196e8" kind="function"><name>Hyp</name></member>
    <member refid="structHyp_1a5fba7860265cf935133e4c0c73fec090" kind="function"><name>Hyp</name></member>
    <member refid="structHyp_1a547883a1aa9a7573d328d0f6b385dca8" kind="function"><name>operator&lt;</name></member>
  </compound>
  <compound refid="classScarab_1_1HG_1_1Hyperedge" kind="class"><name>Scarab::HG::Hyperedge</name>
    <member refid="classScarab_1_1HG_1_1Hyperedge_1a7c3ecbcb48242ad2f18864d4775c59cf" kind="function"><name>~Hyperedge</name></member>
    <member refid="classScarab_1_1HG_1_1Hyperedge_1af824beb7107253a7545b35992c17e057" kind="function"><name>id</name></member>
    <member refid="classScarab_1_1HG_1_1Hyperedge_1a8442c017fcee87c1f865b2254b49900f" kind="function"><name>label</name></member>
    <member refid="classScarab_1_1HG_1_1Hyperedge_1a9ec8cf9ea7b5f762f359a6f9f1c038da" kind="function"><name>tail_node</name></member>
    <member refid="classScarab_1_1HG_1_1Hyperedge_1a799d8d98242c129d7eee178bdf1fb535" kind="function"><name>num_nodes</name></member>
    <member refid="classScarab_1_1HG_1_1Hyperedge_1a0d201ddb955631aadee4c15cc8e709f8" kind="function"><name>fvector</name></member>
    <member refid="classScarab_1_1HG_1_1Hyperedge_1a6043de341070c103d811f5286193dd46" kind="function"><name>head_node</name></member>
    <member refid="classScarab_1_1HG_1_1Hyperedge_1abac6d27691186608aa12949de6e1c283" kind="function"><name>tail_nodes</name></member>
  </compound>
  <compound refid="classScarab_1_1HG_1_1HyperedgeImpl" kind="class"><name>Scarab::HG::HyperedgeImpl</name>
    <member refid="classScarab_1_1HG_1_1HyperedgeImpl_1ab14180934c56806b0004bcbdac9eef88" kind="variable"><name>_label</name></member>
    <member refid="classScarab_1_1HG_1_1HyperedgeImpl_1a70fab435c66aab79825aab6b9058cda5" kind="variable"><name>_tail_nodes</name></member>
    <member refid="classScarab_1_1HG_1_1HyperedgeImpl_1a92aeb9593a64be769f18666c3bfd0a20" kind="variable"><name>_head_node</name></member>
    <member refid="classScarab_1_1HG_1_1HyperedgeImpl_1ab6ef63cf668ac43a8d04045ff43271d8" kind="variable"><name>_id</name></member>
    <member refid="classScarab_1_1HG_1_1HyperedgeImpl_1a5c1b6203ba130968e7e8ba856a508369" kind="variable"><name>_features</name></member>
    <member refid="classScarab_1_1HG_1_1HyperedgeImpl_1a00d18b1bc3fc6821e46005b72870a41c" kind="function"><name>~HyperedgeImpl</name></member>
    <member refid="classScarab_1_1HG_1_1HyperedgeImpl_1a3c141efe1be2e8ee78d45caca4711c6e" kind="function"><name>HyperedgeImpl</name></member>
    <member refid="classScarab_1_1HG_1_1HyperedgeImpl_1a7087ba121f3056eb5946d1909c4b3d58" kind="function"><name>tail_node</name></member>
    <member refid="classScarab_1_1HG_1_1HyperedgeImpl_1a9a5bef8789c9c7caee6f53833ea4acc7" kind="function"><name>num_nodes</name></member>
    <member refid="classScarab_1_1HG_1_1HyperedgeImpl_1a359446c285164a93995bb87e6ea74882" kind="function"><name>fvector</name></member>
    <member refid="classScarab_1_1HG_1_1HyperedgeImpl_1ae194bfc8ecac2a12791fa36c1c2c62a7" kind="function"><name>head_node</name></member>
    <member refid="classScarab_1_1HG_1_1HyperedgeImpl_1a3bf00c8c032397150f59e196aea5e245" kind="function"><name>tail_nodes</name></member>
    <member refid="classScarab_1_1HG_1_1HyperedgeImpl_1afa81943347267781c25c4e68f7f5f547" kind="function"><name>id</name></member>
    <member refid="classScarab_1_1HG_1_1HyperedgeImpl_1a8fe687c9914de37c4d91c353ba669665" kind="function"><name>label</name></member>
    <member refid="classScarab_1_1HG_1_1HyperedgeImpl_1a068e4291cbcaa68a59ad64ede34f9edc" kind="function"><name>reid</name></member>
  </compound>
  <compound refid="classScarab_1_1HG_1_1HypergraphAlgorithms" kind="class"><name>Scarab::HG::HypergraphAlgorithms</name>
    <member refid="classScarab_1_1HG_1_1HypergraphAlgorithms_1a2d58cdb7b8bafc95146dfd3ffdbfe3cb" kind="variable"><name>_forest</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphAlgorithms_1a71e2da9111a9a484e5ef370991fdb6aa" kind="function"><name>HypergraphAlgorithms</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphAlgorithms_1a28f83d7616f6153ca7c909fe82c5b0fa" kind="function"><name>cache_edge_weights</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphAlgorithms_1ae815dc19968e9ab557d19dd2563fca38" kind="function"><name>combine_edge_weights</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphAlgorithms_1af5bcb325e1d58dd9d4c26517c4dfeca0" kind="function"><name>construct_best_fringe</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphAlgorithms_1ab054762a5d6a0af7ee667c8e90585668" kind="function"><name>construct_best_edges</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphAlgorithms_1acf3eea6f89752404f12c0a3dd45d397d" kind="function"><name>construct_best_node_order</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphAlgorithms_1a4ff84fd293173b5cee2f902a3509a5c2" kind="function"><name>construct_best_feature_vector</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphAlgorithms_1aa9a28bf42d17a166ec5e780067e33259" kind="function"><name>best_path</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphAlgorithms_1a8eea2c8f3cd86a08962b46d1a4c57a20" kind="function"><name>best_outside_path</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphAlgorithms_1afeb33bac104955747948b3d4a885cdc4" kind="function"><name>topological_sort</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphAlgorithms_1a3b26656f35480c12e79f4040dce7bae1" kind="function"><name>pretty_good_pruning</name></member>
  </compound>
  <compound refid="classScarab_1_1HG_1_1HypergraphImpl" kind="class"><name>Scarab::HG::HypergraphImpl</name>
    <member refid="classScarab_1_1HG_1_1HypergraphImpl_1aa7192cf8f168e5bfed67a8faf85c8cb4" kind="variable"><name>hgraph</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a7035fdae4c04d0752aaaf1e7eba7600e" kind="variable"><name>_root</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a4cc57d9255e2f09714c5913d67cd0554" kind="variable"><name>_nodes</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a56fb710140f3359646b1a17cb0417d74" kind="variable"><name>_edges</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a067b2daae46f4758f9621fb9d803bef2" kind="function"><name>HypergraphImpl</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a935bed9b8cf9235a1adb61d0889f6ac7" kind="function"><name>HypergraphImpl</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphImpl_1af9726fe39b4cfdbcbead1cba4efa6a01" kind="function"><name>~HypergraphImpl</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a31172009b97d179f6b1199f191197a32" kind="function"><name>root</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a0adcc8783b94cbe07b092220082d00ab" kind="function"><name>num_edges</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphImpl_1ad39e917a84acb1d4caf0145ce8a903a2" kind="function"><name>num_nodes</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a9276a6faa074eb4f3bbb2f8b8d5d4fbf" kind="function"><name>get_node</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a31a148139b888b6bd10e78fe555144c7" kind="function"><name>get_edge</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a1f33418f90b826db9cfc0bb34e1ca9cf" kind="function"><name>build_from_file</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a9aef2881b489c86d4d83e996a70f8141" kind="function"><name>nodes</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a0c8373e545fe59b0cb7036b4751508e1" kind="function"><name>edges</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a98701d5529aaf3e5d4fa386694843f20" kind="function"><name>prune</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphImpl_1af8f5ed38a355676c473e8d54b5552cc6" kind="function"><name>write_to_file</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphImpl_1af14198ba5fccb5d4118188fa42feb8ff" kind="function"><name>make_node</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a238a7ce3b578c8126eccbc7803570638" kind="function"><name>make_edge</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a30349aca0e3b8f8dc72ed74d78e8c5b8" kind="function"><name>convert_edge</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphImpl_1a93e9e250fa457a2171bf07241b7829eb" kind="function"><name>convert_node</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphImpl_1ae91de73e633e450b01664e3ec964019c" kind="function"><name>set_up</name></member>
  </compound>
  <compound refid="structScarab_1_1HG_1_1HypergraphLP" kind="struct"><name>Scarab::HG::HypergraphLP</name>
    <member refid="structScarab_1_1HG_1_1HypergraphLP_1ae9c9c441b112e98e412e8129e91a28ce" kind="variable"><name>node_vars</name></member>
    <member refid="structScarab_1_1HG_1_1HypergraphLP_1a8e71b062f3d6691eef27bb85c718604f" kind="variable"><name>edge_vars</name></member>
    <member refid="structScarab_1_1HG_1_1HypergraphLP_1a52fa717afa9c902f7d8ef3adf18c5204" kind="variable"><name>_h</name></member>
    <member refid="structScarab_1_1HG_1_1HypergraphLP_1a332edf79e5fc5b617ec6e948a73cc4a4" kind="function"><name>HypergraphLP</name></member>
  </compound>
  <compound refid="classScarab_1_1HG_1_1HypergraphLPBuilder" kind="class"><name>Scarab::HG::HypergraphLPBuilder</name>
    <member refid="classScarab_1_1HG_1_1HypergraphLPBuilder_1a7653a6f997f1505c0d6668618b28d6d8" kind="function"><name>show_hypergraph</name></member>
    <member refid="classScarab_1_1HG_1_1HypergraphLPBuilder_1a3a711a79152e0f5d4cc9157737673b95" kind="function"><name>add_hypergraph</name></member>
  </compound>
  <compound refid="structScarab_1_1HG_1_1HypergraphPrune" kind="struct"><name>Scarab::HG::HypergraphPrune</name>
    <member refid="structScarab_1_1HG_1_1HypergraphPrune_1a1ff0fd7b723f888db33ae542d186d0b4" kind="variable"><name>nodes</name></member>
    <member refid="structScarab_1_1HG_1_1HypergraphPrune_1adff9a55407cd2cff9199d440ef513029" kind="variable"><name>edges</name></member>
    <member refid="structScarab_1_1HG_1_1HypergraphPrune_1a55f12db438013ace2d307efb284bcb7b" kind="variable"><name>hgraph</name></member>
    <member refid="structScarab_1_1HG_1_1HypergraphPrune_1adc29528f39ad9ced03be8b48341c3e84" kind="function"><name>HypergraphPrune</name></member>
  </compound>
  <compound refid="classHypergraphTools" kind="class"><name>HypergraphTools</name>
    <member refid="classHypergraphTools_1a188643770705ed9482616956e22ebfd4" kind="function"><name>viterbi</name></member>
  </compound>
  <compound refid="classScarab_1_1HG_1_1Hypernode" kind="class"><name>Scarab::HG::Hypernode</name>
    <member refid="classScarab_1_1HG_1_1Hypernode_1a0657cc96f62d29da3ae4b5b9bcab1ce6" kind="function"><name>~Hypernode</name></member>
    <member refid="classScarab_1_1HG_1_1Hypernode_1a0aeaee6c2ca2a011fcd086f803aaa4d0" kind="function"><name>id</name></member>
    <member refid="classScarab_1_1HG_1_1Hypernode_1add2f4d556be223b906bfbab9f1b60870" kind="function"><name>num_edges</name></member>
    <member refid="classScarab_1_1HG_1_1Hypernode_1a4b1a4ffaa8a8b0295763673e6d86d693" kind="function"><name>num_in_edges</name></member>
    <member refid="classScarab_1_1HG_1_1Hypernode_1a3bface6832eb54a00d90e4fe8d1999f7" kind="function"><name>edge</name></member>
    <member refid="classScarab_1_1HG_1_1Hypernode_1a533d3e0bc2269ec07edbda32305daf70" kind="function"><name>in_edge</name></member>
    <member refid="classScarab_1_1HG_1_1Hypernode_1ae3e1107309a8817d1015bd70a90c1c49" kind="function"><name>is_terminal</name></member>
    <member refid="classScarab_1_1HG_1_1Hypernode_1a3306572ded5b5061c1916bcf268be94e" kind="function"><name>edges</name></member>
    <member refid="classScarab_1_1HG_1_1Hypernode_1aad118748408663b8242dc52d45bbd49d" kind="function"><name>in_edges</name></member>
  </compound>
  <compound refid="classScarab_1_1HG_1_1HypernodeImpl" kind="class"><name>Scarab::HG::HypernodeImpl</name>
    <member refid="classScarab_1_1HG_1_1HypernodeImpl_1a17fad78f39f16a7346ebaf2febe9f66c" kind="variable"><name>_id</name></member>
    <member refid="classScarab_1_1HG_1_1HypernodeImpl_1a03e931f3e349e471c25cc1bd82810613" kind="variable"><name>_features</name></member>
    <member refid="classScarab_1_1HG_1_1HypernodeImpl_1a2ebfa2b68dfbeec4245dddae280b970b" kind="variable"><name>_in_edges</name></member>
    <member refid="classScarab_1_1HG_1_1HypernodeImpl_1aaa189784dcf714f3c1ca54ea8cd0dc83" kind="variable"><name>_edges</name></member>
    <member refid="classScarab_1_1HG_1_1HypernodeImpl_1aefb3b14843d6fb8ed2284ae0d6a53dbd" kind="variable"><name>_label</name></member>
    <member refid="classScarab_1_1HG_1_1HypernodeImpl_1a07ec2768129a4e202f9f1e47ff0f12c7" kind="function"><name>~HypernodeImpl</name></member>
    <member refid="classScarab_1_1HG_1_1HypernodeImpl_1a574c6f1386fb27894075977ef1ca56d6" kind="function"><name>HypernodeImpl</name></member>
    <member refid="classScarab_1_1HG_1_1HypernodeImpl_1a0899a4e97f535c2f005d7c5ab5364681" kind="function"><name>add_edge</name></member>
    <member refid="classScarab_1_1HG_1_1HypernodeImpl_1ab05500702d5fa1c896efe941f9c54bf3" kind="function"><name>add_in_edge</name></member>
    <member refid="classScarab_1_1HG_1_1HypernodeImpl_1a2bb4b33ff207c3c1babe135b9af6323e" kind="function"><name>is_terminal</name></member>
    <member refid="classScarab_1_1HG_1_1HypernodeImpl_1a6675d677bd7e794ae9a8bf72645b828a" kind="function"><name>prune_edges</name></member>
    <member refid="classScarab_1_1HG_1_1HypernodeImpl_1a328189f28a4185d435035686a27592c2" kind="function"><name>edge</name></member>
    <member refid="classScarab_1_1HG_1_1HypernodeImpl_1a7fed4809706319cc916ed4c04a641436" kind="function"><name>num_edges</name></member>
    <member refid="classScarab_1_1HG_1_1HypernodeImpl_1a9a13a37fcece16603ec4bf3f364e6fcc" kind="function"><name>num_in_edges</name></member>
    <member refid="classScarab_1_1HG_1_1HypernodeImpl_1a26ff9db30c03c7b74181e9f901aa71d4" kind="function"><name>in_edge</name></member>
    <member refid="classScarab_1_1HG_1_1HypernodeImpl_1a2579ef1e67ad8f51d23838c130440d21" kind="function"><name>id</name></member>
    <member refid="classScarab_1_1HG_1_1HypernodeImpl_1ada979dcddc1bf0abf0fc2530d1ea8761" kind="function"><name>edges</name></member>
    <member refid="classScarab_1_1HG_1_1HypernodeImpl_1a77fe0de2e3927be6145cb8fc018088c9" kind="function"><name>in_edges</name></member>
    <member refid="classScarab_1_1HG_1_1HypernodeImpl_1a9b0df10dfd6c20c094a928f1ced76f90" kind="function"><name>reid</name></member>
  </compound>
  <compound refid="structScarab_1_1HG_1_1Hypothesis" kind="struct"><name>Scarab::HG::Hypothesis</name>
    <member refid="structScarab_1_1HG_1_1Hypothesis_1a53277642394df6145ea8bfc6a3e3996e" kind="variable"><name>hook</name></member>
    <member refid="structScarab_1_1HG_1_1Hypothesis_1aff1779905d4f7e9a21b71a20cec4f02d" kind="variable"><name>right_side</name></member>
    <member refid="structScarab_1_1HG_1_1Hypothesis_1aa31a2d052ecaffa034d8447de748946f" kind="variable"><name>back_edge</name></member>
    <member refid="structScarab_1_1HG_1_1Hypothesis_1a38b1068d18fe3ce28d6c93e5d12b2225" kind="variable"><name>is_done</name></member>
    <member refid="structScarab_1_1HG_1_1Hypothesis_1a93bf33767cecd362e8a12d385c94be1a" kind="variable"><name>prev_hyp</name></member>
    <member refid="structScarab_1_1HG_1_1Hypothesis_1a95df46740f1263062f4898db1b39cd41" kind="variable"><name>original_value</name></member>
    <member refid="structScarab_1_1HG_1_1Hypothesis_1aca7357ce485cb960fadb2cc62f1a888a" kind="function"><name>Hypothesis</name></member>
    <member refid="structScarab_1_1HG_1_1Hypothesis_1a0d71b86d0d7d3294e61671efed2722bf" kind="function"><name>Hypothesis</name></member>
    <member refid="structScarab_1_1HG_1_1Hypothesis_1a974fd973dd0c8a380f342bbd10013d6f" kind="function"><name>Hypothesis</name></member>
    <member refid="structScarab_1_1HG_1_1Hypothesis_1a896c919fe180b0fcd4cdcbeabd9d2e0d" kind="function"><name>Hypothesis</name></member>
    <member refid="structScarab_1_1HG_1_1Hypothesis_1a698008183fc3863a0c03ba0c3e5960d1" kind="function"><name>match</name></member>
    <member refid="structScarab_1_1HG_1_1Hypothesis_1a5a69f417c889d4d96ad5a78aa1dd2f7d" kind="function"><name>id</name></member>
    <member refid="structScarab_1_1HG_1_1Hypothesis_1ac428cffa80bad102222f58463bfba7e5" kind="function"><name>left</name></member>
    <member refid="structScarab_1_1HG_1_1Hypothesis_1a6c026d211fd4f4875216fc179a78e879" kind="function"><name>right</name></member>
    <member refid="structScarab_1_1HG_1_1Hypothesis_1a70597628ead54cb83fcda7422d6d2f1f" kind="function"><name>operator&lt;</name></member>
    <member refid="structScarab_1_1HG_1_1Hypothesis_1a70fdb92646880290a9c906e5018c11bb" kind="friend"><name>operator&lt;&lt;</name></member>
  </compound>
  <compound refid="classstd_1_1ifstream" kind="class"><name>std::ifstream</name>
  </compound>
  <compound refid="classstd_1_1invalid__argument" kind="class"><name>std::invalid_argument</name>
  </compound>
  <compound refid="classstd_1_1ios" kind="class"><name>std::ios</name>
  </compound>
  <compound refid="classstd_1_1ios__base" kind="class"><name>std::ios_base</name>
  </compound>
  <compound refid="classstd_1_1istream" kind="class"><name>std::istream</name>
  </compound>
  <compound refid="classstd_1_1istringstream" kind="class"><name>std::istringstream</name>
  </compound>
  <compound refid="classstd_1_1wstring_1_1iterator" kind="class"><name>std::wstring::iterator</name>
  </compound>
  <compound refid="classstd_1_1basic__string_1_1iterator" kind="class"><name>std::basic_string::iterator</name>
  </compound>
  <compound refid="classstd_1_1list_1_1iterator" kind="class"><name>std::list::iterator</name>
  </compound>
  <compound refid="classstd_1_1map_1_1iterator" kind="class"><name>std::map::iterator</name>
  </compound>
  <compound refid="classstd_1_1multimap_1_1iterator" kind="class"><name>std::multimap::iterator</name>
  </compound>
  <compound refid="classstd_1_1set_1_1iterator" kind="class"><name>std::set::iterator</name>
  </compound>
  <compound refid="classstd_1_1multiset_1_1iterator" kind="class"><name>std::multiset::iterator</name>
  </compound>
  <compound refid="classstd_1_1vector_1_1iterator" kind="class"><name>std::vector::iterator</name>
  </compound>
  <compound refid="classstd_1_1deque_1_1iterator" kind="class"><name>std::deque::iterator</name>
  </compound>
  <compound refid="classstd_1_1string_1_1iterator" kind="class"><name>std::string::iterator</name>
  </compound>
  <compound refid="structScarab_1_1HG_1_1LatticeVars" kind="struct"><name>Scarab::HG::LatticeVars</name>
    <member refid="structScarab_1_1HG_1_1LatticeVars_1a68c89197d9177fd5550b558358e5ac0b" kind="variable"><name>all_pairs_vars</name></member>
    <member refid="structScarab_1_1HG_1_1LatticeVars_1a2f4713dd2316790958cdca48bb6a73d1" kind="variable"><name>all_pairs_exist_vars</name></member>
    <member refid="structScarab_1_1HG_1_1LatticeVars_1ad6cc2ab5e0d3322d35738ddb0e9af503" kind="variable"><name>has_all_pairs_var</name></member>
    <member refid="structScarab_1_1HG_1_1LatticeVars_1a163eea64436f95f4282590c141f52b1d" kind="variable"><name>name</name></member>
    <member refid="structScarab_1_1HG_1_1LatticeVars_1a22dc8ef683d47635b8e55adf3520a811" kind="function"><name>LatticeVars</name></member>
    <member refid="structScarab_1_1HG_1_1LatticeVars_1a2b1a31d5b8d9673c7c473f28c2e02db9" kind="function"><name>initialize_all_pairs</name></member>
    <member refid="structScarab_1_1HG_1_1LatticeVars_1a769802ee94dab4d0c8a7956fb861efac" kind="function"><name>add_all_pairs_constraints</name></member>
  </compound>
  <compound refid="classstd_1_1length__error" kind="class"><name>std::length_error</name>
  </compound>
  <compound refid="classstd_1_1list" kind="class"><name>std::list</name>
    <member refid="classstd_1_1list_1a682e5c7c91eb377d0cb4f019b2b81a5d" kind="variable"><name>elements</name></member>
  </compound>
  <compound refid="classLMNonLocal" kind="class"><name>LMNonLocal</name>
    <member refid="classLMNonLocal_1ad5c2e12e0381b2cc1f59f43a01a4d94a" kind="variable"><name>_forest</name></member>
    <member refid="classLMNonLocal_1a29f795da73182d4f17c7f8ae11194920" kind="variable"><name>_lm</name></member>
    <member refid="classLMNonLocal_1ab6ba992d82a784336b4f3cfc11444e58" kind="variable"><name>_word_cache</name></member>
    <member refid="classLMNonLocal_1a7a6000f6118f1c8df727fac29c849b58" kind="function"><name>LMNonLocal</name></member>
    <member refid="classLMNonLocal_1a2d14ca694dc6d49ce6e2b80622aafd51" kind="function"><name>compute</name></member>
    <member refid="classLMNonLocal_1a93334d873bfe91d5357cbec933ec3ae9" kind="function"><name>initialize</name></member>
  </compound>
  <compound refid="structLocalHyperedge" kind="struct"><name>LocalHyperedge</name>
    <member refid="structLocalHyperedge_1a94cbc62434996702ca1d0e28b6dde622" kind="variable"><name>tail_node_ids</name></member>
    <member refid="structLocalHyperedge_1a71c8831cc00fefbfb29575856a22fc8a" kind="variable"><name>head</name></member>
    <member refid="structLocalHyperedge_1a875e26d7749b13e387b7f0978a4f97a5" kind="variable"><name>weight</name></member>
    <member refid="structLocalHyperedge_1ae1b43e113b237128ed95691034ec715e" kind="variable"><name>label</name></member>
    <member refid="structLocalHyperedge_1a8c94fa5634a89063f5b205678c6e523a" kind="function"><name>LocalHyperedge</name></member>
  </compound>
  <compound refid="classLocalTestSuite" kind="class"><name>LocalTestSuite</name>
    <member refid="classLocalTestSuite_1a57c6f43185dbf0d3d63827df4b323db4" kind="function"><name>LocalTestSuite</name></member>
    <member refid="classLocalTestSuite_1a6f1e48d5228f292d4a051260262928b3" kind="function"><name>load_test</name></member>
  </compound>
  <compound refid="structScarab_1_1HG_1_1Location" kind="struct"><name>Scarab::HG::Location</name>
    <member refid="structScarab_1_1HG_1_1Location_1a493249f5c4c2ad6870d1cf1f9dd3f5f5" kind="variable"><name>location</name></member>
    <member refid="structScarab_1_1HG_1_1Location_1a9a11d2d02ffd88048526a28c7619a3c7" kind="variable"><name>node_id</name></member>
    <member refid="structScarab_1_1HG_1_1Location_1a618dd1682636ccc635ced4dc536be305" kind="variable"><name>edge_id</name></member>
    <member refid="structScarab_1_1HG_1_1Location_1a9e3f8708a3b6c0271a7a854bc6dbde79" kind="variable"><name>edge_pos</name></member>
    <member refid="structScarab_1_1HG_1_1Location_1a66e686eed3a0038886fd24171ec0ae8e" kind="function"><name>show</name></member>
  </compound>
  <compound refid="classstd_1_1logic__error" kind="class"><name>std::logic_error</name>
  </compound>
  <compound refid="classScarab_1_1HG_1_1LPBuilder" kind="class"><name>Scarab::HG::LPBuilder</name>
    <member refid="classScarab_1_1HG_1_1LPBuilder_1a68630566ebae8ce1290d776c516af921" kind="variable"><name>_forest</name></member>
    <member refid="classScarab_1_1HG_1_1LPBuilder_1aa20707efb33f700f132bd3b95c2628de" kind="variable"><name>_lattice</name></member>
    <member refid="classScarab_1_1HG_1_1LPBuilder_1ab70efc367cb2c3d849adf4211f8fdc69" kind="variable"><name>model</name></member>
    <member refid="classScarab_1_1HG_1_1LPBuilder_1aba798e4d3faf87e8411607f9d974fc7f" kind="function"><name>LPBuilder</name></member>
    <member refid="classScarab_1_1HG_1_1LPBuilder_1abfa755f4c94dc432c022be35861a8200" kind="function"><name>solve_hypergraph</name></member>
    <member refid="classScarab_1_1HG_1_1LPBuilder_1a963bdf9c956b4a08d52be06e1cb6a05a" kind="function"><name>solve_full</name></member>
    <member refid="classScarab_1_1HG_1_1LPBuilder_1a841a904ccea6c2f47378c40282ede6aa" kind="function"><name>build_hypergraph_lp</name></member>
    <member refid="classScarab_1_1HG_1_1LPBuilder_1a916878e956c20d5e0825eab7c2fb9fee" kind="function"><name>build_all_pairs_lp</name></member>
    <member refid="classScarab_1_1HG_1_1LPBuilder_1afbd378a6325405e0b58d4915433e85ef" kind="function"><name>initialize_word_pairs</name></member>
    <member refid="classScarab_1_1HG_1_1LPBuilder_1a7dbaeac7b1c30959c8942ab63f435f14" kind="function"><name>build_all_tri_pairs_lp</name></member>
  </compound>
  <compound refid="classstd_1_1map" kind="class"><name>std::map</name>
    <member refid="classstd_1_1map_1a8dc2b3ed44acf51fb2bd3eb30b237269" kind="variable"><name>keys</name></member>
    <member refid="classstd_1_1map_1ac69fe575e214b796b8d9457b0c22469a" kind="variable"><name>elements</name></member>
  </compound>
  <compound refid="classMRF" kind="class"><name>MRF</name>
    <member refid="classMRF_1a046ce906740e370cf7ebd54bb5a443f0" kind="variable"><name>_node_states</name></member>
    <member refid="classMRF_1a6726e4cd32554d0bd42864ba7ecc13c5" kind="variable"><name>_node_potentials</name></member>
    <member refid="classMRF_1ac793035f2079812b9ffca81b1fdb2772" kind="variable"><name>_edge_potentials</name></member>
    <member refid="classMRF_1a42b3637ade8396ddbdbb6017a72b4b78" kind="variable"><name>_num_assignments</name></member>
    <member refid="classMRF_1a3a2f7eb349a7345abfba2c5869f85b1f" kind="function"><name>process_node</name></member>
    <member refid="classMRF_1aed7b8a7a2e3af7c14b501040630e9589" kind="function"><name>process_edge</name></member>
    <member refid="classMRF_1a34f0d586337501d668a62726eb0046d7" kind="function"><name>build_hypergraph</name></member>
    <member refid="classMRF_1a928f19f948fa97796462fd9542a985fd" kind="function"><name>set_up</name></member>
    <member refid="classMRF_1a3a7f11091d96ab8b2f830deb343fc3a6" kind="function"><name>node_pot</name></member>
    <member refid="classMRF_1ab73d5f7b51c206754bee9eea9405c0fb" kind="function"><name>has_edge_pot</name></member>
    <member refid="classMRF_1a9f98956295352e9bfc9917328999c1b2" kind="function"><name>edge_pot</name></member>
    <member refid="classMRF_1a7c01a68384b81d1ba7d24508f767d216" kind="function"><name>states</name></member>
    <member refid="classMRF_1aaf17c4a671ea4f06553c33fca90bfa35" kind="function"><name>assignments</name></member>
    <member refid="classMRF_1a9326b3fd5aea915a1bb8a1ad2ac50f3f" kind="function"><name>make_assignment</name></member>
  </compound>
  <compound refid="classMRFBuilderLP" kind="class"><name>MRFBuilderLP</name>
    <member refid="classMRFBuilderLP_1a311720dbead166d002f8fba18bec9e73" kind="variable"><name>_mrf</name></member>
    <member refid="classMRFBuilderLP_1aaace30ed1c0dfb1b0c5c89a22b503e10" kind="function"><name>add_mrf</name></member>
  </compound>
  <compound refid="classMRFHypergraph" kind="class"><name>MRFHypergraph</name>
    <member refid="classMRFHypergraph_1aa696bb6f0145ae55e839ccee6acbabc6" kind="variable"><name>_canonical_hnode</name></member>
    <member refid="classMRFHypergraph_1a348c1e722ea499fd9363191aa9d1eadb" kind="variable"><name>_canonical_assignment</name></member>
    <member refid="classMRFHypergraph_1af8808e644c7ff0c938f4fbd9e473dfba" kind="function"><name>from_mrf</name></member>
    <member refid="classMRFHypergraph_1a5c717b35842c25c6be9e827f0aa31708" kind="function"><name>assignment_from_node</name></member>
    <member refid="classMRFHypergraph_1aaac6b68c3ece41ddd1f8107e961879bc" kind="function"><name>print</name></member>
    <member refid="classMRFHypergraph_1a34f14a3a9cf0d01c7fbfc11e1caa20ba" kind="function"><name>assignment_from_node</name></member>
  </compound>
  <compound refid="structMrfIndex" kind="struct"><name>MrfIndex</name>
    <member refid="structMrfIndex_1a10be38457b3798cfdf70f224814ce8eb" kind="variable"><name>group</name></member>
    <member refid="structMrfIndex_1a9c765fbc8576d8d6541a072eb75c2c8a" kind="variable"><name>node</name></member>
    <member refid="structMrfIndex_1a2cea032a5c169945c3c0e8d96fbc1477" kind="variable"><name>state</name></member>
    <member refid="structMrfIndex_1aea03c126e0402a570faa067c5a3643b6" kind="function"><name>MrfIndex</name></member>
    <member refid="structMrfIndex_1adc62126e39eeccb67aed83b8d33514e9" kind="function"><name>MrfIndex</name></member>
  </compound>
  <compound refid="structMRFLP" kind="struct"><name>MRFLP</name>
    <member refid="structMRFLP_1a1ddb2cc0eb980dc0d9d94bf731e3f4ae" kind="variable"><name>node_vars</name></member>
    <member refid="structMRFLP_1a7f977d31ba7f70b5913279466a46e2b2" kind="variable"><name>edge_vars</name></member>
    <member refid="structMRFLP_1a46a1042ee20d632ca11afee0a1965fb9" kind="variable"><name>from_state_blank_vars</name></member>
    <member refid="structMRFLP_1ae1b4c653d4a3b3c6759a160f8f1c4fc6" kind="variable"><name>to_state_blank_vars</name></member>
    <member refid="structMRFLP_1a546b7ee8de350e2a882e9ae9beb6af6f" kind="variable"><name>mrf</name></member>
    <member refid="structMRFLP_1a868a64efdbf8d42682c7953361af4c31" kind="function"><name>MRFLP</name></member>
  </compound>
  <compound refid="classstd_1_1multimap" kind="class"><name>std::multimap</name>
    <member refid="classstd_1_1multimap_1a4e7d19eda5925ebfcf1e3dcba085cce5" kind="variable"><name>keys</name></member>
    <member refid="classstd_1_1multimap_1abb7a4781b562bae0a54baeb5726ac28d" kind="variable"><name>elements</name></member>
  </compound>
  <compound refid="classstd_1_1multiset" kind="class"><name>std::multiset</name>
    <member refid="classstd_1_1multiset_1a93eb79091066c87f6dfb9d07c6c7cbcd" kind="variable"><name>keys</name></member>
  </compound>
  <compound refid="classNgramCache" kind="class"><name>NgramCache</name>
    <member refid="classNgramCache_1aafa9fbc938b520bb0a172d1c8fc423d4" kind="variable"><name>logp</name></member>
    <member refid="classNgramCache_1a6bf45fca2ed5d05caa778ec72339b219" kind="variable"><name>bow</name></member>
    <member refid="classNgramCache_1a49422a3c26587a4f7f3c80cebc721d8d" kind="variable"><name>found</name></member>
    <member refid="classNgramCache_1a01374cd9d015896dcec97f8f50780a53" kind="variable"><name>trieNode</name></member>
    <member refid="classNgramCache_1a5d60344144288535be7fa4d75d178e61" kind="variable"><name>i</name></member>
    <member refid="classNgramCache_1a1d8b66016081c1e0d15b2199e48c4df9" kind="function"><name>NgramCache</name></member>
    <member refid="classNgramCache_1aaf831fb4e48aa1a8f8d46287adb7c419" kind="function"><name>hasNext</name></member>
    <member refid="classNgramCache_1a3444ab6a1b5a140edb089efb51b071c1" kind="function"><name>wordProbPrimeCache</name></member>
    <member refid="classNgramCache_1a7806b0a2832644fcde66aa928a58caa9" kind="function"><name>wordProbFromCache</name></member>
  </compound>
  <compound refid="structNodeAssignment" kind="struct"><name>NodeAssignment</name>
    <member refid="structNodeAssignment_1a595045041aa245ed3108284223ce766d" kind="variable"><name>node_id</name></member>
    <member refid="structNodeAssignment_1affe9bfbc195ba56f34dcdbd4fb10411e" kind="variable"><name>s</name></member>
    <member refid="structNodeAssignment_1ac3b88ac2cbd270733ee835e00279a4ad" kind="variable"><name>length</name></member>
    <member refid="structNodeAssignment_1a23f5d30b0061c746cc24968babde9dd9" kind="function"><name>NodeAssignment</name></member>
    <member refid="structNodeAssignment_1afb4f063136a9da957865d42faa2a3943" kind="function"><name>NodeAssignment</name></member>
    <member refid="structNodeAssignment_1aea41536d91eba4d9c6440065953aa4e0" kind="function"><name>id</name></member>
  </compound>
  <compound refid="classNonLocal" kind="class"><name>NonLocal</name>
    <member refid="classNonLocal_1acd66e7882a5bb3415d3fd658d03ec8fc" kind="function"><name>compute</name></member>
    <member refid="classNonLocal_1a90f2d399853f5c689a0abdc5c12a8370" kind="function"><name>initialize</name></member>
  </compound>
  <compound refid="classstd_1_1ofstream" kind="class"><name>std::ofstream</name>
  </compound>
  <compound refid="classstd_1_1ostream" kind="class"><name>std::ostream</name>
  </compound>
  <compound refid="classstd_1_1ostringstream" kind="class"><name>std::ostringstream</name>
  </compound>
  <compound refid="classstd_1_1out__of__range" kind="class"><name>std::out_of_range</name>
  </compound>
  <compound refid="classstd_1_1overflow__error" kind="class"><name>std::overflow_error</name>
  </compound>
  <compound refid="classPhraseBased" kind="class"><name>PhraseBased</name>
    <member refid="classPhraseBased_1aafc2997b58b3698fed7cb5a1f6f269c6" kind="function"><name>print</name></member>
    <member refid="classPhraseBased_1a3883660c72be6ce8daab08f368317853" kind="function"><name>set_up</name></member>
  </compound>
  <compound refid="structPossibleDep" kind="struct"><name>PossibleDep</name>
    <member refid="structPossibleDep_1a2f693c6bb47703c1a989f8971e06d561" kind="variable"><name>ind</name></member>
    <member refid="structPossibleDep_1ad2c0887a242af14d7bdd6bc7a3528bf3" kind="variable"><name>group</name></member>
    <member refid="structPossibleDep_1a2f685f514a785a8365c9a1682fce4d5a" kind="variable"><name>group_name</name></member>
    <member refid="structPossibleDep_1a4b4536449d9c17e05b7f5454b0d922f7" kind="variable"><name>head_inds</name></member>
    <member refid="structPossibleDep_1acec0859157184e3f1fe962236fe6303b" kind="variable"><name>sent_num</name></member>
  </compound>
  <compound refid="structPossibleTag" kind="struct"><name>PossibleTag</name>
    <member refid="structPossibleTag_1a8c69b59e1e75a5f80623cce26baacabb" kind="variable"><name>id</name></member>
    <member refid="structPossibleTag_1a822aff1087d9f91882bf45da7f129e75" kind="variable"><name>ind</name></member>
    <member refid="structPossibleTag_1a26244f2c445f233652e4c3ffebafa894" kind="variable"><name>sent_num</name></member>
    <member refid="structPossibleTag_1a25eb72efa84dc8e030a928c091391609" kind="variable"><name>group</name></member>
    <member refid="structPossibleTag_1afcfa2ffd67a92a564d5c16aa3945b8a0" kind="variable"><name>group_name</name></member>
    <member refid="structPossibleTag_1adc65412fc67deda1ac5554fdbb0264d2" kind="variable"><name>training_count</name></member>
    <member refid="structPossibleTag_1ae933b21144c99f1197a5254e8ceb1c7c" kind="variable"><name>test_count</name></member>
    <member refid="structPossibleTag_1a63f51fa07de58355955633c1fc5ec5c7" kind="function"><name>weight_id</name></member>
    <member refid="structPossibleTag_1a83442edca34aefb4376d36dee744a28b" kind="function"><name>operator&lt;</name></member>
  </compound>
  <compound refid="classPottsModelBuilderLP" kind="class"><name>PottsModelBuilderLP</name>
    <member refid="classPottsModelBuilderLP_1a07e4370fc266d975e385dda8f46eb003" kind="variable"><name>_potts</name></member>
    <member refid="classPottsModelBuilderLP_1af62f78dc2bdeb5b4d39444c47f8ad341" kind="function"><name>add_potts</name></member>
  </compound>
  <compound refid="structPottsModelLP" kind="struct"><name>PottsModelLP</name>
    <member refid="structPottsModelLP_1ac572d15bc61963f636a39e752951cf31" kind="variable"><name>node_vars</name></member>
    <member refid="structPottsModelLP_1a00e3418b717ea5c1a0334dc30dafcdcc" kind="variable"><name>edge_vars</name></member>
    <member refid="structPottsModelLP_1ad829fe7b19ca64ae117303082784d110" kind="variable"><name>potts</name></member>
    <member refid="structPottsModelLP_1af041b236eacf847879e1a2ba53b6e987" kind="function"><name>PottsModelLP</name></member>
  </compound>
  <compound refid="classstd_1_1priority__queue" kind="class"><name>std::priority_queue</name>
    <member refid="classstd_1_1priority__queue_1a4df2ae826d2b2caf4a6755adbd34a836" kind="variable"><name>elements</name></member>
  </compound>
  <compound refid="classstd_1_1queue" kind="class"><name>std::queue</name>
    <member refid="classstd_1_1queue_1aebacc4dcb935c5e54144e881eb41e356" kind="variable"><name>elements</name></member>
  </compound>
  <compound refid="structScarab_1_1HG_1_1QueueHyp" kind="struct"><name>Scarab::HG::QueueHyp</name>
    <member refid="structScarab_1_1HG_1_1QueueHyp_1ae3368ba62dae4842a83766b44bcda346" kind="variable"><name>h</name></member>
    <member refid="structScarab_1_1HG_1_1QueueHyp_1ab4c4483fa92ecb415def41f5ed366e53" kind="variable"><name>score</name></member>
    <member refid="structScarab_1_1HG_1_1QueueHyp_1ae151535de5fa3bb2cfe44dade082c613" kind="variable"><name>where</name></member>
    <member refid="structScarab_1_1HG_1_1QueueHyp_1a8a243283cfe137096b0d38595c3a5a25" kind="function"><name>QueueHyp</name></member>
    <member refid="structScarab_1_1HG_1_1QueueHyp_1a165e60736b23d97bec8cdaff7c742db7" kind="function"><name>QueueHyp</name></member>
    <member refid="structScarab_1_1HG_1_1QueueHyp_1aa02f7835d0dd0d00cc5f00ff7430ddf3" kind="function"><name>operator&lt;</name></member>
  </compound>
  <compound refid="classstd_1_1range__error" kind="class"><name>std::range_error</name>
  </compound>
  <compound refid="classstd_1_1wstring_1_1reverse__iterator" kind="class"><name>std::wstring::reverse_iterator</name>
  </compound>
  <compound refid="classstd_1_1list_1_1reverse__iterator" kind="class"><name>std::list::reverse_iterator</name>
  </compound>
  <compound refid="classstd_1_1multimap_1_1reverse__iterator" kind="class"><name>std::multimap::reverse_iterator</name>
  </compound>
  <compound refid="classstd_1_1set_1_1reverse__iterator" kind="class"><name>std::set::reverse_iterator</name>
  </compound>
  <compound refid="classstd_1_1multiset_1_1reverse__iterator" kind="class"><name>std::multiset::reverse_iterator</name>
  </compound>
  <compound refid="classstd_1_1vector_1_1reverse__iterator" kind="class"><name>std::vector::reverse_iterator</name>
  </compound>
  <compound refid="classstd_1_1map_1_1reverse__iterator" kind="class"><name>std::map::reverse_iterator</name>
  </compound>
  <compound refid="classstd_1_1deque_1_1reverse__iterator" kind="class"><name>std::deque::reverse_iterator</name>
  </compound>
  <compound refid="classstd_1_1string_1_1reverse__iterator" kind="class"><name>std::string::reverse_iterator</name>
  </compound>
  <compound refid="classstd_1_1basic__string_1_1reverse__iterator" kind="class"><name>std::basic_string::reverse_iterator</name>
  </compound>
  <compound refid="classstd_1_1runtime__error" kind="class"><name>std::runtime_error</name>
  </compound>
  <compound refid="classstd_1_1set" kind="class"><name>std::set</name>
    <member refid="classstd_1_1set_1a7f92ca6d6e5216b9c4be631bd87f1df4" kind="variable"><name>keys</name></member>
  </compound>
  <compound refid="structSpan" kind="struct"><name>Span</name>
    <member refid="structSpan_1a383594a5e203891204e7fa5849b48e78" kind="variable"><name>start</name></member>
    <member refid="structSpan_1ab1d7ba41653ccb2e46cf061c4a476f1d" kind="variable"><name>end</name></member>
    <member refid="structSpan_1a8637010e702d0acf63cdf790ad49c83e" kind="variable"><name>size</name></member>
    <member refid="structSpan_1aa5fb6e25d5c38cd540cc82ca179c82f2" kind="function"><name>Span</name></member>
    <member refid="structSpan_1af6e7cf8f52e52996cf52bd7d702e9744" kind="function"><name>name</name></member>
    <member refid="structSpan_1acebe6ab7baeb922c9c69aac317bbcb7a" kind="function"><name>operator==</name></member>
    <member refid="structSpan_1a413ed85231167a494dafeaea71fb4ae0" kind="function"><name>operator&lt;</name></member>
  </compound>
  <compound refid="classSplitController" kind="class"><name>SplitController</name>
    <member refid="classSplitController_1ae1ad62201240e51b52b4957fb8101ea2" kind="variable"><name>_subproblem</name></member>
    <member refid="classSplitController_1a06e33e7c7eff6adff055f52e22ca2092" kind="variable"><name>_lattice</name></member>
    <member refid="classSplitController_1a71a37aa3ec641570afe69ada1732be3a" kind="variable"><name>_two_classes</name></member>
    <member refid="classSplitController_1adb9c7cfc1d0430277b7c2b93ba7dd058" kind="variable"><name>_classes</name></member>
    <member refid="classSplitController_1a11ab6a9279368440a6309ce9fe3fa029" kind="variable"><name>_inner_projection</name></member>
    <member refid="classSplitController_1a511e733b586a24c2cad5ba16a6cb381b" kind="function"><name>SplitController</name></member>
    <member refid="classSplitController_1ac01bf4220c60c35f6862160dc7fcacc7" kind="function"><name>project_word</name></member>
    <member refid="classSplitController_1a272757bbbfaa9af9d2ee2262b03ef131" kind="function"><name>size</name></member>
    <member refid="classSplitController_1ad2aeeafdc31d48526be15a1b1a2e9931" kind="function"><name>dim</name></member>
    <member refid="classSplitController_1a6ac91d8fd5fef735c6572c420a05bda4" kind="function"><name>initialize_hypotheses</name></member>
    <member refid="classSplitController_1a58e535837326d733c98a193f2c7584c6" kind="function"><name>initialize_out_root</name></member>
    <member refid="classSplitController_1a2138b9bac43d19896f2bff71a619e9af" kind="function"><name>find_best</name></member>
  </compound>
  <compound refid="classSplitHeuristic" kind="class"><name>SplitHeuristic</name>
    <member refid="classSplitHeuristic_1aeaf44350dbd9f28bbcf6d99f9a7cb65f" kind="variable"><name>_outside_scores</name></member>
    <member refid="classSplitHeuristic_1a65f473db60e7ae2f318b987695a0a079" kind="variable"><name>_outside_edge_scores</name></member>
    <member refid="classSplitHeuristic_1a8f58e4a4833f73460e2b2fb9c38448f1" kind="function"><name>SplitHeuristic</name></member>
    <member refid="classSplitHeuristic_1a0080cc4428de2635263f31d7931c3066" kind="function"><name>lower_id</name></member>
    <member refid="classSplitHeuristic_1a7117c99ce380835ed38aa02f82f8a04e" kind="function"><name>has_value</name></member>
    <member refid="classSplitHeuristic_1ab64ec7cde28b49828bcde1ad97862cc2" kind="function"><name>get_value</name></member>
  </compound>
  <compound refid="classstd_1_1stack" kind="class"><name>std::stack</name>
    <member refid="classstd_1_1stack_1a020dde37186e898d2aacda2c136aef0f" kind="variable"><name>elements</name></member>
  </compound>
  <compound refid="structScarab_1_1HG_1_1State" kind="struct"><name>Scarab::HG::State</name>
    <member refid="structScarab_1_1HG_1_1State_1a1c516b546a5e3de3a5f9bb8f39a3cf20" kind="variable"><name>_state</name></member>
    <member refid="structScarab_1_1HG_1_1State_1ae3d755b161845bd295deae4096d4c9f8" kind="variable"><name>_dim</name></member>
    <member refid="structScarab_1_1HG_1_1State_1a141bd78c0cfc381acd28ba2b1a439bd5" kind="function"><name>State</name></member>
    <member refid="structScarab_1_1HG_1_1State_1a61592030e999341da1e674274db11307" kind="function"><name>State</name></member>
    <member refid="structScarab_1_1HG_1_1State_1a6597ae0951c6d0c9146ae6bd5b91b52f" kind="function"><name>project</name></member>
    <member refid="structScarab_1_1HG_1_1State_1ac7f5641edb1dd813dcac3b76be28d305" kind="function"><name>id</name></member>
    <member refid="structScarab_1_1HG_1_1State_1a17d205eca9f3be9c01c7d41e3fe4d809" kind="function"><name>operator==</name></member>
    <member refid="structScarab_1_1HG_1_1State_1acd8ef3e5bd73ec5034de0d70f2bb2492" kind="function"><name>compatible</name></member>
    <member refid="structScarab_1_1HG_1_1State_1abadb936b551a91d952af74b3bfc7d43d" kind="function"><name>operator&lt;</name></member>
    <member refid="structScarab_1_1HG_1_1State_1afc65eeacc345b5396a673e4328cccc11" kind="function"><name>possible_states</name></member>
    <member refid="structScarab_1_1HG_1_1State_1a353ffb342165fcaec0e812d0288fc329" kind="friend"><name>operator&lt;&lt;</name></member>
  </compound>
  <compound refid="structState" kind="struct"><name>State</name>
    <member refid="structState_1ae0482e3d4b3db023647833efd344831a" kind="variable"><name>_id</name></member>
    <member refid="structState_1a1bf6100c59d50bc94ba781230a85a2e5" kind="variable"><name>_label</name></member>
    <member refid="structState_1ab91bb1dd5aa6260ab2a456581daf9ec2" kind="function"><name>State</name></member>
    <member refid="structState_1aa536880320a9aff707fb1e6aab3f58d4" kind="function"><name>State</name></member>
    <member refid="structState_1aea25c6702974d1ac86358b4ba96d7891" kind="function"><name>id</name></member>
    <member refid="structState_1a2809d0a34cd576cc5daaa7a6d0ffb2b5" kind="function"><name>label</name></member>
    <member refid="structState_1a6687a56382a022034927ba43aad39524" kind="function"><name>operator==</name></member>
  </compound>
  <compound refid="classStoreCache" kind="class"><name>StoreCache</name>
    <member refid="classStoreCache_1a99393733357e04fe79cf703d3f4d8f44" kind="variable"><name>store</name></member>
    <member refid="classStoreCache_1a0df08d5576ce34c4a8fd4f7428fd9ad3" kind="variable"><name>full_keys</name></member>
    <member refid="classStoreCache_1acdfad2c43fd63e37fbb818ce282f6493" kind="variable"><name>has_value</name></member>
    <member refid="classStoreCache_1afb884936a49c7849dfb70ea1853ad475" kind="function"><name>StoreCache</name></member>
    <member refid="classStoreCache_1adeb02113caf8141430705ec5bab08a54" kind="function"><name>StoreCache</name></member>
    <member refid="classStoreCache_1a5aaafba803337cf3547159a6ac70a0ab" kind="function"><name>resize</name></member>
    <member refid="classStoreCache_1aa4673d48544458b6b05770fe5970d961" kind="function"><name>size</name></member>
    <member refid="classStoreCache_1a455dbf75e40300745b354fdcc039279a" kind="function"><name>get_value</name></member>
    <member refid="classStoreCache_1a23309f685f0ba18912dcc2e8643de932" kind="function"><name>set_value</name></member>
    <member refid="classStoreCache_1aa1289fedb472667dfa926c1e00f22b95" kind="function"><name>has_key</name></member>
    <member refid="classStoreCache_1ad358ce23080bb52db50a55db583f1bba" kind="function"><name>has_key</name></member>
  </compound>
  <compound refid="classstd_1_1string" kind="class"><name>std::string</name>
  </compound>
  <compound refid="classstd_1_1stringstream" kind="class"><name>std::stringstream</name>
  </compound>
  <compound refid="classSubgradient" kind="class"><name>Subgradient</name>
    <member refid="classSubgradient_1a88347b2c4a5d5a643627c6c8dfdbcdaa" kind="variable"><name>_s</name></member>
    <member refid="classSubgradient_1ab50bf6b0acbb14a28eca8b947f27d612" kind="variable"><name>_best_dual</name></member>
    <member refid="classSubgradient_1a231a4eb7c3b0f930b0fa81f0de1f8d29" kind="variable"><name>_best_primal</name></member>
    <member refid="classSubgradient_1aba5388f4a5ade209a77b8bca506a731b" kind="variable"><name>_aggressive</name></member>
    <member refid="classSubgradient_1a3ed16d78518639acd2e4604d719935ef" kind="variable"><name>_round</name></member>
    <member refid="classSubgradient_1a59afd778db8cc5ee6080a92f3c9bcc64" kind="variable"><name>_nround</name></member>
    <member refid="classSubgradient_1a2f16a5d5288a863713f829fb16b78c94" kind="variable"><name>_weights</name></member>
    <member refid="classSubgradient_1aa9e8bd34a5b6d24b98de013e13b99964" kind="variable"><name>_primals</name></member>
    <member refid="classSubgradient_1a2e3196245add6fa4fe2b457cb77180f2" kind="variable"><name>_duals</name></member>
    <member refid="classSubgradient_1a841f2111eeb065d8f5ef538a8acf0f15" kind="variable"><name>_base_weight</name></member>
    <member refid="classSubgradient_1a2d9a60a123373c9c0ad689b5f9e4a05c" kind="variable"><name>_is_stuck</name></member>
    <member refid="classSubgradient_1a69bc590d6faae68a5cfb595d304a2888" kind="variable"><name>_first_stuck_iteration</name></member>
    <member refid="classSubgradient_1a7d6039d1171a4078846c2a39b24899d2" kind="variable"><name>_best_primal_iteration</name></member>
    <member refid="classSubgradient_1a2509e39964e1280532fd4994b3d747ce" kind="function"><name>Subgradient</name></member>
    <member refid="classSubgradient_1a183205851cdb362195baf914fb8d3ae0" kind="function"><name>solve</name></member>
    <member refid="classSubgradient_1a54907389766b702c467cf2ab20f8d051" kind="function"><name>is_stuck</name></member>
    <member refid="classSubgradient_1ab3b69803497f6094e772bbfb2060cb3c" kind="function"><name>run_one_round</name></member>
    <member refid="classSubgradient_1ad0527ea2ff5d2f25f7a0df2d6d43aa6d" kind="function"><name>update_weights</name></member>
  </compound>
  <compound refid="classSubgradientProducer" kind="class"><name>SubgradientProducer</name>
    <member refid="classSubgradientProducer_1acea0e6ef35f9f3fd2f14872740471628" kind="function"><name>solve</name></member>
    <member refid="classSubgradientProducer_1a5b471526b337913722f56221b2461d89" kind="function"><name>update_weights</name></member>
  </compound>
  <compound refid="classSubproblem" kind="class"><name>Subproblem</name>
    <member refid="classSubproblem_1aac90e8ff8e757aa0c68fc619c547f58e" kind="variable"><name>_first_time_proj</name></member>
    <member refid="classSubproblem_1a6e1a534d1d46267855aca38f8ff32117" kind="variable"><name>cur_best_count</name></member>
    <member refid="classSubproblem_1a8f5433f085509c9b756647fd7a4a1258" kind="variable"><name>projection</name></member>
    <member refid="classSubproblem_1ae8aa19f592682ec439282eb4b4ea658c" kind="variable"><name>cur_best_at_bi</name></member>
    <member refid="classSubproblem_1a0b32d5edf6826eeaef44fa7f87ea4738" kind="variable"><name>cur_best_at_bi_score</name></member>
    <member refid="classSubproblem_1a01f322bfc4840e58dcabf54de6929a13" kind="variable"><name>cur_best_bi_projection</name></member>
    <member refid="classSubproblem_1afb2f2cc06a01d6a352207ed518fee5b8" kind="variable"><name>cur_best_bi_projection_first</name></member>
    <member refid="classSubproblem_1a99269ee5048becf3535b21290d4d6a79" kind="variable"><name>cur_best_bi_projection_score</name></member>
    <member refid="classSubproblem_1a4f61c01d8061ff6e540b77701f11f7ca" kind="variable"><name>cur_best_tri_projection</name></member>
    <member refid="classSubproblem_1a4262aed363f1e021f92b7d391018da17" kind="variable"><name>cur_best_tri_projection_first</name></member>
    <member refid="classSubproblem_1a9ba71979483a60c3dd1ec1f2bdda0406" kind="variable"><name>cur_best_tri_projection_score</name></member>
    <member refid="classSubproblem_1a3a9a08474f52791f4e415ccb5a82bf4a" kind="variable"><name>cur_best_tri_projection_is_new</name></member>
    <member refid="classSubproblem_1a5cd02f92aec0f5679528a2704713d722" kind="variable"><name>cur_best_score</name></member>
    <member refid="classSubproblem_1a411f76917d16dc2d46332170c6028d39" kind="variable"><name>cur_best_one</name></member>
    <member refid="classSubproblem_1a6a80babf2d5b64a248a2601dd64dca83" kind="variable"><name>cur_best_two</name></member>
    <member refid="classSubproblem_1ac346c40eeb09d322d06a22236eabd839" kind="variable"><name>first_time</name></member>
    <member refid="classSubproblem_1a540fc361669695cfa02c13608648436f" kind="variable"><name>best_lm_score</name></member>
    <member refid="classSubproblem_1aa54b303bc7f0dea332985943df9d7387" kind="variable"><name>bigram_score_cache</name></member>
    <member refid="classSubproblem_1ad2c106f2938814c7a0dcbd8304f5136b" kind="variable"><name>backoff_score_cache</name></member>
    <member refid="classSubproblem_1a016f7d75e40b30d7415b4143019cdfac" kind="variable"><name>bigram_weight_cache_one</name></member>
    <member refid="classSubproblem_1a52ddca940d8bc6eeba11331c29ef0d60" kind="variable"><name>bigram_weight_cache_two</name></member>
    <member refid="classSubproblem_1a30d8d310daebe0b4ae49d745dfc058b2" kind="variable"><name>bigram_in_lm</name></member>
    <member refid="classSubproblem_1a9e11271c97d355302e611a1e4ca5c7d7" kind="variable"><name>forward_trigrams</name></member>
    <member refid="classSubproblem_1a5bb738b4a6ab66dc955b0730c6efa7bc" kind="variable"><name>forward_trigrams_score</name></member>
    <member refid="classSubproblem_1a56565336347e92bfe2c1da5528a15a88" kind="variable"><name>graph</name></member>
    <member refid="classSubproblem_1a129e781c3e40b205f2b07ff01abf20c4" kind="variable"><name>lm</name></member>
    <member refid="classSubproblem_1a2f92cf122793421cfd6a671eba4d9b4a" kind="variable"><name>gd</name></member>
    <member refid="classSubproblem_1afa9440dbccbbd613893500eb172d6222" kind="variable"><name>_word_node_cache</name></member>
    <member refid="classSubproblem_1a255151c68d10129530611f0341524749" kind="variable"><name>bi_rescore_first</name></member>
    <member refid="classSubproblem_1a3e144fc8c55d2f7ab12f6512d1c6fcb0" kind="variable"><name>bi_rescore_two</name></member>
    <member refid="classSubproblem_1ab162552f8af9ee111227f6ec30b7a4f5" kind="variable"><name>overridden</name></member>
    <member refid="classSubproblem_1aa981fb8aa661221937b3cd021d72c396" kind="variable"><name>projection_dims</name></member>
    <member refid="classSubproblem_1a0731d27c3c4c516126f7ae5cbf0e892f" kind="function"><name>solve_proj</name></member>
    <member refid="classSubproblem_1abadb1a6c35161686af3460076c4651b3" kind="function"><name>fixed_last_bigram</name></member>
    <member refid="classSubproblem_1a1f76e6e7b079168299046c42e484c9cf" kind="function"><name>overridden_by</name></member>
    <member refid="classSubproblem_1aba36ea76049a46e9ba1f0ac3ccec540a" kind="function"><name>project</name></member>
    <member refid="classSubproblem_1a7c86b92cc388505602707376e52a0804" kind="function"><name>project_word</name></member>
    <member refid="classSubproblem_1a3f6d78f4567e70c35785d27a53a55490" kind="function"><name>separate</name></member>
    <member refid="classSubproblem_1a503126c48810484433fd6c3e428f6537" kind="function"><name>projection_with_constraints</name></member>
    <member refid="classSubproblem_1a4c12e798de9d3e96d6935bd755f92a97" kind="function"><name>best_one</name></member>
    <member refid="classSubproblem_1abf452bcac2a8a28adbdbffe402e64dde" kind="function"><name>best_two</name></member>
    <member refid="classSubproblem_1a80e4996ec87d5c3501ef10abdd953260" kind="function"><name>best_score_dim</name></member>
    <member refid="classSubproblem_1a2e2a665cfdb9208f753eef143147d66c" kind="function"><name>best_score_dim_min</name></member>
    <member refid="classSubproblem_1a2b43a2a68724d8eb624f6d81a7745b70" kind="function"><name>is_new_dim</name></member>
    <member refid="classSubproblem_1a8359ae9db4d8a830d390312bc57eef6f" kind="function"><name>best_score</name></member>
    <member refid="classSubproblem_1ae6b6a16e00079ebd5b56acbdfdaf3aab" kind="function"><name>Subproblem</name></member>
    <member refid="classSubproblem_1adf6eb478907ed5c7c9f08a3cfcdfec76" kind="function"><name>update_weights</name></member>
    <member refid="classSubproblem_1a27c807a807f154ea28e7da7692466638" kind="function"><name>solve</name></member>
    <member refid="classSubproblem_1a8220595977ed219234d36dfadd0dde82" kind="function"><name>initialize_caches</name></member>
    <member refid="classSubproblem_1a9c57f3bd41e2788d9f393db8bbbe26ef" kind="function"><name>get_best_nodes_between</name></member>
    <member refid="classSubproblem_1a3c426fd46fcacefc561b68f0fc111795" kind="function"><name>get_best_bigram_weight</name></member>
    <member refid="classSubproblem_1adfba5511e1f004b989f7b2e03d998c4e" kind="function"><name>primal_score</name></member>
    <member refid="classSubproblem_1ab5e3b5e167561a79da1d815af120b6bd" kind="function"><name>word_prob</name></member>
    <member refid="classSubproblem_1acc456e9852f19058da2d884feec15679" kind="function"><name>word_backoff</name></member>
    <member refid="classSubproblem_1afd0b98fea6ebb39ae5ad46d1010cb6a3" kind="function"><name>word_backoff_two</name></member>
    <member refid="classSubproblem_1a32718cd109a52be59a7eecd3dc5f4c8a" kind="function"><name>word_prob_reverse</name></member>
    <member refid="classSubproblem_1ab612e729dd11b5ac27ce9f67e0135c0a" kind="function"><name>word_prob_bigram_reverse</name></member>
    <member refid="classSubproblem_1a522f5f38fddff38424fe3958104a9612" kind="function"><name>word_bow_reverse</name></member>
    <member refid="classSubproblem_1a1bce1ad18ee9c123677f39cccda7feb5" kind="function"><name>word_bow_bigram_reverse</name></member>
  </compound>
  <compound refid="structTag" kind="struct"><name>Tag</name>
    <member refid="structTag_1a072cbc6c6ac82c2398ad409a5eb28b71" kind="variable"><name>ind</name></member>
    <member refid="structTag_1a7b67562e1a664c9fed9afb74902b0fe5" kind="variable"><name>length</name></member>
    <member refid="structTag_1a5f97e5e57a82b467da83f2990a276e81" kind="variable"><name>tag</name></member>
    <member refid="structTag_1acb96fe3a41181e0e10628ae00fe63878" kind="variable"><name>MAX_TAG</name></member>
    <member refid="structTag_1a5cc9a25145063597a4335a2db3a2a452" kind="variable"><name>_id</name></member>
    <member refid="structTag_1af2008705aa18e21efecb9e737b6b1a26" kind="function"><name>Tag</name></member>
    <member refid="structTag_1ab32833339e272705062ac1a5d5f1ca10" kind="function"><name>Tag</name></member>
    <member refid="structTag_1aed3aabe09176d4a6acbb2cc7b3170228" kind="function"><name>operator&lt;</name></member>
    <member refid="structTag_1a5458e1229013075f4597c1dba313ce83" kind="function"><name>id</name></member>
  </compound>
  <compound refid="classTagConstraints" kind="class"><name>TagConstraints</name>
    <member refid="classTagConstraints_1ad5aae083cb84eff2294ca7fbbd63cb67" kind="variable"><name>_constraint_struct</name></member>
    <member refid="classTagConstraints_1aba1f64a190bc4144fea14f01fe82ecc3" kind="variable"><name>groups</name></member>
    <member refid="classTagConstraints_1a83e2347bf237b00f02dc872c19fd4516" kind="variable"><name>_constrained_words</name></member>
    <member refid="classTagConstraints_1a29576d5022d4c5d03e6c8723669c3679" kind="variable"><name>_all_constraints</name></member>
    <member refid="classTagConstraints_1a8885071b73e699061347d17af6d9aa20" kind="variable"><name>_num_tags</name></member>
    <member refid="classTagConstraints_1a58a2e5245400d411de24e36534d11945" kind="function"><name>TagConstraints</name></member>
    <member refid="classTagConstraints_1adec1a1de8fb49e79b52c4c93517414a0" kind="function"><name>build_tagger_constraint_vector</name></member>
    <member refid="classTagConstraints_1acec3818d7505e9147828ab7cb3863001" kind="function"><name>build_tagger_subgradient</name></member>
    <member refid="classTagConstraints_1a8b8df130795f2fbc1ce2aac375dfc00a" kind="function"><name>read_from_file</name></member>
    <member refid="classTagConstraints_1a3e490a8d4d335ed4d04803fab0a82871" kind="function"><name>solve_hard</name></member>
  </compound>
  <compound refid="classTagger" kind="class"><name>Tagger</name>
    <member refid="classTagger_1a4bf3332c608c078cbb2d5692c4f13b43" kind="variable"><name>num_tag</name></member>
    <member refid="classTagger_1ac8ed2492ae2ce36f4ce83bd7a545c9fc" kind="variable"><name>_sent_length</name></member>
    <member refid="classTagger_1a106632ffd00a38af99be57e0cf963a7e" kind="variable"><name>_tag_length</name></member>
    <member refid="classTagger_1aac55f3e2b9e6158c0c446d154ba3cf3f" kind="variable"><name>_h</name></member>
    <member refid="classTagger_1ac0b735700c16a29bfe6c06a89b4bc5e0" kind="variable"><name>_edge_map</name></member>
    <member refid="classTagger_1a55fd768226a8ac0f955a614c0834719d" kind="variable"><name>_tag_map</name></member>
    <member refid="classTagger_1a33ee2966e5dd9a6c4177105d3539fa26" kind="variable"><name>_tags</name></member>
    <member refid="classTagger_1a6e812fd7e339a21155f7b30f04292be1" kind="function"><name>Tagger</name></member>
    <member refid="classTagger_1a6d4836101f4e024ecd44a041f60499c2" kind="function"><name>~Tagger</name></member>
    <member refid="classTagger_1a4ebe0aebd7c0392970b401a5a6c6cd72" kind="function"><name>print</name></member>
    <member refid="classTagger_1afafa6e435d17467db344ca615f24746f" kind="function"><name>set_up</name></member>
    <member refid="classTagger_1ad694ed218149b86c4ef5253328a41c49" kind="function"><name>hypergraph</name></member>
    <member refid="classTagger_1ae1e3802fb545c3430ca4d52ea5fd95db" kind="function"><name>tags</name></member>
    <member refid="classTagger_1a5da221998377bf36c84013ba0d471b36" kind="function"><name>num_tags</name></member>
    <member refid="classTagger_1ae762dd21f446b9ec618b0b83204bdc2e" kind="function"><name>sent_length</name></member>
    <member refid="classTagger_1af01daf511528271a118a281b8595e0df" kind="function"><name>make_tag</name></member>
    <member refid="classTagger_1a26472c386e7f5eebcb05c9d1843c1975" kind="function"><name>tag_to_edge</name></member>
    <member refid="classTagger_1ae270a5be64b93945c180996aedcf6372" kind="function"><name>tag_has_edge</name></member>
    <member refid="classTagger_1ad615c8356f380baab01ae6675a25c409" kind="function"><name>edge_to_tag</name></member>
    <member refid="classTagger_1ad7f1dda6082e71cd113a3d77e9c33275" kind="function"><name>edge_has_tag</name></member>
    <member refid="classTagger_1a305fd4cf75f2149a57109772e195eb47" kind="function"><name>make_edge</name></member>
  </compound>
  <compound refid="classTaggerDual" kind="class"><name>TaggerDual</name>
    <member refid="classTaggerDual_1a0068b276abb09b34ab08e9cc14947ee3" kind="variable"><name>_taggers</name></member>
    <member refid="classTaggerDual_1a0073fa0f694790d365ca959ed8386e26" kind="variable"><name>_base_weights</name></member>
    <member refid="classTaggerDual_1ab8845276b234c329c967529091f51e8f" kind="variable"><name>_tag_constraints</name></member>
    <member refid="classTaggerDual_1a9974a79ebf2547f3e80e9d68d06b49be" kind="variable"><name>_cur_weights</name></member>
    <member refid="classTaggerDual_1a57232f5a7702b7715f8517d408086dbe" kind="variable"><name>_subgrad_cache</name></member>
    <member refid="classTaggerDual_1a47cdc599b2c73836f33aa443053e3534" kind="variable"><name>_primal_cache</name></member>
    <member refid="classTaggerDual_1a4472c903ae391e7cc4912bc473a9eae2" kind="variable"><name>_dual_cache</name></member>
    <member refid="classTaggerDual_1a259d5ef5c5020c75a68527950ff41310" kind="variable"><name>_dirty_cache</name></member>
    <member refid="classTaggerDual_1a2b16f45c3550e4f4871841c9ee02de4f" kind="function"><name>TaggerDual</name></member>
    <member refid="classTaggerDual_1a047785058d058492172280e50a8f4c1a" kind="function"><name>solve</name></member>
    <member refid="classTaggerDual_1a01f7705a69c7cc993268c6e66df57ae0" kind="function"><name>update_weights</name></member>
  </compound>
  <compound refid="structTagIndex" kind="struct"><name>TagIndex</name>
    <member refid="structTagIndex_1a9bde045f6de7e99933920b883af894dc" kind="variable"><name>sent_num</name></member>
    <member refid="structTagIndex_1ac9cd159e647314e5beaf7af6da56fa6e" kind="variable"><name>ind</name></member>
    <member refid="structTagIndex_1a1182f316658b96f36ecd7689d790f508" kind="variable"><name>tag</name></member>
    <member refid="structTagIndex_1a31447fe5afbdaeae750e186099c727ce" kind="function"><name>TagIndex</name></member>
    <member refid="structTagIndex_1a30a1bf326d593304ac3d950fd2b8be92" kind="function"><name>TagIndex</name></member>
    <member refid="structTagIndex_1a7b858bbf2ed8ed6bb56d87db8d38aaf2" kind="function"><name>operator&lt;</name></member>
  </compound>
  <compound refid="structScarab_1_1HG_1_1TagLP" kind="struct"><name>Scarab::HG::TagLP</name>
    <member refid="structScarab_1_1HG_1_1TagLP_1a4e80b783a5dfce94abb94cb957a3fe50" kind="variable"><name>tag_vars</name></member>
    <member refid="structScarab_1_1HG_1_1TagLP_1a137ec6055ea83b552c873dd19f203c15" kind="variable"><name>p</name></member>
    <member refid="structScarab_1_1HG_1_1TagLP_1a92b885535389aa44e450e8f4682bf543" kind="variable"><name>h_lp</name></member>
    <member refid="structScarab_1_1HG_1_1TagLP_1a529942132dc8900bd25d2acaef721694" kind="function"><name>TagLP</name></member>
  </compound>
  <compound refid="classScarab_1_1HG_1_1TagLPBuilder" kind="class"><name>Scarab::HG::TagLPBuilder</name>
    <member refid="classScarab_1_1HG_1_1TagLPBuilder_1aa4990c224df5a1c82220a655ee51bd73" kind="function"><name>show_results</name></member>
    <member refid="classScarab_1_1HG_1_1TagLPBuilder_1a9c0f3ee542cbbed34945b80932272cea" kind="function"><name>add_tagging</name></member>
  </compound>
  <compound refid="classTagMrfAligner" kind="class"><name>TagMrfAligner</name>
    <member refid="classTagMrfAligner_1a8a5d34bcfecdfb8c3901297ad34e301d" kind="variable"><name>mrf_models</name></member>
    <member refid="classTagMrfAligner_1ae20f5a7d1131701986a36b70dca2c26f" kind="variable"><name>tag_constraints</name></member>
    <member refid="classTagMrfAligner_1ae26a953cc83027d6b47464a166a302c4" kind="variable"><name>alignment</name></member>
    <member refid="classTagMrfAligner_1ae2bae21b52efb547b46f2da80f61ec42" kind="function"><name>build_from_constraints</name></member>
    <member refid="classTagMrfAligner_1a5b6ecf59596d656333f8113f6f05eba4" kind="function"><name>align</name></member>
  </compound>
  <compound refid="classTagMrfLP" kind="class"><name>TagMrfLP</name>
    <member refid="classTagMrfLP_1a7f9f963c533c5c712acca41db36f9a5a" kind="function"><name>align_tag_mrf</name></member>
  </compound>
  <compound refid="classstd_1_1underflow__error" kind="class"><name>std::underflow_error</name>
  </compound>
  <compound refid="classstd_1_1valarray" kind="class"><name>std::valarray</name>
    <member refid="classstd_1_1valarray_1adce3a23af4e9d36342f49f58300d8568" kind="variable"><name>elements</name></member>
  </compound>
  <compound refid="classstd_1_1vector" kind="class"><name>std::vector</name>
    <member refid="classstd_1_1vector_1a2396209900e8f592db1f0b2467f7d899" kind="variable"><name>elements</name></member>
  </compound>
  <compound refid="classstd_1_1wfstream" kind="class"><name>std::wfstream</name>
  </compound>
  <compound refid="classstd_1_1wifstream" kind="class"><name>std::wifstream</name>
  </compound>
  <compound refid="classstd_1_1wios" kind="class"><name>std::wios</name>
  </compound>
  <compound refid="classstd_1_1wistream" kind="class"><name>std::wistream</name>
  </compound>
  <compound refid="classstd_1_1wistringstream" kind="class"><name>std::wistringstream</name>
  </compound>
  <compound refid="classstd_1_1wofstream" kind="class"><name>std::wofstream</name>
  </compound>
  <compound refid="classstd_1_1wostream" kind="class"><name>std::wostream</name>
  </compound>
  <compound refid="classstd_1_1wostringstream" kind="class"><name>std::wostringstream</name>
  </compound>
  <compound refid="classstd_1_1wstring" kind="class"><name>std::wstring</name>
  </compound>
  <compound refid="classstd_1_1wstringstream" kind="class"><name>std::wstringstream</name>
  </compound>
  <compound refid="namespacegoogle_1_1protobuf_1_1io" kind="namespace"><name>google::protobuf::io</name>
  </compound>
  <compound refid="namespaceHGraph" kind="namespace"><name>HGraph</name>
  </compound>
  <compound refid="namespacelattice" kind="namespace"><name>lattice</name>
  </compound>
  <compound refid="namespaceScarab" kind="namespace"><name>Scarab</name>
  </compound>
  <compound refid="namespaceScarab_1_1Graph" kind="namespace"><name>Scarab::Graph</name>
    <member refid="namespaceScarab_1_1Graph_1a0412fb5d233992662e7e1bb0291d3cff" kind="typedef"><name>Node</name></member>
    <member refid="namespaceScarab_1_1Graph_1a0d7265df2afd7c63283a6c7037dd6189" kind="typedef"><name>Nodes</name></member>
    <member refid="namespaceScarab_1_1Graph_1a550dee05640e20c793b502a1bd4a1bb2" kind="typedef"><name>Edge</name></member>
    <member refid="namespaceScarab_1_1Graph_1a82cf7f47e7f786e0c3f6945c53bd09ab" kind="typedef"><name>Edges</name></member>
  </compound>
  <compound refid="namespaceScarab_1_1HG" kind="namespace"><name>Scarab::HG</name>
    <member refid="namespaceScarab_1_1HG_1a5528e0d3bd50063fe07e5862b6afba0c" kind="enum"><name>loc</name></member>
    <member refid="namespaceScarab_1_1HG_1a5528e0d3bd50063fe07e5862b6afba0ca12ffd636a7b518de8bbd0bef7b8eb349" kind="enumvalue"><name>NODE</name></member>
    <member refid="namespaceScarab_1_1HG_1a5528e0d3bd50063fe07e5862b6afba0ca40994ba9f4bc163f2458d3bfe918a207" kind="enumvalue"><name>EDGE</name></member>
    <member refid="namespaceScarab_1_1HG_1a5528e0d3bd50063fe07e5862b6afba0ca070212f77dbde76a41ae42d1d2252369" kind="enumvalue"><name>TOP</name></member>
    <member refid="namespaceScarab_1_1HG_1adea99655138afa6d110d7d7cf785cfd9" kind="typedef"><name>HNode</name></member>
    <member refid="namespaceScarab_1_1HG_1a94d129ce4ef707bde215992030c6ce60" kind="typedef"><name>HNodes</name></member>
    <member refid="namespaceScarab_1_1HG_1a008f4701675fcafa62de56dfc7c96358" kind="typedef"><name>HEdge</name></member>
    <member refid="namespaceScarab_1_1HG_1a5130d33bc3acccb9984ebdaab874edc2" kind="typedef"><name>HEdges</name></member>
    <member refid="namespaceScarab_1_1HG_1aa23f492a3408f3d8dfbfb3c154ce36e6" kind="typedef"><name>EdgeCache</name></member>
    <member refid="namespaceScarab_1_1HG_1a6ae69ff4ea527e7dc7df67f909ab2c96" kind="typedef"><name>NodeCache</name></member>
    <member refid="namespaceScarab_1_1HG_1a423a1e06b9f38f9bdc7a16bc9afffff0" kind="typedef"><name>NodeBackCache</name></member>
    <member refid="namespaceScarab_1_1HG_1a0ed3cea8e2fd5d37bc36636fac3f5ab8" kind="function"><name>extract_back_pointers</name></member>
    <member refid="namespaceScarab_1_1HG_1aa75207452ad3c7952c810cc8c2b293cf" kind="function"><name>best_path_helper</name></member>
    <member refid="namespaceScarab_1_1HG_1a28716e5ce4e4b3d9a75e794ff31b7cc4" kind="function"><name>construct_best_fringe_help</name></member>
    <member refid="namespaceScarab_1_1HG_1a44c758fbbe70bb327e25af4ff3476a50" kind="function"><name>construct_best_edges_help</name></member>
    <member refid="namespaceScarab_1_1HG_1a721ba90422314d8af3e57c1cce7a556d" kind="function"><name>construct_best_fv_help</name></member>
    <member refid="namespaceScarab_1_1HG_1a808032cb18abc8b1608232ed55ca6435" kind="function"><name>best_outside_path_helper</name></member>
    <member refid="namespaceScarab_1_1HG_1a025c87cbdb125948f20392d689cb7f8d" kind="function"><name>construct_best_node_order_help</name></member>
    <member refid="namespaceScarab_1_1HG_1ae35b363c49782df852ee7554f3ca1670" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="namespaceScarab_1_1HG_1a36ab15c48a04fb476fc4bba46050a01d" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="namespaceScarab_1_1HG_1a1a770ac0e940cc294603359adcda34e0" kind="function"><name>show_hyp</name></member>
    <member refid="namespaceScarab_1_1HG_1ab9ee4a582d251ec037f3734c745d2d9c" kind="function"><name>sync_lattice_lm</name></member>
  </compound>
  <compound refid="namespacestd" kind="namespace"><name>std</name>
  </compound>
  <compound refid="namespaceTest" kind="namespace"><name>Test</name>
  </compound>
  <compound refid="common_8h" kind="file"><name>common.h</name>
    <member refid="common_8h_1afc23d36363fbbe2abc70fc848a6513d2" kind="define"><name>LMWEIGHT</name></member>
    <member refid="common_8h_1a85d9ac269eba33293361f4ed7c2a697b" kind="define"><name>foreach</name></member>
    <member refid="common_8h_1a12c2040f25d8e3a7b9e1c2024c618cb6" kind="define"><name>INF</name></member>
    <member refid="common_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kind="typedef"><name>uint</name></member>
  </compound>
  <compound refid="CubeLM_8cpp" kind="file"><name>CubeLM.cpp</name>
    <member refid="CubeLM_8cpp_1ab2fac5a231877bc68933d8e82eb60b1b" kind="function"><name>cache_word_nodes</name></member>
    <member refid="CubeLM_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kind="function"><name>main</name></member>
  </compound>
  <compound refid="CubeLM_8h" kind="file"><name>CubeLM.h</name>
  </compound>
  <compound refid="DualDecompTagger_8cpp" kind="file"><name>DualDecompTagger.cpp</name>
    <member refid="DualDecompTagger_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kind="function"><name>main</name></member>
  </compound>
  <compound refid="FullParser_8cpp" kind="file"><name>FullParser.cpp</name>
    <member refid="FullParser_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kind="function"><name>main</name></member>
  </compound>
  <compound refid="FullTagger_8cpp" kind="file"><name>FullTagger.cpp</name>
    <member refid="FullTagger_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kind="function"><name>main</name></member>
  </compound>
  <compound refid="Graph_8cpp" kind="file"><name>Graph.cpp</name>
  </compound>
  <compound refid="Graph_8h" kind="file"><name>Graph.h</name>
  </compound>
  <compound refid="GraphProtoInterface_8cpp" kind="file"><name>GraphProtoInterface.cpp</name>
  </compound>
  <compound refid="GraphProtoInterface_8h" kind="file"><name>GraphProtoInterface.h</name>
  </compound>
  <compound refid="AStar_8cpp" kind="file"><name>AStar.cpp</name>
    <member refid="AStar_8cpp_1ad72dbcf6d0153db1b8d8a58001feed83" kind="define"><name>DEBUG</name></member>
  </compound>
  <compound refid="AStar_8h" kind="file"><name>AStar.h</name>
  </compound>
  <compound refid="BestHyp_8cpp" kind="file"><name>BestHyp.cpp</name>
  </compound>
  <compound refid="BestHyp_8h" kind="file"><name>BestHyp.h</name>
  </compound>
  <compound refid="ConvertFromFile_8cpp" kind="file"><name>ConvertFromFile.cpp</name>
    <member refid="ConvertFromFile_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kind="function"><name>main</name></member>
  </compound>
  <compound refid="CubePruning_8cpp" kind="file"><name>CubePruning.cpp</name>
  </compound>
  <compound refid="CubePruning_8h" kind="file"><name>CubePruning.h</name>
    <member refid="CubePruning_8h_1ac3223e23c29b0e24547dfca1a68ce9c6" kind="typedef"><name>Sig</name></member>
    <member refid="CubePruning_8h_1aae757cf36d2a97c6722ef2089d0f60a4" kind="typedef"><name>Candidates</name></member>
  </compound>
  <compound refid="EdgeCache_8cpp" kind="file"><name>EdgeCache.cpp</name>
  </compound>
  <compound refid="EdgeCache_8h" kind="file"><name>EdgeCache.h</name>
  </compound>
  <compound refid="ExtendCKY_8cpp" kind="file"><name>ExtendCKY.cpp</name>
    <member refid="ExtendCKY_8cpp_1ad72dbcf6d0153db1b8d8a58001feed83" kind="define"><name>DEBUG</name></member>
  </compound>
  <compound refid="ExtendCKY_8h" kind="file"><name>ExtendCKY.h</name>
  </compound>
  <compound refid="Hypergraph_8cpp" kind="file"><name>Hypergraph.cpp</name>
  </compound>
  <compound refid="Hypergraph_8h" kind="file"><name>Hypergraph.h</name>
  </compound>
  <compound refid="HypergraphAlgorithms_8cpp" kind="file"><name>HypergraphAlgorithms.cpp</name>
  </compound>
  <compound refid="HypergraphAlgorithms_8h" kind="file"><name>HypergraphAlgorithms.h</name>
  </compound>
  <compound refid="HypergraphImpl_8cpp" kind="file"><name>HypergraphImpl.cpp</name>
  </compound>
  <compound refid="HypergraphImpl_8h" kind="file"><name>HypergraphImpl.h</name>
  </compound>
  <compound refid="HypergraphTools_8h" kind="file"><name>HypergraphTools.h</name>
  </compound>
  <compound refid="Hypothesis_8cpp" kind="file"><name>Hypothesis.cpp</name>
  </compound>
  <compound refid="Hypothesis_8h" kind="file"><name>Hypothesis.h</name>
  </compound>
  <compound refid="hypergraph_2Test_8cpp" kind="file"><name>Test.cpp</name>
    <member refid="hypergraph_2Test_8cpp_1ac0f2228420376f4db7e1274f2b41667c" kind="function"><name>main</name></member>
  </compound>
  <compound refid="lattice_2Test_8cpp" kind="file"><name>Test.cpp</name>
    <member refid="lattice_2Test_8cpp_1ac0f2228420376f4db7e1274f2b41667c" kind="function"><name>main</name></member>
  </compound>
  <compound refid="Weights_8cpp" kind="file"><name>Weights.cpp</name>
    <member refid="Weights_8cpp_1a0095482a61a54f225558100535623397" kind="function"><name>load_weights_from_file</name></member>
  </compound>
  <compound refid="Weights_8h" kind="file"><name>Weights.h</name>
    <member refid="Weights_8h_1ae908848834ffe0602906f263f3582c8b" kind="typedef"><name>wvector</name></member>
    <member refid="Weights_8h_1a84bcf2ad7c65c829bd866269494b339c" kind="typedef"><name>str_vector</name></member>
    <member refid="Weights_8h_1a0095482a61a54f225558100535623397" kind="function"><name>load_weights_from_file</name></member>
  </compound>
  <compound refid="BigramRescore_8cpp" kind="file"><name>BigramRescore.cpp</name>
    <member refid="BigramRescore_8cpp_1a51b7a9c320bb9b58fc5632da0a44ab84" kind="define"><name>TIMING</name></member>
    <member refid="BigramRescore_8cpp_1a2de39943dd0f3b71b30194081ea4dbe6" kind="define"><name>OPTIMIZE</name></member>
  </compound>
  <compound refid="BigramRescore_8h" kind="file"><name>BigramRescore.h</name>
  </compound>
  <compound refid="Common_8h" kind="file"><name>Common.h</name>
    <member refid="Common_8h_1a12c2040f25d8e3a7b9e1c2024c618cb6" kind="define"><name>INF</name></member>
    <member refid="Common_8h_1a85d9ac269eba33293361f4ed7c2a697b" kind="define"><name>foreach</name></member>
  </compound>
  <compound refid="ForestLattice_8cpp" kind="file"><name>ForestLattice.cpp</name>
  </compound>
  <compound refid="ForestLattice_8h" kind="file"><name>ForestLattice.h</name>
  </compound>
  <compound refid="GraphDecompose_8cpp" kind="file"><name>GraphDecompose.cpp</name>
    <member refid="GraphDecompose_8cpp_1a12c2040f25d8e3a7b9e1c2024c618cb6" kind="define"><name>INF</name></member>
  </compound>
  <compound refid="GraphDecompose_8h" kind="file"><name>GraphDecompose.h</name>
  </compound>
  <compound refid="DepParseLP_8cpp" kind="file"><name>DepParseLP.cpp</name>
  </compound>
  <compound refid="DepParseLP_8h" kind="file"><name>DepParseLP.h</name>
  </compound>
  <compound refid="HardConstraints_8h" kind="file"><name>HardConstraints.h</name>
  </compound>
  <compound refid="HardPosConstraints_8h" kind="file"><name>HardPosConstraints.h</name>
  </compound>
  <compound refid="HypergraphLP_8h" kind="file"><name>HypergraphLP.h</name>
  </compound>
  <compound refid="LPBuilder_8cpp" kind="file"><name>LPBuilder.cpp</name>
    <member refid="LPBuilder_8cpp_1ae136061e5a4bf896d9cfb27868baf9fb" kind="define"><name>VAR_TYPE</name></member>
  </compound>
  <compound refid="LPBuilder_8h" kind="file"><name>LPBuilder.h</name>
  </compound>
  <compound refid="MRFLP_8cpp" kind="file"><name>MRFLP.cpp</name>
    <member refid="MRFLP_8cpp_1a5aebfba92373e0dc8a76d272bcd8e85d" kind="define"><name>BLANK</name></member>
  </compound>
  <compound refid="MRFLP_8h" kind="file"><name>MRFLP.h</name>
  </compound>
  <compound refid="PottsModelLP_8h" kind="file"><name>PottsModelLP.h</name>
  </compound>
  <compound refid="TagLP_8cpp" kind="file"><name>TagLP.cpp</name>
  </compound>
  <compound refid="TagLP_8h" kind="file"><name>TagLP.h</name>
  </compound>
  <compound refid="TagMrfLP_8h" kind="file"><name>TagMrfLP.h</name>
  </compound>
  <compound refid="Main_8cpp" kind="file"><name>Main.cpp</name>
    <member refid="Main_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kind="function"><name>main</name></member>
  </compound>
  <compound refid="MRFSolver_8cpp" kind="file"><name>MRFSolver.cpp</name>
    <member refid="MRFSolver_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kind="function"><name>main</name></member>
  </compound>
  <compound refid="DualDecomposition_8cpp" kind="file"><name>DualDecomposition.cpp</name>
  </compound>
  <compound refid="DualDecomposition_8h" kind="file"><name>DualDecomposition.h</name>
  </compound>
  <compound refid="MRF_8cpp" kind="file"><name>MRF.cpp</name>
  </compound>
  <compound refid="MRF_8h" kind="file"><name>MRF.h</name>
  </compound>
  <compound refid="MRFHypergraph_8cpp" kind="file"><name>MRFHypergraph.cpp</name>
  </compound>
  <compound refid="MRFHypergraph_8h" kind="file"><name>MRFHypergraph.h</name>
  </compound>
  <compound refid="Subgradient_8cpp" kind="file"><name>Subgradient.cpp</name>
    <member refid="Subgradient_8cpp_1a12c2040f25d8e3a7b9e1c2024c618cb6" kind="define"><name>INF</name></member>
    <member refid="Subgradient_8cpp_1a51b7a9c320bb9b58fc5632da0a44ab84" kind="define"><name>TIMING</name></member>
    <member refid="Subgradient_8cpp_1a50eb6f386a202f4213c54eae2b52bd21" kind="function"><name>print_vec</name></member>
  </compound>
  <compound refid="Subgradient_8h" kind="file"><name>Subgradient.h</name>
    <member refid="Subgradient_8h_1ae908848834ffe0602906f263f3582c8b" kind="typedef"><name>wvector</name></member>
  </compound>
  <compound refid="Parse_8cpp" kind="file"><name>Parse.cpp</name>
    <member refid="Parse_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kind="function"><name>main</name></member>
  </compound>
  <compound refid="DepParser_8cpp" kind="file"><name>DepParser.cpp</name>
    <member refid="DepParser_8cpp_1aa09e8330088daeb8451c865e32caeaf7" kind="function"><name>operator&lt;&lt;</name></member>
  </compound>
  <compound refid="DepParser_8h" kind="file"><name>DepParser.h</name>
    <member refid="DepParser_8h_1aa09e8330088daeb8451c865e32caeaf7" kind="function"><name>operator&lt;&lt;</name></member>
  </compound>
  <compound refid="EisnerToHypergraph_8cpp" kind="file"><name>EisnerToHypergraph.cpp</name>
    <member refid="EisnerToHypergraph_8cpp_1a9b50ce081c6cb4d6c8fc9db777c50ad1" kind="variable"><name>num_dir</name></member>
    <member refid="EisnerToHypergraph_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kind="function"><name>main</name></member>
  </compound>
  <compound refid="EisnerToHypergraph_8h" kind="file"><name>EisnerToHypergraph.h</name>
    <member refid="EisnerToHypergraph_8h_1aabf4f709c8199e41cf279c77112345fe" kind="define"><name>MAX_LEN</name></member>
    <member refid="EisnerToHypergraph_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kind="enum"><name>Direction</name></member>
    <member refid="EisnerToHypergraph_8h_1a224b9163917ac32fc95a60d8c1eec3aaadb45120aafd37a973140edee24708065" kind="enumvalue"><name>LEFT</name></member>
    <member refid="EisnerToHypergraph_8h_1a224b9163917ac32fc95a60d8c1eec3aaaec8379af7490bb9eaaf579cf17876f38" kind="enumvalue"><name>RIGHT</name></member>
    <member refid="EisnerToHypergraph_8h_1a55b506070847a13554f8b879c1bfb37c" kind="enum"><name>Shape</name></member>
    <member refid="EisnerToHypergraph_8h_1a55b506070847a13554f8b879c1bfb37cacde3f260abb10fb9633e1ca01de9e78d" kind="enumvalue"><name>TRI</name></member>
    <member refid="EisnerToHypergraph_8h_1a55b506070847a13554f8b879c1bfb37cac0533b6cb94383273589b6764c8a0796" kind="enumvalue"><name>TRAP</name></member>
  </compound>
  <compound refid="PhraseBased_8cpp" kind="file"><name>PhraseBased.cpp</name>
  </compound>
  <compound refid="PhraseBased_8h" kind="file"><name>PhraseBased.h</name>
  </compound>
  <compound refid="PhraseLP_8cpp" kind="file"><name>PhraseLP.cpp</name>
    <member refid="PhraseLP_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kind="function"><name>main</name></member>
  </compound>
  <compound refid="PhraseViterbi_8cpp" kind="file"><name>PhraseViterbi.cpp</name>
    <member refid="PhraseViterbi_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kind="function"><name>main</name></member>
  </compound>
  <compound refid="PottsTagger_8cpp" kind="file"><name>PottsTagger.cpp</name>
    <member refid="PottsTagger_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kind="function"><name>main</name></member>
  </compound>
  <compound refid="Run_8cpp" kind="file"><name>Run.cpp</name>
    <member refid="Run_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kind="function"><name>main</name></member>
  </compound>
  <compound refid="Tag_8cpp" kind="file"><name>Tag.cpp</name>
    <member refid="Tag_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kind="function"><name>main</name></member>
  </compound>
  <compound refid="TagConstraints_8cpp" kind="file"><name>TagConstraints.cpp</name>
    <member refid="TagConstraints_8cpp_1af58fc0b920e1db9149072b67edc15525" kind="function"><name>operator&lt;&lt;</name></member>
  </compound>
  <compound refid="TagConstraints_8h" kind="file"><name>TagConstraints.h</name>
    <member refid="TagConstraints_8h_1af58fc0b920e1db9149072b67edc15525" kind="function"><name>operator&lt;&lt;</name></member>
  </compound>
  <compound refid="Tagger_8cpp" kind="file"><name>Tagger.cpp</name>
    <member refid="Tagger_8cpp_1ac8d7a94cec49acc520abce7cc51f01c8" kind="function"><name>operator&lt;&lt;</name></member>
  </compound>
  <compound refid="Tagger_8h" kind="file"><name>Tagger.h</name>
    <member refid="Tagger_8h_1ae62495b132e650a165067bd09e889c98" kind="typedef"><name>POS</name></member>
    <member refid="Tagger_8h_1ac8d7a94cec49acc520abce7cc51f01c8" kind="function"><name>operator&lt;&lt;</name></member>
  </compound>
  <compound refid="TagSolvers_8cpp" kind="file"><name>TagSolvers.cpp</name>
  </compound>
  <compound refid="TagSolvers_8h" kind="file"><name>TagSolvers.h</name>
  </compound>
  <compound refid="Decode_8cpp" kind="file"><name>Decode.cpp</name>
    <member refid="Decode_8cpp_1a51b7a9c320bb9b58fc5632da0a44ab84" kind="define"><name>TIMING</name></member>
    <member refid="Decode_8cpp_1a64122f519c6147c1b97389d6670c879a" kind="define"><name>IS_TRY</name></member>
    <member refid="Decode_8cpp_1ad72dbcf6d0153db1b8d8a58001feed83" kind="define"><name>DEBUG</name></member>
    <member refid="Decode_8cpp_1a2a81bced09147698e8977dac1cedc5a5" kind="define"><name>SIMPLE_DEBUG</name></member>
    <member refid="Decode_8cpp_1a9b7727b985e0ff1b5b527e08eac880d6" kind="define"><name>GREEDY</name></member>
    <member refid="Decode_8cpp_1ab303ee384877c80cb8855bf0113faf88" kind="define"><name>BACK</name></member>
  </compound>
  <compound refid="Decode_8h" kind="file"><name>Decode.h</name>
    <member refid="Decode_8h_1a42a2b350f79a3e23df9e612029bc1017" kind="define"><name>GRAMSPLIT</name></member>
    <member refid="Decode_8h_1a5d8c5913792a4d0cd781a040895ee6df" kind="define"><name>GRAMSPLIT2</name></member>
    <member refid="Decode_8h_1ae908848834ffe0602906f263f3582c8b" kind="typedef"><name>wvector</name></member>
  </compound>
  <compound refid="dual__subproblem_8cpp" kind="file"><name>dual_subproblem.cpp</name>
    <member refid="dual__subproblem_8cpp_1ad72dbcf6d0153db1b8d8a58001feed83" kind="define"><name>DEBUG</name></member>
    <member refid="dual__subproblem_8cpp_1a51b7a9c320bb9b58fc5632da0a44ab84" kind="define"><name>TIMING</name></member>
    <member refid="dual__subproblem_8cpp_1a2de39943dd0f3b71b30194081ea4dbe6" kind="define"><name>OPTIMIZE</name></member>
  </compound>
  <compound refid="dual__subproblem_8h" kind="file"><name>dual_subproblem.h</name>
    <member refid="dual__subproblem_8h_1a43e22deb2a5c0899c3e5602ad1e90682" kind="define"><name>MAX_PROJ</name></member>
    <member refid="dual__subproblem_8h_1a76fe6d1270322ff739a44054b7ebe4aa" kind="define"><name>PROJECT</name></member>
    <member refid="dual__subproblem_8h_1ada47fbbf41a3c054bb83c64eb87014db" kind="define"><name>TRIPROJECT</name></member>
  </compound>
  <compound refid="NGramCache_8cpp" kind="file"><name>NGramCache.cpp</name>
    <member refid="NGramCache_8cpp_1aa27429c110b33c64bc27a30b1702265e" kind="function"><name>load_ngram_cache</name></member>
  </compound>
  <compound refid="NGramCache_8h" kind="file"><name>NGramCache.h</name>
    <member refid="NGramCache_8h_1aa27429c110b33c64bc27a30b1702265e" kind="function"><name>load_ngram_cache</name></member>
  </compound>
  <compound refid="Forest_8cpp" kind="file"><name>Forest.cpp</name>
  </compound>
  <compound refid="Forest_8h" kind="file"><name>Forest.h</name>
    <member refid="Forest_8h_1a84bcf2ad7c65c829bd866269494b339c" kind="typedef"><name>str_vector</name></member>
  </compound>
  <compound refid="util_8cpp" kind="file"><name>util.cpp</name>
  </compound>
  <compound refid="util_8h" kind="file"><name>util.h</name>
  </compound>
  <compound refid="deprecated" kind="page"><name>deprecated</name>
  </compound>
  <compound refid="dir_9fa0853203c77621738e1a9d332558ef" kind="dir"><name>graph/</name>
  </compound>
  <compound refid="dir_0842ed619f530816314d052ceb837f9f" kind="dir"><name>hypergraph/</name>
  </compound>
  <compound refid="dir_edaed3a5c93eac9aa72d75a14f405ec1" kind="dir"><name>lattice/</name>
  </compound>
  <compound refid="dir_8d27b9979ee8327b58fb6b0e913b28e7" kind="dir"><name>lp/</name>
  </compound>
  <compound refid="dir_422102e92eab9af8781884626f8d6bf6" kind="dir"><name>optimization/</name>
  </compound>
  <compound refid="dir_ceab4fa94c1005d795369c1173c497e2" kind="dir"><name>parse/</name>
  </compound>
  <compound refid="dir_3f193d131180abb5afbb308843e46578" kind="dir"><name>phrasebased/</name>
  </compound>
  <compound refid="dir_454a81312f5c079f3176ae8606e1d165" kind="dir"><name>tagger/</name>
  </compound>
  <compound refid="dir_577b84ae8ca28da4686609a1f7db25f5" kind="dir"><name>trans_decode/</name>
  </compound>
  <compound refid="dir_af4d1a4c6e00a68ff896c2c0ab0a8c37" kind="dir"><name>transforest/</name>
  </compound>
</doxygenindex>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="_graph_proto_interface_8h" kind="file">
    <compoundname>GraphProtoInterface.h</compoundname>
    <includes local="yes">graph.pb.h</includes>
    <includes refid="_graph_8h" local="yes">Graph.h</includes>
    <includedby refid="_m_r_f_8cpp" local="no">optimization/MRF.cpp</includedby>
    <includedby refid="_m_r_f_8h" local="no">optimization/MRF.h</includedby>
    <incdepgraph>
      <node id="201">
        <label>string</label>
      </node>
      <node id="199">
        <label>Graph.h</label>
        <link refid="_graph_8h_source"/>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="202" relation="include">
        </childnode>
      </node>
      <node id="202">
        <label>../common.h</label>
      </node>
      <node id="200">
        <label>vector</label>
      </node>
      <node id="197">
        <label>graph/GraphProtoInterface.h</label>
        <link refid="GraphProtoInterface.h"/>
        <childnode refid="198" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
      </node>
      <node id="198">
        <label>graph.pb.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="209">
        <label>lp/HardPosConstraints.h</label>
        <link refid="_hard_pos_constraints_8h_source"/>
        <childnode refid="209" relation="include">
        </childnode>
      </node>
      <node id="207">
        <label>optimization/MRFHypergraph.h</label>
        <link refid="_m_r_f_hypergraph_8h_source"/>
      </node>
      <node id="206">
        <label>lp/TagMrfLP.h</label>
        <link refid="_tag_mrf_l_p_8h_source"/>
      </node>
      <node id="204">
        <label>optimization/MRF.h</label>
        <link refid="_m_r_f_8h_source"/>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
      </node>
      <node id="205">
        <label>lp/MRFLP.h</label>
        <link refid="_m_r_f_l_p_8h_source"/>
        <childnode refid="206" relation="include">
        </childnode>
      </node>
      <node id="208">
        <label>tagger/TagConstraints.h</label>
        <link refid="_tag_constraints_8h_source"/>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
      </node>
      <node id="203">
        <label>graph/GraphProtoInterface.h</label>
        <link refid="GraphProtoInterface.h"/>
        <childnode refid="204" relation="include">
        </childnode>
      </node>
      <node id="210">
        <label>tagger/TagSolvers.h</label>
        <link refid="_tag_solvers_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_graph_proto_interface" prot="public">GraphProtoInterface</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>GRAPHPROTOINTERFACE</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GRAPHPROTOINTERFACE</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;graph.pb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Graph.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Scarab::Graph;</highlight></codeline>
<codeline lineno="6" refid="class_graph_proto_interface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_graph_proto_interface" kindref="compound">GraphProtoInterface</ref><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>build_from_file(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>file_name)<sp/>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>process_node(graph::Graph_Node,<sp/><ref refid="class_scarab_1_1_graph_1_1_graphnode" kindref="compound">Graphnode</ref><sp/>*)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>process_edge(graph::Graph_Edge,<sp/><ref refid="class_scarab_1_1_graph_1_1_graphedge" kindref="compound">Graphedge</ref><sp/>*)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_up(graph::Graph,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{<sp/>}<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_scarab_1_1_graph_1_1_graph" kindref="compound">Graph</ref><sp/>&amp;<sp/>graph()</highlight><highlight class="keyword"><sp/>const<sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*_graph;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><ref refid="class_scarab_1_1_graph_1_1_graph" kindref="compound">Graph</ref><sp/>*<sp/>_graph;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/srush/Projects/relax_decode/graph/GraphProtoInterface.h"/>
  </compounddef>
</doxygen>

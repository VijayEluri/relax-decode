<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="classScarab_1_1HG_1_1Hypergraph" kind="class" prot="public">
    <compoundname>Scarab::HG::Hypergraph</compoundname>
    <derivedcompoundref refid="classForest" prot="public" virt="non-virtual">Forest</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classScarab_1_1HG_1_1Hypergraph_1a8976308c04be0b66d541e7c431550e9c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Scarab::HG::Hypergraph::print</definition>
        <argsstring>() const </argsstring>
        <name>print</name>
        <reimplementedby refid="classForest_1a621a1a65d0f877bb33b15c79f9e24c4d">print</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display the hypergraph for debugging. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/Hypergraph.h" line="184"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1Hypergraph_1ad8db2ab9208202af5c9ce9739c670c56" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="classScarab_1_1HG_1_1Hypernode" kindref="compound">Hypernode</ref> &amp;</type>
        <definition>virtual const Hypernode&amp; Scarab::HG::Hypergraph::root</definition>
        <argsstring>() const =0</argsstring>
        <name>root</name>
        <reimplementedby refid="classForest_1a452873acdd9bf37df4c7d4df57a1e3f8">root</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the root of the hypergraph</para><para><simplesect kind="return"><para><ref refid="classScarab_1_1HG_1_1Hypernode" kindref="compound">Hypernode</ref> at root </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/Hypergraph.h" line="191"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1Hypergraph_1a84b613321bf36995a401ac4e0883a355" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>unsigned int</type>
        <definition>virtual unsigned int Scarab::HG::Hypergraph::num_edges</definition>
        <argsstring>() const =0</argsstring>
        <name>num_edges</name>
        <reimplementedby refid="classForest_1a9d45caa4ddf65858c368f951a67ad7be">num_edges</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/Hypergraph.h" line="195"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1Hypergraph_1a9cb768d463207c3db348cfd74a09ade3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>unsigned int</type>
        <definition>virtual unsigned int Scarab::HG::Hypergraph::num_nodes</definition>
        <argsstring>() const =0</argsstring>
        <name>num_nodes</name>
        <reimplementedby refid="classForest_1a840b2f8bc3e67308afab728ec194f201">num_nodes</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/Hypergraph.h" line="196"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1Hypergraph_1a8cc34c61d7ca3994adfe69951dab7e31" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="classScarab_1_1HG_1_1Hypernode" kindref="compound">Hypernode</ref> &amp;</type>
        <definition>virtual const Hypernode&amp; Scarab::HG::Hypergraph::get_node</definition>
        <argsstring>(int i) const =0</argsstring>
        <name>get_node</name>
        <reimplementedby refid="classForest_1a7cd1559a3c2e338ebf0d76a9e99cb1fe">get_node</reimplementedby>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/Hypergraph.h" line="198"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1Hypergraph_1a4d4fe463a633174b7a2a3e415a9c551b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="classScarab_1_1HG_1_1Hyperedge" kindref="compound">Hyperedge</ref> &amp;</type>
        <definition>virtual const Hyperedge&amp; Scarab::HG::Hypergraph::get_edge</definition>
        <argsstring>(int i) const =0</argsstring>
        <name>get_edge</name>
        <reimplementedby refid="classForest_1ad0441951a3373eaa17df5df2aa5ec876">get_edge</reimplementedby>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/Hypergraph.h" line="199"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1Hypergraph_1a9fc9b640b1b05bf3ce78a3bd941266ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const vector&lt; <ref refid="classScarab_1_1HG_1_1Hypernode" kindref="compound">Hypernode</ref> * &gt; &amp;</type>
        <definition>virtual const vector&lt;Hypernode* &gt;&amp; Scarab::HG::Hypergraph::nodes</definition>
        <argsstring>() const =0</argsstring>
        <name>nodes</name>
        <reimplementedby refid="classForest_1a9b36063a664205e61ac86952c919a2bc">nodes</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get all hypernodes in the hypergraph. (Assume unordered) WARNING: Treat this as a const iterator. <simplesect kind="return"><para>Const iterator to hypernodes in hypergraph . </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/Hypergraph.h" line="207"/>
      </memberdef>
      <memberdef kind="function" id="classScarab_1_1HG_1_1Hypergraph_1ac4f2f32e618d60d94a918a7bb1063666" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const vector&lt; <ref refid="classScarab_1_1HG_1_1Hyperedge" kindref="compound">Hyperedge</ref> * &gt; &amp;</type>
        <definition>virtual const vector&lt;Hyperedge*&gt;&amp; Scarab::HG::Hypergraph::edges</definition>
        <argsstring>() const =0</argsstring>
        <name>edges</name>
        <reimplementedby refid="classForest_1a02f4f789460750fe7e310a91b2365d96">edges</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get all hyperedges in the hypergraph. (Assume unordered) WARNING: Treat this as a const iterator. <simplesect kind="return"><para>Const iterator to edges in hypergraph . </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/hypergraph/Hypergraph.h" line="215"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="556">
        <label>Scarab::HG::Hypergraph</label>
        <link refid="classScarab_1_1HG_1_1Hypergraph"/>
      </node>
      <node id="557">
        <label>Forest</label>
        <link refid="classForest"/>
        <childnode refid="556" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/srush/Projects/relax_decode/hypergraph/Hypergraph.h" line="177" bodyfile="/home/srush/Projects/relax_decode/hypergraph/Hypergraph.h" bodystart="177" bodyend="216"/>
    <listofallmembers>
      <member refid="classScarab_1_1HG_1_1Hypergraph_1ac4f2f32e618d60d94a918a7bb1063666" prot="public" virt="pure-virtual"><scope>Scarab::HG::Hypergraph</scope><name>edges</name></member>
      <member refid="classScarab_1_1HG_1_1Hypergraph_1a4d4fe463a633174b7a2a3e415a9c551b" prot="public" virt="pure-virtual"><scope>Scarab::HG::Hypergraph</scope><name>get_edge</name></member>
      <member refid="classScarab_1_1HG_1_1Hypergraph_1a8cc34c61d7ca3994adfe69951dab7e31" prot="public" virt="pure-virtual"><scope>Scarab::HG::Hypergraph</scope><name>get_node</name></member>
      <member refid="classScarab_1_1HG_1_1Hypergraph_1a9fc9b640b1b05bf3ce78a3bd941266ce" prot="public" virt="pure-virtual"><scope>Scarab::HG::Hypergraph</scope><name>nodes</name></member>
      <member refid="classScarab_1_1HG_1_1Hypergraph_1a84b613321bf36995a401ac4e0883a355" prot="public" virt="pure-virtual"><scope>Scarab::HG::Hypergraph</scope><name>num_edges</name></member>
      <member refid="classScarab_1_1HG_1_1Hypergraph_1a9cb768d463207c3db348cfd74a09ade3" prot="public" virt="pure-virtual"><scope>Scarab::HG::Hypergraph</scope><name>num_nodes</name></member>
      <member refid="classScarab_1_1HG_1_1Hypergraph_1a8976308c04be0b66d541e7c431550e9c" prot="public" virt="non-virtual"><scope>Scarab::HG::Hypergraph</scope><name>print</name></member>
      <member refid="classScarab_1_1HG_1_1Hypergraph_1ad8db2ab9208202af5c9ce9739c670c56" prot="public" virt="pure-virtual"><scope>Scarab::HG::Hypergraph</scope><name>root</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

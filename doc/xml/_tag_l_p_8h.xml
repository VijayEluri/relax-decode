<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="_tag_l_p_8h" kind="file">
    <compoundname>TagLP.h</compoundname>
    <includes refid="_hypergraph_8h" local="no">Hypergraph.h</includes>
    <includes local="no">gurobi_c++.h</includes>
    <includes refid="_tagger_8h" local="yes">Tagger.h</includes>
    <includes refid="_hypergraph_l_p_8h" local="yes">HypergraphLP.h</includes>
    <includes local="yes">../common.h</includes>
    <includedby refid="_full_tagger_8cpp" local="yes">FullTagger.cpp</includedby>
    <includedby refid="_tag_l_p_8cpp" local="yes">lp/TagLP.cpp</includedby>
    <includedby refid="_tag_mrf_l_p_8h" local="yes">lp/TagMrfLP.h</includedby>
    <includedby refid="_potts_tagger_8cpp" local="yes">PottsTagger.cpp</includedby>
    <incdepgraph>
      <node id="984">
        <label>HypergraphLP.h</label>
        <link refid="_hypergraph_l_p_8h_source"/>
        <childnode refid="964" relation="include">
        </childnode>
        <childnode refid="973" relation="include">
        </childnode>
        <childnode refid="980" relation="include">
        </childnode>
      </node>
      <node id="974">
        <label>Tagger.h</label>
        <link refid="_tagger_8h_source"/>
        <childnode refid="975" relation="include">
        </childnode>
        <childnode refid="976" relation="include">
        </childnode>
        <childnode refid="964" relation="include">
        </childnode>
        <childnode refid="977" relation="include">
        </childnode>
        <childnode refid="981" relation="include">
        </childnode>
      </node>
      <node id="983">
        <label>assert.h</label>
      </node>
      <node id="972">
        <label>string</label>
      </node>
      <node id="978">
        <label>hypergraph.pb.h</label>
      </node>
      <node id="981">
        <label>EdgeCache.h</label>
        <link refid="_edge_cache_8h_source"/>
        <childnode refid="970" relation="include">
        </childnode>
        <childnode refid="982" relation="include">
        </childnode>
        <childnode refid="983" relation="include">
        </childnode>
      </node>
      <node id="977">
        <label>HypergraphImpl.h</label>
        <link refid="_hypergraph_impl_8h_source"/>
        <childnode refid="964" relation="include">
        </childnode>
        <childnode refid="978" relation="include">
        </childnode>
        <childnode refid="979" relation="include">
        </childnode>
        <childnode refid="965" relation="include">
        </childnode>
        <childnode refid="980" relation="include">
        </childnode>
        <childnode refid="970" relation="include">
        </childnode>
        <childnode refid="971" relation="include">
        </childnode>
      </node>
      <node id="964">
        <label>Hypergraph.h</label>
        <link refid="_hypergraph_8h_source"/>
        <childnode refid="965" relation="include">
        </childnode>
        <childnode refid="970" relation="include">
        </childnode>
        <childnode refid="971" relation="include">
        </childnode>
        <childnode refid="972" relation="include">
        </childnode>
      </node>
      <node id="967">
        <label>fstream</label>
      </node>
      <node id="969">
        <label>svector.hpp</label>
      </node>
      <node id="965">
        <label>Weights.h</label>
        <link refid="_weights_8h_source"/>
        <childnode refid="966" relation="include">
        </childnode>
        <childnode refid="967" relation="include">
        </childnode>
        <childnode refid="968" relation="include">
        </childnode>
        <childnode refid="969" relation="include">
        </childnode>
      </node>
      <node id="980">
        <label>../common.h</label>
      </node>
      <node id="982">
        <label>bitset</label>
      </node>
      <node id="975">
        <label>tag.pb.h</label>
      </node>
      <node id="976">
        <label>dep.pb.h</label>
      </node>
      <node id="970">
        <label>vector</label>
      </node>
      <node id="966">
        <label>iostream</label>
      </node>
      <node id="963">
        <label>lp/TagLP.h</label>
        <link refid="TagLP.h"/>
        <childnode refid="964" relation="include">
        </childnode>
        <childnode refid="973" relation="include">
        </childnode>
        <childnode refid="974" relation="include">
        </childnode>
        <childnode refid="984" relation="include">
        </childnode>
        <childnode refid="980" relation="include">
        </childnode>
      </node>
      <node id="968">
        <label>cy_svector.hpp</label>
      </node>
      <node id="973">
        <label>gurobi_c++.h</label>
      </node>
      <node id="971">
        <label>set</label>
      </node>
      <node id="979">
        <label>features.pb.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="986">
        <label>lp/TagMrfLP.h</label>
        <link refid="_tag_mrf_l_p_8h_source"/>
      </node>
      <node id="985">
        <label>lp/TagLP.h</label>
        <link refid="TagLP.h"/>
        <childnode refid="986" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_scarab_1_1_h_g_1_1_tag_l_p" prot="public">Scarab::HG::TagLP</innerclass>
    <innerclass refid="class_scarab_1_1_h_g_1_1_tag_l_p_builder" prot="public">Scarab::HG::TagLPBuilder</innerclass>
    <innernamespace refid="namespace_scarab">Scarab</innernamespace>
    <innernamespace refid="namespace_scarab_1_1_h_g">Scarab::HG</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>DEPPARSELP_H_</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DEPPARSELP_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Hypergraph.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gurobi_c++.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Tagger.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;HypergraphLP.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Scarab<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">HG<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="struct_scarab_1_1_h_g_1_1_tag_l_p" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_scarab_1_1_h_g_1_1_tag_l_p" kindref="compound">TagLP</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><ref refid="struct_scarab_1_1_h_g_1_1_tag_l_p" kindref="compound">TagLP</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tagger" kindref="compound">Tagger</ref><sp/>&amp;parser,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_scarab_1_1_h_g_1_1_hypergraph_l_p" kindref="compound">HypergraphLP</ref><sp/>&amp;hyper_lp)<sp/>:<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>p(parser),<sp/>tag_vars(parser.num_tags()),<sp/>h_lp(hyper_lp)<sp/>{}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><ref refid="class_cache" kindref="compound">Cache&lt;Tag, GRBVar&gt;</ref><sp/><sp/>tag_vars;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tagger" kindref="compound">Tagger</ref><sp/>&amp;<sp/>p;<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_scarab_1_1_h_g_1_1_hypergraph_l_p" kindref="compound">HypergraphLP</ref><sp/>&amp;<sp/>h_lp;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="class_scarab_1_1_h_g_1_1_tag_l_p_builder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_scarab_1_1_h_g_1_1_tag_l_p_builder" kindref="compound">TagLPBuilder</ref><sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>show_results(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_scarab_1_1_h_g_1_1_tag_l_p" kindref="compound">TagLP</ref><sp/>&amp;<sp/>lp_vars);<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_scarab_1_1_h_g_1_1_tag_l_p" kindref="compound">TagLP</ref><sp/>*<sp/>add_tagging(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tagger" kindref="compound">Tagger</ref><sp/>&amp;<sp/>parser,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_cache" kindref="compound">Cache&lt;Hyperedge, double&gt;</ref><sp/>&amp;<sp/>weights,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>prefix,<sp/>GRBModel<sp/>&amp;<sp/>model,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>var_type);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/srush/Projects/relax_decode/lp/TagLP.h"/>
  </compounddef>
</doxygen>

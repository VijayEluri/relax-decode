<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="Hypergraph_8h" kind="file">
    <compoundname>Hypergraph.h</compoundname>
    <includes refid="Weights_8h" local="yes">Weights.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">set</includes>
    <includes local="no">string</includes>
    <includedby refid="CubeLM_8cpp" local="yes">CubeLM.cpp</includedby>
    <includedby refid="CubeLM_8h" local="yes">CubeLM.h</includedby>
    <includedby refid="AStar_8cpp" local="yes">hypergraph/AStar.cpp</includedby>
    <includedby refid="AStar_8h" local="yes">hypergraph/AStar.h</includedby>
    <includedby refid="BestHyp_8h" local="yes">hypergraph/BestHyp.h</includedby>
    <includedby refid="CubePruning_8cpp" local="yes">hypergraph/CubePruning.cpp</includedby>
    <includedby refid="CubePruning_8h" local="yes">hypergraph/CubePruning.h</includedby>
    <includedby refid="ExtendCKY_8cpp" local="yes">hypergraph/ExtendCKY.cpp</includedby>
    <includedby refid="ExtendCKY_8h" local="yes">hypergraph/ExtendCKY.h</includedby>
    <includedby refid="HypergraphAlgorithms_8h" local="yes">hypergraph/HypergraphAlgorithms.h</includedby>
    <includedby refid="HypergraphImpl_8cpp" local="yes">hypergraph/HypergraphImpl.cpp</includedby>
    <includedby refid="HypergraphImpl_8h" local="yes">hypergraph/HypergraphImpl.h</includedby>
    <includedby refid="Hypothesis_8h" local="yes">hypergraph/Hypothesis.h</includedby>
    <includedby refid="DepParseLP_8cpp" local="no">lp/DepParseLP.cpp</includedby>
    <includedby refid="DepParseLP_8h" local="no">lp/DepParseLP.h</includedby>
    <includedby refid="HardPosConstraints_8h" local="no">lp/HardPosConstraints.h</includedby>
    <includedby refid="HypergraphLP_8h" local="no">lp/HypergraphLP.h</includedby>
    <includedby refid="LPBuilder_8cpp" local="yes">lp/LPBuilder.cpp</includedby>
    <includedby refid="LPBuilder_8h" local="yes">lp/LPBuilder.h</includedby>
    <includedby refid="TagLP_8h" local="no">lp/TagLP.h</includedby>
    <includedby refid="MRFHypergraph_8cpp" local="no">optimization/MRFHypergraph.cpp</includedby>
    <includedby refid="MRFHypergraph_8h" local="no">optimization/MRFHypergraph.h</includedby>
    <includedby refid="DepParser_8cpp" local="yes">parse/DepParser.cpp</includedby>
    <includedby refid="DepParser_8h" local="yes">parse/DepParser.h</includedby>
    <includedby refid="PhraseBased_8cpp" local="yes">phrasebased/PhraseBased.cpp</includedby>
    <includedby refid="PhraseBased_8h" local="yes">phrasebased/PhraseBased.h</includedby>
    <includedby refid="Tagger_8cpp" local="yes">tagger/Tagger.cpp</includedby>
    <includedby refid="Tagger_8h" local="yes">tagger/Tagger.h</includedby>
    <includedby refid="Forest_8cpp" local="yes">transforest/Forest.cpp</includedby>
    <includedby refid="Forest_8h" local="yes">transforest/Forest.h</includedby>
    <incdepgraph>
      <node id="591">
        <label>cassert</label>
      </node>
      <node id="590">
        <label>tr1/unordered_map</label>
      </node>
      <node id="593">
        <label>svector.hpp</label>
        <link refid="third-party_2svector_2svector_8hpp_source"/>
        <childnode refid="589" relation="include">
        </childnode>
        <childnode refid="590" relation="include">
        </childnode>
        <childnode refid="591" relation="include">
        </childnode>
      </node>
      <node id="586">
        <label>string</label>
      </node>
      <node id="589">
        <label>map</label>
      </node>
      <node id="581">
        <label>hypergraph/Hypergraph.h</label>
        <link refid="Hypergraph.h"/>
        <childnode refid="582" relation="include">
        </childnode>
        <childnode refid="592" relation="include">
        </childnode>
        <childnode refid="594" relation="include">
        </childnode>
        <childnode refid="586" relation="include">
        </childnode>
      </node>
      <node id="584">
        <label>fstream</label>
      </node>
      <node id="582">
        <label>Weights.h</label>
        <link refid="Weights_8h_source"/>
        <childnode refid="583" relation="include">
        </childnode>
        <childnode refid="584" relation="include">
        </childnode>
        <childnode refid="585" relation="include">
        </childnode>
        <childnode refid="593" relation="include">
        </childnode>
      </node>
      <node id="592">
        <label>vector</label>
      </node>
      <node id="587">
        <label>sstream</label>
      </node>
      <node id="588">
        <label>cstdlib</label>
      </node>
      <node id="585">
        <label>cy_svector.hpp</label>
        <link refid="cy__svector_8hpp_source"/>
        <childnode refid="586" relation="include">
        </childnode>
        <childnode refid="587" relation="include">
        </childnode>
        <childnode refid="588" relation="include">
        </childnode>
        <childnode refid="585" relation="include">
        </childnode>
        <childnode refid="589" relation="include">
        </childnode>
        <childnode refid="590" relation="include">
        </childnode>
        <childnode refid="591" relation="include">
        </childnode>
        <childnode refid="592" relation="include">
        </childnode>
        <childnode refid="583" relation="include">
        </childnode>
      </node>
      <node id="583">
        <label>iostream</label>
      </node>
      <node id="594">
        <label>set</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="619">
        <label>lp/HypergraphLP.h</label>
        <link refid="HypergraphLP_8h_source"/>
        <childnode refid="612" relation="include">
        </childnode>
        <childnode refid="604" relation="include">
        </childnode>
        <childnode refid="616" relation="include">
        </childnode>
      </node>
      <node id="604">
        <label>lp/HardPosConstraints.h</label>
        <link refid="HardPosConstraints_8h_source"/>
        <childnode refid="604" relation="include">
        </childnode>
      </node>
      <node id="596">
        <label>CubeLM.h</label>
        <link refid="CubeLM_8h_source"/>
      </node>
      <node id="615">
        <label>tagger/Tagger.h</label>
        <link refid="Tagger_8h_source"/>
        <childnode refid="604" relation="include">
        </childnode>
        <childnode refid="616" relation="include">
        </childnode>
        <childnode refid="603" relation="include">
        </childnode>
        <childnode refid="606" relation="include">
        </childnode>
      </node>
      <node id="610">
        <label>optimization/MRFHypergraph.h</label>
        <link refid="MRFHypergraph_8h_source"/>
      </node>
      <node id="605">
        <label>lp/TagMrfLP.h</label>
        <link refid="TagMrfLP_8h_source"/>
      </node>
      <node id="613">
        <label>lp/HardConstraints.h</label>
        <link refid="HardConstraints_8h_source"/>
      </node>
      <node id="608">
        <label>optimization/MRF.h</label>
        <link refid="MRF_8h_source"/>
        <childnode refid="609" relation="include">
        </childnode>
        <childnode refid="610" relation="include">
        </childnode>
        <childnode refid="603" relation="include">
        </childnode>
      </node>
      <node id="607">
        <label>hypergraph/HypergraphImpl.h</label>
        <link refid="HypergraphImpl_8h_source"/>
        <childnode refid="608" relation="include">
        </childnode>
        <childnode refid="610" relation="include">
        </childnode>
        <childnode refid="611" relation="include">
        </childnode>
        <childnode refid="614" relation="include">
        </childnode>
        <childnode refid="615" relation="include">
        </childnode>
        <childnode refid="617" relation="include">
        </childnode>
      </node>
      <node id="595">
        <label>hypergraph/Hypergraph.h</label>
        <link refid="Hypergraph.h"/>
        <childnode refid="596" relation="include">
        </childnode>
        <childnode refid="597" relation="include">
        </childnode>
        <childnode refid="598" relation="include">
        </childnode>
        <childnode refid="601" relation="include">
        </childnode>
        <childnode refid="599" relation="include">
        </childnode>
        <childnode refid="602" relation="include">
        </childnode>
        <childnode refid="607" relation="include">
        </childnode>
        <childnode refid="618" relation="include">
        </childnode>
        <childnode refid="612" relation="include">
        </childnode>
        <childnode refid="604" relation="include">
        </childnode>
        <childnode refid="619" relation="include">
        </childnode>
        <childnode refid="620" relation="include">
        </childnode>
        <childnode refid="616" relation="include">
        </childnode>
        <childnode refid="610" relation="include">
        </childnode>
        <childnode refid="611" relation="include">
        </childnode>
        <childnode refid="614" relation="include">
        </childnode>
        <childnode refid="615" relation="include">
        </childnode>
        <childnode refid="617" relation="include">
        </childnode>
      </node>
      <node id="620">
        <label>lp/LPBuilder.h</label>
        <link refid="LPBuilder_8h_source"/>
      </node>
      <node id="609">
        <label>lp/MRFLP.h</label>
        <link refid="MRFLP_8h_source"/>
        <childnode refid="605" relation="include">
        </childnode>
      </node>
      <node id="599">
        <label>hypergraph/ExtendCKY.h</label>
        <link refid="ExtendCKY_8h_source"/>
        <childnode refid="600" relation="include">
        </childnode>
      </node>
      <node id="611">
        <label>parse/DepParser.h</label>
        <link refid="DepParser_8h_source"/>
        <childnode refid="612" relation="include">
        </childnode>
      </node>
      <node id="597">
        <label>hypergraph/AStar.h</label>
        <link refid="AStar_8h_source"/>
      </node>
      <node id="601">
        <label>hypergraph/CubePruning.h</label>
        <link refid="CubePruning_8h_source"/>
        <childnode refid="596" relation="include">
        </childnode>
      </node>
      <node id="618">
        <label>hypergraph/Hypothesis.h</label>
        <link refid="Hypothesis_8h_source"/>
        <childnode refid="597" relation="include">
        </childnode>
        <childnode refid="598" relation="include">
        </childnode>
        <childnode refid="599" relation="include">
        </childnode>
      </node>
      <node id="603">
        <label>tagger/TagConstraints.h</label>
        <link refid="TagConstraints_8h_source"/>
        <childnode refid="604" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
        <childnode refid="606" relation="include">
        </childnode>
      </node>
      <node id="600">
        <label>trans_decode/Decode.h</label>
        <link refid="Decode_8h_source"/>
      </node>
      <node id="602">
        <label>hypergraph/HypergraphAlgorithms.h</label>
        <link refid="HypergraphAlgorithms_8h_source"/>
        <childnode refid="598" relation="include">
        </childnode>
        <childnode refid="603" relation="include">
        </childnode>
        <childnode refid="600" relation="include">
        </childnode>
      </node>
      <node id="617">
        <label>transforest/Forest.h</label>
        <link refid="Forest_8h_source"/>
        <childnode refid="600" relation="include">
        </childnode>
      </node>
      <node id="616">
        <label>lp/TagLP.h</label>
        <link refid="TagLP_8h_source"/>
        <childnode refid="605" relation="include">
        </childnode>
      </node>
      <node id="614">
        <label>phrasebased/PhraseBased.h</label>
        <link refid="PhraseBased_8h_source"/>
      </node>
      <node id="612">
        <label>lp/DepParseLP.h</label>
        <link refid="DepParseLP_8h_source"/>
        <childnode refid="613" relation="include">
        </childnode>
      </node>
      <node id="598">
        <label>hypergraph/BestHyp.h</label>
        <link refid="BestHyp_8h_source"/>
        <childnode refid="597" relation="include">
        </childnode>
        <childnode refid="599" relation="include">
        </childnode>
      </node>
      <node id="606">
        <label>tagger/TagSolvers.h</label>
        <link refid="TagSolvers_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classScarab_1_1HG_1_1Hyperedge" prot="public">Scarab::HG::Hyperedge</innerclass>
    <innerclass refid="classScarab_1_1HG_1_1Hypernode" prot="public">Scarab::HG::Hypernode</innerclass>
    <innerclass refid="classScarab_1_1HG_1_1HGraph" prot="public">Scarab::HG::HGraph</innerclass>
    <innerclass refid="structScarab_1_1HG_1_1HypergraphPrune" prot="public">Scarab::HG::HypergraphPrune</innerclass>
    <innernamespace refid="namespaceScarab">Scarab</innernamespace>
    <innernamespace refid="namespaceScarab_1_1HG">Scarab::HG</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>HYPERGRAPH_H_</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>HYPERGRAPH_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;Weights.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Scarab<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">HG<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Hypergraph<sp/>interface<sp/>for<sp/>internal<sp/>use.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>interface<sp/>is<sp/>entirely<sp/>immutable!<sp/>Every<sp/>function<sp/>is<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>Cache.h<sp/>for<sp/>implementing<sp/>state<sp/>on<sp/>top<sp/>on<sp/>hypergraphs.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Hypernode;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Hypernode<sp/>*<sp/>HNode;<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>vector<sp/>&lt;const<sp/>Hypernode<sp/>*<sp/>&gt;<sp/>HNodes;<sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Base<sp/>class<sp/>for<sp/>weighted<sp/>hyperedge<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classScarab_1_1HG_1_1Hyperedge" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classScarab_1_1HG_1_1Hyperedge" kindref="compound">Hyperedge</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Hyperedge(unsigned<sp/>int<sp/>id):<sp/>_id(id){}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classScarab_1_1HG_1_1Hyperedge" kindref="compound">Hyperedge</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classScarab_1_1HG_1_1Hyperedge_1af824beb7107253a7545b35992c17e057" kindref="member">id</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>label()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>are<sp/>deprecated<sp/>use<sp/>iterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classScarab_1_1HG_1_1Hypernode" kindref="compound">Hypernode</ref><sp/>&amp;<sp/><ref refid="classScarab_1_1HG_1_1Hyperedge_1a9ec8cf9ea7b5f762f359a6f9f1c038da" kindref="member">tail_node</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classScarab_1_1HG_1_1Hyperedge_1a799d8d98242c129d7eee178bdf1fb535" kindref="member">num_nodes</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=0<sp/>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsvector" kindref="compound">svector&lt;int, double&gt;</ref><sp/>&amp;<sp/><ref refid="classScarab_1_1HG_1_1Hyperedge_1a0d201ddb955631aadee4c15cc8e709f8" kindref="member">fvector</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classScarab_1_1HG_1_1Hypernode" kindref="compound">Hypernode</ref><sp/>&amp;<sp/><ref refid="classScarab_1_1HG_1_1Hyperedge_1a6043de341070c103d811f5286193dd46" kindref="member">head_node</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>These<sp/>should<sp/>be<sp/>iterators,<sp/>figuring<sp/>that<sp/>part<sp/>out</highlight></codeline>
<codeline lineno="81"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector<sp/>&lt;Hypernode<sp/>*&gt;<sp/>&amp;<sp/><ref refid="classScarab_1_1HG_1_1Hyperedge_1abac6d27691186608aa12949de6e1c283" kindref="member">tail_nodes</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=0;<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>protected:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//unsigned<sp/>int<sp/>_id;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classScarab_1_1HG_1_1Hyperedge" kindref="compound">Hyperedge</ref><sp/>*<sp/><ref refid="classScarab_1_1HG_1_1Hyperedge" kindref="compound">HEdge</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>vector<sp/>&lt;HEdge<sp/>&gt;<sp/>HEdges;<sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="classScarab_1_1HG_1_1Hypernode" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classScarab_1_1HG_1_1Hypernode" kindref="compound">Hypernode</ref><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Hypernode(unsigned<sp/>int<sp/>id):<sp/>_id(id){}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="classScarab_1_1HG_1_1Hypernode_1a0657cc96f62d29da3ae4b5b9bcab1ce6" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classScarab_1_1HG_1_1Hypernode_1a0657cc96f62d29da3ae4b5b9bcab1ce6" kindref="member">~Hypernode</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classScarab_1_1HG_1_1Hypernode_1a0aeaee6c2ca2a011fcd086f803aaa4d0" kindref="member">id</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight><highlight class="comment">//<sp/>{return<sp/>_id;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>interface<sp/>is<sp/>deprecated,<sp/>use<sp/>iterators<sp/>below<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classScarab_1_1HG_1_1Hypernode_1add2f4d556be223b906bfbab9f1b60870" kindref="member">num_edges</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classScarab_1_1HG_1_1Hypernode_1a4b1a4ffaa8a8b0295763673e6d86d693" kindref="member">num_in_edges</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classScarab_1_1HG_1_1Hyperedge" kindref="compound">Hyperedge</ref><sp/>&amp;<sp/><ref refid="classScarab_1_1HG_1_1Hypernode_1a3bface6832eb54a00d90e4fe8d1999f7" kindref="member">edge</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classScarab_1_1HG_1_1Hyperedge" kindref="compound">Hyperedge</ref><sp/>&amp;<sp/><ref refid="classScarab_1_1HG_1_1Hypernode_1a533d3e0bc2269ec07edbda32305daf70" kindref="member">in_edge</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classScarab_1_1HG_1_1Hypernode_1ae3e1107309a8817d1015bd70a90c1c49" kindref="member">is_terminal</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>These<sp/>should<sp/>be<sp/>(lazy)<sp/>iterators,<sp/>figure<sp/>that<sp/>part<sp/>out</highlight></codeline>
<codeline lineno="165"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector<sp/>&lt;Hyperedge*&gt;<sp/>&amp;<sp/><ref refid="classScarab_1_1HG_1_1Hypernode_1a3306572ded5b5061c1916bcf268be94e" kindref="member">edges</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=0;<sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector<sp/>&lt;Hyperedge*&gt;<sp/>&amp;<sp/><ref refid="classScarab_1_1HG_1_1Hypernode_1aad118748408663b8242dc52d45bbd49d" kindref="member">in_edges</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=0;<sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal">};</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="classScarab_1_1HG_1_1HGraph" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classScarab_1_1HG_1_1HGraph" kindref="compound">HGraph</ref><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classScarab_1_1HG_1_1HGraph" kindref="compound">HGraph</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScarab_1_1HG_1_1HGraph_1ab5aa11c932b28864b56f28e0babbc1c1" kindref="member">print</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classScarab_1_1HG_1_1Hypernode" kindref="compound">Hypernode</ref><sp/>&amp;<sp/><ref refid="classScarab_1_1HG_1_1HGraph_1a5ede392b158e41dd7e95ded1c4b0b5d6" kindref="member">root</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>remove<sp/>these<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_edges()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=0;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_nodes()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classScarab_1_1HG_1_1Hypernode" kindref="compound">Hypernode</ref><sp/>&amp;<sp/>get_node(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classScarab_1_1HG_1_1Hyperedge" kindref="compound">Hyperedge</ref><sp/>&amp;<sp/>get_edge(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Switching<sp/>to<sp/>iterator<sp/>interface</highlight></codeline>
<codeline lineno="206"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector<sp/>&lt;Hypernode*<sp/>&gt;<sp/>&amp;<sp/><ref refid="classScarab_1_1HG_1_1HGraph_1a74d893fba015520774f71f02a46bb6ca" kindref="member">nodes</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=0;<sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector<sp/>&lt;Hyperedge*&gt;<sp/>&amp;<sp/><ref refid="classScarab_1_1HG_1_1HGraph_1a57328729f90cc4152ca79ff15ecdd4bb" kindref="member">edges</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=0;<sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="structScarab_1_1HG_1_1HypergraphPrune" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structScarab_1_1HG_1_1HypergraphPrune" kindref="compound">HypergraphPrune</ref><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><ref refid="structScarab_1_1HG_1_1HypergraphPrune" kindref="compound">HypergraphPrune</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classScarab_1_1HG_1_1HGraph" kindref="compound">HGraph</ref><sp/>&amp;<sp/>hgraph_)<sp/>:<sp/>hgraph(hgraph_)<sp/>{}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/>set<sp/>&lt;int&gt;<sp/>nodes;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/>set<sp/>&lt;int&gt;<sp/>edges;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classScarab_1_1HG_1_1HGraph" kindref="compound">HGraph</ref><sp/>&amp;<sp/>hgraph;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/srush/Projects/relax_decode/hypergraph/Hypergraph.h"/>
  </compounddef>
</doxygen>

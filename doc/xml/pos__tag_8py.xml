<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="pos__tag_8py" kind="file">
    <compoundname>pos_tag.py</compoundname>
    <innernamespace refid="namespacepos__tag">pos_tag</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#!/usr/bin/python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>optparse</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>tagging_util</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">##<sp/>Check<sp/>that<sp/>DBPARSER_DIR<sp/>environment<sp/>variable<sp/>is<sp/>set<sp/>and<sp/>get<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">dbparser_dir<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.environ.has_key(</highlight><highlight class="stringliteral">&apos;DBPARSER_DIR&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>dbparser_dir<sp/>=<sp/>os.environ[</highlight><highlight class="stringliteral">&apos;DBPARSER_DIR&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>set<sp/>the<sp/>DBPARSER_DIR<sp/>environment<sp/>variable<sp/>to<sp/>where<sp/>you<sp/>have<sp/>Dan<sp/>Bikel&apos;s<sp/>parser<sp/>installed.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(1)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">##<sp/>Check<sp/>that<sp/>OPENNLP_DIR<sp/>environment<sp/>variable<sp/>is<sp/>set<sp/>and<sp/>get<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">otk_dir<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.environ.has_key(</highlight><highlight class="stringliteral">&apos;OPENNLP_DIR&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>otk_dir<sp/>=<sp/>os.environ[</highlight><highlight class="stringliteral">&apos;OPENNLP_DIR&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>set<sp/>the<sp/>OPENNLP_DIR<sp/>environment<sp/>variable<sp/>to<sp/>where<sp/>you<sp/>have<sp/>the<sp/>OpenNLP<sp/>Toolkit<sp/>installed.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(1)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">##<sp/>Get<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">opt_parser<sp/>=<sp/>optparse.OptionParser()</highlight></codeline>
<codeline lineno="29"><highlight class="normal">opt_parser.add_option(</highlight><highlight class="stringliteral">&quot;-o&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;--output-dir&quot;</highlight><highlight class="normal">,<sp/>action=</highlight><highlight class="stringliteral">&quot;store&quot;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="stringliteral">&apos;output&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>help=</highlight><highlight class="stringliteral">&quot;save<sp/>tagger<sp/>output<sp/>to<sp/>DIR&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metavar=</highlight><highlight class="stringliteral">&quot;DIR&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">opt_parser.add_option(</highlight><highlight class="stringliteral">&quot;-v&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;--verbose&quot;</highlight><highlight class="normal">,<sp/>action=</highlight><highlight class="stringliteral">&quot;store_true&quot;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>help=</highlight><highlight class="stringliteral">&quot;be<sp/>verbose&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">(options,<sp/>args)<sp/>=<sp/>opt_parser.parse_args()</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">verbose<sp/>=<sp/>options.verbose</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">output_dir<sp/>=<sp/>options.output_dir</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.isfile(output_dir):</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>OSError(</highlight><highlight class="stringliteral">&quot;A<sp/>file<sp/>with<sp/>the<sp/>same<sp/>name<sp/>as<sp/>the<sp/>desired<sp/>dir,<sp/>&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;%s&apos;,<sp/>already<sp/>exists.&quot;</highlight><highlight class="normal"><sp/>%<sp/>output_dir)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal">(os.path.isdir(output_dir)):</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>os.makedirs(output_dir)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">##<sp/>Process<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">adwait_tagged_filename<sp/>=<sp/>args[0]</highlight></codeline>
<codeline lineno="50"><highlight class="normal">test_sentences<sp/>=<sp/>file(args[1])</highlight></codeline>
<codeline lineno="51"><highlight class="normal">output_file<sp/>=<sp/>open(args[2],<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Use<sp/>the<sp/>gold<sp/>trees<sp/>to<sp/>produce<sp/>tagged<sp/>sentences<sp/>in<sp/>Adwait&apos;s<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">#<sp/>with<sp/>underscore<sp/>separator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Note:<sp/>any<sp/>underscores<sp/>in<sp/>the<sp/>tags<sp/>themselves<sp/>will<sp/>be<sp/>converted<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">#<sp/>+us+<sp/>metacharacters.<sp/>These<sp/>get<sp/>unconverted<sp/>at<sp/>the<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">#os.system(&quot;python<sp/>%s/python/parse_to_sentence.py<sp/>-t<sp/>-f<sp/>Adwait<sp/>-s<sp/>-d<sp/>%s<sp/>&gt;<sp/>%s&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>(dbparser_dir,<sp/>tree_filename,<sp/>adwait_tagged_filename))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">model_filename<sp/>=<sp/>output_dir+</highlight><highlight class="stringliteral">&quot;/model.bin.gz&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Make<sp/>a<sp/>tag<sp/>dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">tag_dictionary_filename<sp/>=<sp/>output_dir+</highlight><highlight class="stringliteral">&quot;/tag_dict&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">os.system(</highlight><highlight class="stringliteral">&quot;python<sp/>%s/python/create_tag_dictionary.py<sp/>-s<sp/>_<sp/>%s<sp/>&gt;<sp/>%s&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>(dbparser_dir,<sp/>adwait_tagged_filename,<sp/>tag_dictionary_filename))</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Train<sp/>the<sp/>tagger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">os.system(</highlight><highlight class="stringliteral">&quot;%s/bin/otk_train_tagger.sh<sp/>-dict<sp/>%s<sp/>%s<sp/>%s<sp/>&amp;&gt;<sp/>/dev/null&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>(otk_dir,<sp/>tag_dictionary_filename,<sp/>adwait_tagged_filename,<sp/>model_filename))</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">sentences_to_tag_filename<sp/>=<sp/>output_dir+</highlight><highlight class="stringliteral">&quot;/to_tag.txt&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Strip<sp/>off<sp/>the<sp/>parens<sp/>that<sp/>are<sp/>used<sp/>in<sp/>the<sp/>input<sp/>to<sp/>parser</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">to_tag_file<sp/>=<sp/>open(sentences_to_tag_filename,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">counter<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>sentence<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>test_sentences:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>counter<sp/>%<sp/>5<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clean<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">.join([x.split(</highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">)[0]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sentence.strip().split(</highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">)])</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_tag_file.write(clean+</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>counter<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="83"><highlight class="normal">to_tag_file.close()</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">tagged_filename<sp/>=<sp/>output_dir+</highlight><highlight class="stringliteral">&quot;/tagged.txt&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Run<sp/>the<sp/>tagger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">os.system(</highlight><highlight class="stringliteral">&quot;%s/bin/otk_run_tagger.sh<sp/>-dict<sp/>%s<sp/>-tag_dict<sp/>%s<sp/>%s<sp/>%s<sp/>&gt;<sp/>%s&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>(otk_dir,<sp/>tag_dictionary_filename,<sp/>tag_dictionary_filename,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sentences_to_tag_filename,<sp/>model_filename,<sp/>tagged_filename))</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Convert<sp/>tagger<sp/>output<sp/>to<sp/>MST<sp/>format.<sp/>Unconvert<sp/>the<sp/>+us+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">#<sp/>metachars<sp/>back<sp/>to<sp/>underscores<sp/>too<sp/>(using<sp/>tagging_util.de_metatize()).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>tagged_sent<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>file(tagged_filename):</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>words<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>tags<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>word_tag<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tagged_sent.split():</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(word,tag)<sp/>=<sp/>tagging_util.split_item(word_tag,<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>words.append(word)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tags.append(tagging_util.de_metatize(tag,</highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;+us+&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>output_file.write(</highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">.join(words)+</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>output_file.write(</highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">.join(tags)+</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">output_file.close()</highlight></codeline>
    </programlisting>
    <location file="/home/srush/Projects/relax_decode/third-party/mstparser/bin/pos_tag.py"/>
  </compounddef>
</doxygen>

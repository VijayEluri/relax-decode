<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="class_tag_mrf_aligner" kind="class" prot="public">
    <compoundname>TagMrfAligner</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_tag_mrf_aligner_1a8a5d34bcfecdfb8c3901297ad34e301d" prot="public" static="no" mutable="no">
        <type>vector&lt; <ref refid="class_m_r_f" kindref="compound">MRF</ref> * &gt;</type>
        <definition>vector&lt;MRF *&gt; TagMrfAligner::mrf_models</definition>
        <argsstring></argsstring>
        <name>mrf_models</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/tagger/TagConstraints.h" line="115" bodyfile="/home/srush/Projects/relax_decode/tagger/TagConstraints.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tag_mrf_aligner_1ae20f5a7d1131701986a36b70dca2c26f" prot="public" static="no" mutable="no">
        <type>vector&lt; vector&lt; <ref refid="struct_tag_index" kindref="compound">TagIndex</ref> &gt; &gt;</type>
        <definition>vector&lt;vector &lt;TagIndex&gt; &gt; TagMrfAligner::tag_constraints</definition>
        <argsstring></argsstring>
        <name>tag_constraints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/tagger/TagConstraints.h" line="116" bodyfile="/home/srush/Projects/relax_decode/tagger/TagConstraints.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_tag_mrf_aligner_1ae26a953cc83027d6b47464a166a302c4" prot="private" static="no" mutable="no">
        <type>map&lt; <ref refid="struct_tag_index" kindref="compound">TagIndex</ref>, <ref refid="struct_mrf_index" kindref="compound">MrfIndex</ref> &gt;</type>
        <definition>map&lt;TagIndex, MrfIndex&gt; TagMrfAligner::alignment</definition>
        <argsstring></argsstring>
        <name>alignment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/tagger/TagConstraints.h" line="118" bodyfile="/home/srush/Projects/relax_decode/tagger/TagConstraints.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_tag_mrf_aligner_1ae2bae21b52efb547b46f2da80f61ec42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TagMrfAligner::build_from_constraints</definition>
        <argsstring>(string file_name)</argsstring>
        <name>build_from_constraints</name>
        <param>
          <type>string</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/tagger/TagConstraints.h" line="103" bodyfile="/home/srush/Projects/relax_decode/tagger/TagConstraints.cpp" bodystart="117" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_tag_mrf_aligner_1a5b6ecf59596d656333f8113f6f05eba4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TagMrfAligner::align</definition>
        <argsstring>(TagIndex tag_ind, MrfIndex &amp;mrf_ind)</argsstring>
        <name>align</name>
        <param>
          <type><ref refid="struct_tag_index" kindref="compound">TagIndex</ref></type>
          <declname>tag_ind</declname>
        </param>
        <param>
          <type><ref refid="struct_mrf_index" kindref="compound">MrfIndex</ref> &amp;</type>
          <declname>mrf_ind</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/tagger/TagConstraints.h" line="105" bodyfile="/home/srush/Projects/relax_decode/tagger/TagConstraints.h" bodystart="105" bodyend="113"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1297">
        <label>T</label>
      </node>
      <node id="1289">
        <label>GraphProtoInterface</label>
        <link refid="class_graph_proto_interface"/>
        <childnode refid="1290" relation="usage">
          <edgelabel>_graph</edgelabel>
        </childnode>
      </node>
      <node id="1292">
        <label>Scarab::Graph::Graphedge</label>
        <link refid="class_scarab_1_1_graph_1_1_graphedge"/>
        <childnode refid="1293" relation="usage">
          <edgelabel>_to_node</edgelabel>
          <edgelabel>_from_node</edgelabel>
        </childnode>
      </node>
      <node id="1298">
        <label>Cache&lt; Graphnode, vector&lt; State &gt; &gt;</label>
        <link refid="class_cache"/>
        <childnode refid="1299" relation="usage">
          <edgelabel>has_value</edgelabel>
        </childnode>
      </node>
      <node id="1296">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="1297" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="1304">
        <label>MrfIndex</label>
        <link refid="struct_mrf_index"/>
      </node>
      <node id="1300">
        <label>Cache&lt; Graphedge, map&lt; pair&lt; int, int &gt;, double &gt; &gt;</label>
        <link refid="class_cache"/>
        <childnode refid="1299" relation="usage">
          <edgelabel>has_value</edgelabel>
        </childnode>
      </node>
      <node id="1303">
        <label>std::map&lt; TagIndex, MrfIndex &gt;</label>
        <childnode refid="1304" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="1305" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="1301">
        <label>Cache&lt; Graphnode, Cache&lt; State, double &gt; * &gt;</label>
        <link refid="class_cache"/>
        <childnode refid="1299" relation="usage">
          <edgelabel>has_value</edgelabel>
        </childnode>
      </node>
      <node id="1293">
        <label>Scarab::Graph::Graphnode</label>
        <link refid="class_scarab_1_1_graph_1_1_graphnode"/>
        <childnode refid="1291" relation="usage">
          <edgelabel>_in_edges</edgelabel>
          <edgelabel>_edges</edgelabel>
        </childnode>
        <childnode refid="1294" relation="usage">
          <edgelabel>_label</edgelabel>
        </childnode>
      </node>
      <node id="1295">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="1302">
        <label>std::vector&lt; vector&lt; TagIndex &gt; &gt;</label>
      </node>
      <node id="1286">
        <label>TagMrfAligner</label>
        <link refid="class_tag_mrf_aligner"/>
        <childnode refid="1287" relation="usage">
          <edgelabel>mrf_models</edgelabel>
        </childnode>
        <childnode refid="1302" relation="usage">
          <edgelabel>tag_constraints</edgelabel>
        </childnode>
        <childnode refid="1303" relation="usage">
          <edgelabel>alignment</edgelabel>
        </childnode>
      </node>
      <node id="1287">
        <label>std::vector&lt; MRF * &gt;</label>
        <childnode refid="1288" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="1305">
        <label>TagIndex</label>
        <link refid="struct_tag_index"/>
      </node>
      <node id="1299">
        <label>std::vector&lt; bool &gt;</label>
      </node>
      <node id="1291">
        <label>std::vector&lt; const Graphedge * &gt;</label>
        <childnode refid="1292" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="1290">
        <label>Scarab::Graph::Graph</label>
        <link refid="class_scarab_1_1_graph_1_1_graph"/>
        <childnode refid="1291" relation="usage">
          <edgelabel>_edges</edgelabel>
        </childnode>
        <childnode refid="1296" relation="usage">
          <edgelabel>_nodes</edgelabel>
        </childnode>
      </node>
      <node id="1288">
        <label>MRF</label>
        <link refid="class_m_r_f"/>
        <childnode refid="1289" relation="public-inheritance">
        </childnode>
        <childnode refid="1298" relation="usage">
          <edgelabel>_node_states</edgelabel>
        </childnode>
        <childnode refid="1300" relation="usage">
          <edgelabel>_edge_potentials</edgelabel>
        </childnode>
        <childnode refid="1301" relation="usage">
          <edgelabel>_node_potentials</edgelabel>
        </childnode>
      </node>
      <node id="1294">
        <label>std::string</label>
        <childnode refid="1295" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/srush/Projects/relax_decode/tagger/TagConstraints.h" line="100" bodyfile="/home/srush/Projects/relax_decode/tagger/TagConstraints.h" bodystart="100" bodyend="119"/>
    <listofallmembers>
      <member refid="class_tag_mrf_aligner_1a5b6ecf59596d656333f8113f6f05eba4" prot="public" virt="non-virtual"><scope>TagMrfAligner</scope><name>align</name></member>
      <member refid="class_tag_mrf_aligner_1ae26a953cc83027d6b47464a166a302c4" prot="private" virt="non-virtual"><scope>TagMrfAligner</scope><name>alignment</name></member>
      <member refid="class_tag_mrf_aligner_1ae2bae21b52efb547b46f2da80f61ec42" prot="public" virt="non-virtual"><scope>TagMrfAligner</scope><name>build_from_constraints</name></member>
      <member refid="class_tag_mrf_aligner_1a8a5d34bcfecdfb8c3901297ad34e301d" prot="public" virt="non-virtual"><scope>TagMrfAligner</scope><name>mrf_models</name></member>
      <member refid="class_tag_mrf_aligner_1ae20f5a7d1131701986a36b70dca2c26f" prot="public" virt="non-virtual"><scope>TagMrfAligner</scope><name>tag_constraints</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

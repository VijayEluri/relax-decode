<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="_subgradient_8h" kind="file">
    <compoundname>Subgradient.h</compoundname>
    <includes local="yes">svector.hpp</includes>
    <includes local="no">vector</includes>
    <includedby refid="_dual_decomposition_8h" local="yes">optimization/DualDecomposition.h</includedby>
    <includedby refid="_subgradient_8cpp" local="yes">optimization/Subgradient.cpp</includedby>
    <includedby refid="_run_8cpp" local="yes">Run.cpp</includedby>
    <includedby refid="_decode_8cpp" local="yes">trans_decode/Decode.cpp</includedby>
    <includedby refid="_decode_8h" local="yes">trans_decode/Decode.h</includedby>
    <incdepgraph>
      <node id="1202">
        <label>optimization/Subgradient.h</label>
        <link refid="Subgradient.h"/>
        <childnode refid="1203" relation="include">
        </childnode>
        <childnode refid="1204" relation="include">
        </childnode>
      </node>
      <node id="1203">
        <label>svector.hpp</label>
      </node>
      <node id="1204">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1205">
        <label>optimization/Subgradient.h</label>
        <link refid="Subgradient.h"/>
        <childnode refid="1206" relation="include">
        </childnode>
        <childnode refid="1208" relation="include">
        </childnode>
      </node>
      <node id="1208">
        <label>trans_decode/Decode.h</label>
        <link refid="_decode_8h_source"/>
      </node>
      <node id="1206">
        <label>optimization/DualDecomposition.h</label>
        <link refid="_dual_decomposition_8h_source"/>
        <childnode refid="1207" relation="include">
        </childnode>
      </node>
      <node id="1207">
        <label>tagger/TagSolvers.h</label>
        <link refid="_tag_solvers_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_subgradient_producer" prot="public">SubgradientProducer</innerclass>
    <innerclass refid="class_subgradient" prot="public">Subgradient</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_subgradient_8h_1ae908848834ffe0602906f263f3582c8b" prot="public" static="no">
        <type>svector&lt; int, double &gt;</type>
        <definition>typedef svector&lt;int, double&gt; wvector</definition>
        <argsstring></argsstring>
        <name>wvector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/optimization/Subgradient.h" line="9" bodyfile="/home/srush/Projects/relax_decode/optimization/Subgradient.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>SUBGRADIENT_H_</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SUBGRADIENT_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;svector.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>svector&lt;int,<sp/>double&gt;<sp/>wvector;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="class_subgradient_producer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_subgradient_producer" kindref="compound">SubgradientProducer</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/>solve(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>primal,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>dual,<sp/>wvector<sp/>&amp;,<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;)<sp/>=0;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update_weights(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wvector<sp/>&amp;<sp/>updates,<sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wvector<sp/>*<sp/>weights<sp/>)=0;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="class_subgradient" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_subgradient" kindref="compound">Subgradient</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_subgradient_1a2509e39964e1280532fd4994b3d747ce" refkind="member"><highlight class="normal"><sp/><ref refid="class_subgradient_1a2509e39964e1280532fd4994b3d747ce" kindref="member">Subgradient</ref>(<ref refid="class_subgradient_producer" kindref="compound">SubgradientProducer</ref><sp/>&amp;<sp/>subgrad_producer):<sp/>_s(subgrad_producer){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>_best_dual<sp/>=<sp/>-1e20;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>_best_primal<sp/>=<sp/>1e20;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>_round<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>_nround<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>_is_stuck<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>_first_stuck_iteration<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>_aggressive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>solve(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>example);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="class_subgradient_1a54907389766b702c467cf2ab20f8d051" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_subgradient_1a54907389766b702c467cf2ab20f8d051" kindref="member">is_stuck</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_is_stuck;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>run_one_round();<sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="class_subgradient_producer" kindref="compound">SubgradientProducer</ref><sp/>&amp;<sp/>_s;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_best_dual,<sp/>_best_primal;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_aggressive;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update_weights(wvector<sp/>&amp;<sp/>subgrad,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_round,<sp/>_nround;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>wvector<sp/>_weights;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>vector<sp/>&lt;double&gt;<sp/>_primals;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>vector<sp/>&lt;double&gt;<sp/>_duals;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_base_weight;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_is_stuck;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_first_stuck_iteration;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_best_primal_iteration;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/srush/Projects/relax_decode/optimization/Subgradient.h"/>
  </compounddef>
</doxygen>

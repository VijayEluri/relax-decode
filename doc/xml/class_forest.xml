<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="class_forest" kind="class" prot="public">
    <compoundname>Forest</compoundname>
    <basecompoundref refid="class_scarab_1_1_h_g_1_1_hypergraph_impl" prot="public" virt="non-virtual">Scarab::HG::HypergraphImpl</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_forest_1a8eeca9daa4cabf76e8367b57fc7c1842" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Forest::~Forest</definition>
        <argsstring>()</argsstring>
        <name>~Forest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/transforest/Forest.h" line="161" bodyfile="/home/srush/Projects/relax_decode/transforest/Forest.h" bodystart="161" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_forest_1a621a1a65d0f877bb33b15c79f9e24c4d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Forest::print</definition>
        <argsstring>() const </argsstring>
        <name>print</name>
        <reimplements refid="class_scarab_1_1_h_g_1_1_h_graph_1ab5aa11c932b28864b56f28e0babbc1c1">print</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display the hypergraph for debugging. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/transforest/Forest.h" line="164" bodyfile="/home/srush/Projects/relax_decode/transforest/Forest.cpp" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_forest_1a4cc0cf94c18913eadd0b36f3dcf68cef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Forest::append_end_nodes</definition>
        <argsstring>()</argsstring>
        <name>append_end_nodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/transforest/Forest.h" line="166" bodyfile="/home/srush/Projects/relax_decode/transforest/Forest.cpp" bodystart="13" bodyend="38"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_forest_1a1b9ddc0e03c1ccfcc73987fe9378fa84" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_forest" kindref="compound">Forest</ref></type>
        <definition>Forest Forest::from_file</definition>
        <argsstring>(const char *file_name)</argsstring>
        <name>from_file</name>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/transforest/Forest.h" line="168" bodyfile="/home/srush/Projects/relax_decode/transforest/Forest.cpp" bodystart="131" bodyend="148"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_forest_1ab40070ea9e3885d252fb7848c11f27ef" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_scarab_1_1_h_g_1_1_hypernode" kindref="compound">Scarab::HG::Hypernode</ref> *</type>
        <definition>Scarab::HG::Hypernode * Forest::make_node</definition>
        <argsstring>(const Hypergraph_Node &amp;node, wvector *features)</argsstring>
        <name>make_node</name>
        <reimplements refid="class_scarab_1_1_h_g_1_1_hypergraph_impl_1af14198ba5fccb5d4118188fa42feb8ff">make_node</reimplements>
        <param>
          <type>const Hypergraph_Node &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>wvector *</type>
          <declname>features</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/transforest/Forest.h" line="171" bodyfile="/home/srush/Projects/relax_decode/transforest/Forest.cpp" bodystart="41" bodyend="47"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="531">
        <label>Scarab::HG::HypergraphImpl</label>
        <link refid="class_scarab_1_1_h_g_1_1_hypergraph_impl"/>
        <childnode refid="532" relation="public-inheritance">
        </childnode>
      </node>
      <node id="530">
        <label>Forest</label>
        <link refid="class_forest"/>
        <childnode refid="531" relation="public-inheritance">
        </childnode>
      </node>
      <node id="532">
        <label>Scarab::HG::HGraph</label>
        <link refid="class_scarab_1_1_h_g_1_1_h_graph"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="539">
        <label>Scarab::HG::Hyperedge</label>
        <link refid="class_scarab_1_1_h_g_1_1_hyperedge"/>
      </node>
      <node id="534">
        <label>Scarab::HG::HypergraphImpl</label>
        <link refid="class_scarab_1_1_h_g_1_1_hypergraph_impl"/>
        <childnode refid="535" relation="public-inheritance">
        </childnode>
        <childnode refid="536" relation="usage">
          <edgelabel>_nodes</edgelabel>
        </childnode>
        <childnode refid="538" relation="usage">
          <edgelabel>_edges</edgelabel>
        </childnode>
        <childnode refid="537" relation="usage">
          <edgelabel>_root</edgelabel>
        </childnode>
      </node>
      <node id="537">
        <label>Scarab::HG::Hypernode</label>
        <link refid="class_scarab_1_1_h_g_1_1_hypernode"/>
      </node>
      <node id="536">
        <label>std::vector&lt; Hypernode * &gt;</label>
        <childnode refid="537" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="533">
        <label>Forest</label>
        <link refid="class_forest"/>
        <childnode refid="534" relation="public-inheritance">
        </childnode>
      </node>
      <node id="535">
        <label>Scarab::HG::HGraph</label>
        <link refid="class_scarab_1_1_h_g_1_1_h_graph"/>
      </node>
      <node id="538">
        <label>std::vector&lt; Hyperedge * &gt;</label>
        <childnode refid="539" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/srush/Projects/relax_decode/transforest/Forest.h" line="159" bodyfile="/home/srush/Projects/relax_decode/transforest/Forest.h" bodystart="159" bodyend="172"/>
    <listofallmembers>
      <member refid="class_scarab_1_1_h_g_1_1_hypergraph_impl_1a56fb710140f3359646b1a17cb0417d74" prot="protected" virt="non-virtual"><scope>Forest</scope><name>_edges</name></member>
      <member refid="class_scarab_1_1_h_g_1_1_hypergraph_impl_1a4cc57d9255e2f09714c5913d67cd0554" prot="protected" virt="non-virtual"><scope>Forest</scope><name>_nodes</name></member>
      <member refid="class_scarab_1_1_h_g_1_1_hypergraph_impl_1a7035fdae4c04d0752aaaf1e7eba7600e" prot="protected" virt="non-virtual"><scope>Forest</scope><name>_root</name></member>
      <member refid="class_forest_1a4cc0cf94c18913eadd0b36f3dcf68cef" prot="public" virt="non-virtual"><scope>Forest</scope><name>append_end_nodes</name></member>
      <member refid="class_scarab_1_1_h_g_1_1_hypergraph_impl_1a1f33418f90b826db9cfc0bb34e1ca9cf" prot="public" virt="non-virtual"><scope>Forest</scope><name>build_from_file</name></member>
      <member refid="class_scarab_1_1_h_g_1_1_hypergraph_impl_1a30349aca0e3b8f8dc72ed74d78e8c5b8" prot="protected" virt="virtual"><scope>Forest</scope><name>convert_edge</name></member>
      <member refid="class_scarab_1_1_h_g_1_1_hypergraph_impl_1a93e9e250fa457a2171bf07241b7829eb" prot="protected" virt="virtual"><scope>Forest</scope><name>convert_node</name></member>
      <member refid="class_scarab_1_1_h_g_1_1_hypergraph_impl_1a0c8373e545fe59b0cb7036b4751508e1" prot="public" virt="virtual"><scope>Forest</scope><name>edges</name></member>
      <member refid="class_forest_1a1b9ddc0e03c1ccfcc73987fe9378fa84" prot="public" virt="non-virtual"><scope>Forest</scope><name>from_file</name></member>
      <member refid="class_scarab_1_1_h_g_1_1_hypergraph_impl_1a31a148139b888b6bd10e78fe555144c7" prot="public" virt="virtual"><scope>Forest</scope><name>get_edge</name></member>
      <member refid="class_scarab_1_1_h_g_1_1_hypergraph_impl_1a9276a6faa074eb4f3bbb2f8b8d5d4fbf" prot="public" virt="virtual"><scope>Forest</scope><name>get_node</name></member>
      <member refid="class_scarab_1_1_h_g_1_1_hypergraph_impl_1aa7192cf8f168e5bfed67a8faf85c8cb4" prot="protected" virt="non-virtual"><scope>Forest</scope><name>hgraph</name></member>
      <member refid="class_scarab_1_1_h_g_1_1_hypergraph_impl_1a067b2daae46f4758f9621fb9d803bef2" prot="public" virt="non-virtual"><scope>Forest</scope><name>HypergraphImpl</name></member>
      <member refid="class_scarab_1_1_h_g_1_1_hypergraph_impl_1a935bed9b8cf9235a1adb61d0889f6ac7" prot="public" virt="non-virtual"><scope>Forest</scope><name>HypergraphImpl</name></member>
      <member refid="class_scarab_1_1_h_g_1_1_hypergraph_impl_1a238a7ce3b578c8126eccbc7803570638" prot="protected" virt="virtual"><scope>Forest</scope><name>make_edge</name></member>
      <member refid="class_forest_1ab40070ea9e3885d252fb7848c11f27ef" prot="protected" virt="virtual"><scope>Forest</scope><name>make_node</name></member>
      <member refid="class_scarab_1_1_h_g_1_1_hypergraph_impl_1a9aef2881b489c86d4d83e996a70f8141" prot="public" virt="virtual"><scope>Forest</scope><name>nodes</name></member>
      <member refid="class_scarab_1_1_h_g_1_1_hypergraph_impl_1a0adcc8783b94cbe07b092220082d00ab" prot="public" virt="virtual"><scope>Forest</scope><name>num_edges</name></member>
      <member refid="class_scarab_1_1_h_g_1_1_hypergraph_impl_1ad39e917a84acb1d4caf0145ce8a903a2" prot="public" virt="virtual"><scope>Forest</scope><name>num_nodes</name></member>
      <member refid="class_forest_1a621a1a65d0f877bb33b15c79f9e24c4d" prot="public" virt="virtual"><scope>Forest</scope><name>print</name></member>
      <member refid="class_scarab_1_1_h_g_1_1_hypergraph_impl_1a98701d5529aaf3e5d4fa386694843f20" prot="public" virt="non-virtual"><scope>Forest</scope><name>prune</name></member>
      <member refid="class_scarab_1_1_h_g_1_1_hypergraph_impl_1a31172009b97d179f6b1199f191197a32" prot="public" virt="virtual"><scope>Forest</scope><name>root</name></member>
      <member refid="class_scarab_1_1_h_g_1_1_hypergraph_impl_1ae91de73e633e450b01664e3ec964019c" prot="protected" virt="virtual"><scope>Forest</scope><name>set_up</name></member>
      <member refid="class_scarab_1_1_h_g_1_1_hypergraph_impl_1af8f5ed38a355676c473e8d54b5552cc6" prot="public" virt="non-virtual"><scope>Forest</scope><name>write_to_file</name></member>
      <member refid="class_forest_1a8eeca9daa4cabf76e8367b57fc7c1842" prot="public" virt="non-virtual"><scope>Forest</scope><name>~Forest</name></member>
      <member refid="class_scarab_1_1_h_g_1_1_h_graph_1a54e1901fef9f35caecf6f1f75eecf21a" prot="public" virt="virtual"><scope>Forest</scope><name>~HGraph</name></member>
      <member refid="class_scarab_1_1_h_g_1_1_hypergraph_impl_1af9726fe39b4cfdbcbead1cba4efa6a01" prot="public" virt="non-virtual"><scope>Forest</scope><name>~HypergraphImpl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

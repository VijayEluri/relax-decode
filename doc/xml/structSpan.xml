<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="structSpan" kind="struct" prot="public">
    <compoundname>Span</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structSpan_1a383594a5e203891204e7fa5849b48e78" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Span::start</definition>
        <argsstring></argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/parse/EisnerToHypergraph.h" line="24" bodyfile="/home/srush/Projects/relax_decode/parse/EisnerToHypergraph.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structSpan_1ab1d7ba41653ccb2e46cf061c4a476f1d" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Span::end</definition>
        <argsstring></argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/parse/EisnerToHypergraph.h" line="25" bodyfile="/home/srush/Projects/relax_decode/parse/EisnerToHypergraph.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structSpan_1a8637010e702d0acf63cdf790ad49c83e" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Span::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/parse/EisnerToHypergraph.h" line="26" bodyfile="/home/srush/Projects/relax_decode/parse/EisnerToHypergraph.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structSpan_1aa5fb6e25d5c38cd540cc82ca179c82f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Span::Span</definition>
        <argsstring>(int s, int e)</argsstring>
        <name>Span</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/parse/EisnerToHypergraph.h" line="27" bodyfile="/home/srush/Projects/relax_decode/parse/EisnerToHypergraph.h" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="structSpan_1af6e7cf8f52e52996cf52bd7d702e9744" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string Span::name</definition>
        <argsstring>()</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/parse/EisnerToHypergraph.h" line="31" bodyfile="/home/srush/Projects/relax_decode/parse/EisnerToHypergraph.h" bodystart="31" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="structSpan_1acebe6ab7baeb922c9c69aac317bbcb7a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Span::operator==</definition>
        <argsstring>(const Span &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structSpan" kindref="compound">Span</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/parse/EisnerToHypergraph.h" line="37" bodyfile="/home/srush/Projects/relax_decode/parse/EisnerToHypergraph.h" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="structSpan_1a413ed85231167a494dafeaea71fb4ae0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Span::operator&lt;</definition>
        <argsstring>(const Span &amp;other) const </argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="structSpan" kindref="compound">Span</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/srush/Projects/relax_decode/parse/EisnerToHypergraph.h" line="41" bodyfile="/home/srush/Projects/relax_decode/parse/EisnerToHypergraph.h" bodystart="41" bodyend="48"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/srush/Projects/relax_decode/parse/EisnerToHypergraph.h" line="23" bodyfile="/home/srush/Projects/relax_decode/parse/EisnerToHypergraph.h" bodystart="23" bodyend="51"/>
    <listofallmembers>
      <member refid="structSpan_1ab1d7ba41653ccb2e46cf061c4a476f1d" prot="public" virt="non-virtual"><scope>Span</scope><name>end</name></member>
      <member refid="structSpan_1af6e7cf8f52e52996cf52bd7d702e9744" prot="public" virt="non-virtual"><scope>Span</scope><name>name</name></member>
      <member refid="structSpan_1a413ed85231167a494dafeaea71fb4ae0" prot="public" virt="non-virtual"><scope>Span</scope><name>operator&lt;</name></member>
      <member refid="structSpan_1acebe6ab7baeb922c9c69aac317bbcb7a" prot="public" virt="non-virtual"><scope>Span</scope><name>operator==</name></member>
      <member refid="structSpan_1a8637010e702d0acf63cdf790ad49c83e" prot="public" virt="non-virtual"><scope>Span</scope><name>size</name></member>
      <member refid="structSpan_1aa5fb6e25d5c38cd540cc82ca179c82f2" prot="public" virt="non-virtual"><scope>Span</scope><name>Span</name></member>
      <member refid="structSpan_1a383594a5e203891204e7fa5849b48e78" prot="public" virt="non-virtual"><scope>Span</scope><name>start</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

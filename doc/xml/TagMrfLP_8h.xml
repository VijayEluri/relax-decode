<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="TagMrfLP_8h" kind="file">
    <compoundname>TagMrfLP.h</compoundname>
    <includes refid="TagLP_8h" local="yes">TagLP.h</includes>
    <includes refid="MRFLP_8h" local="yes">MRFLP.h</includes>
    <includes refid="TagConstraints_8h" local="yes">TagConstraints.h</includes>
    <includedby refid="PottsTagger_8cpp" local="yes">PottsTagger.cpp</includedby>
    <incdepgraph>
      <node id="1009">
        <label>HypergraphLP.h</label>
        <link refid="HypergraphLP_8h_source"/>
        <childnode refid="989" relation="include">
        </childnode>
        <childnode refid="998" relation="include">
        </childnode>
        <childnode refid="1005" relation="include">
        </childnode>
      </node>
      <node id="999">
        <label>Tagger.h</label>
        <link refid="Tagger_8h_source"/>
        <childnode refid="1000" relation="include">
        </childnode>
        <childnode refid="1001" relation="include">
        </childnode>
        <childnode refid="989" relation="include">
        </childnode>
        <childnode refid="1002" relation="include">
        </childnode>
        <childnode refid="1006" relation="include">
        </childnode>
      </node>
      <node id="1008">
        <label>assert.h</label>
      </node>
      <node id="987">
        <label>lp/TagMrfLP.h</label>
        <link refid="TagMrfLP.h"/>
        <childnode refid="988" relation="include">
        </childnode>
        <childnode refid="1010" relation="include">
        </childnode>
        <childnode refid="1017" relation="include">
        </childnode>
      </node>
      <node id="1011">
        <label>MRF.h</label>
        <link refid="MRF_8h_source"/>
        <childnode refid="1012" relation="include">
        </childnode>
        <childnode refid="997" relation="include">
        </childnode>
        <childnode refid="1013" relation="include">
        </childnode>
        <childnode refid="1014" relation="include">
        </childnode>
        <childnode refid="1015" relation="include">
        </childnode>
        <childnode refid="1002" relation="include">
        </childnode>
        <childnode refid="1016" relation="include">
        </childnode>
        <childnode refid="1006" relation="include">
        </childnode>
      </node>
      <node id="1012">
        <label>cassert</label>
      </node>
      <node id="997">
        <label>string</label>
      </node>
      <node id="1003">
        <label>hypergraph.pb.h</label>
      </node>
      <node id="1006">
        <label>EdgeCache.h</label>
        <link refid="EdgeCache_8h_source"/>
        <childnode refid="995" relation="include">
        </childnode>
        <childnode refid="1007" relation="include">
        </childnode>
        <childnode refid="1008" relation="include">
        </childnode>
      </node>
      <node id="1002">
        <label>HypergraphImpl.h</label>
        <link refid="HypergraphImpl_8h_source"/>
        <childnode refid="989" relation="include">
        </childnode>
        <childnode refid="1003" relation="include">
        </childnode>
        <childnode refid="1004" relation="include">
        </childnode>
        <childnode refid="990" relation="include">
        </childnode>
        <childnode refid="1005" relation="include">
        </childnode>
        <childnode refid="995" relation="include">
        </childnode>
        <childnode refid="996" relation="include">
        </childnode>
      </node>
      <node id="989">
        <label>Hypergraph.h</label>
        <link refid="Hypergraph_8h_source"/>
        <childnode refid="990" relation="include">
        </childnode>
        <childnode refid="995" relation="include">
        </childnode>
        <childnode refid="996" relation="include">
        </childnode>
        <childnode refid="997" relation="include">
        </childnode>
      </node>
      <node id="992">
        <label>fstream</label>
      </node>
      <node id="1013">
        <label>Graph.h</label>
        <link refid="Graph_8h_source"/>
        <childnode refid="995" relation="include">
        </childnode>
        <childnode refid="997" relation="include">
        </childnode>
        <childnode refid="1005" relation="include">
        </childnode>
      </node>
      <node id="1010">
        <label>MRFLP.h</label>
        <link refid="MRFLP_8h_source"/>
        <childnode refid="998" relation="include">
        </childnode>
        <childnode refid="1011" relation="include">
        </childnode>
        <childnode refid="1013" relation="include">
        </childnode>
      </node>
      <node id="994">
        <label>svector.hpp</label>
      </node>
      <node id="990">
        <label>Weights.h</label>
        <link refid="Weights_8h_source"/>
        <childnode refid="991" relation="include">
        </childnode>
        <childnode refid="992" relation="include">
        </childnode>
        <childnode refid="993" relation="include">
        </childnode>
        <childnode refid="994" relation="include">
        </childnode>
      </node>
      <node id="1005">
        <label>../common.h</label>
      </node>
      <node id="1007">
        <label>bitset</label>
      </node>
      <node id="1000">
        <label>tag.pb.h</label>
      </node>
      <node id="1001">
        <label>dep.pb.h</label>
      </node>
      <node id="1017">
        <label>TagConstraints.h</label>
        <link refid="TagConstraints_8h_source"/>
        <childnode refid="999" relation="include">
        </childnode>
        <childnode refid="992" relation="include">
        </childnode>
        <childnode refid="995" relation="include">
        </childnode>
        <childnode refid="997" relation="include">
        </childnode>
        <childnode refid="996" relation="include">
        </childnode>
        <childnode refid="990" relation="include">
        </childnode>
        <childnode refid="1006" relation="include">
        </childnode>
        <childnode refid="1011" relation="include">
        </childnode>
        <childnode refid="1018" relation="include">
        </childnode>
      </node>
      <node id="995">
        <label>vector</label>
      </node>
      <node id="1016">
        <label>GraphProtoInterface.h</label>
        <link refid="GraphProtoInterface_8h_source"/>
        <childnode refid="1014" relation="include">
        </childnode>
        <childnode refid="1013" relation="include">
        </childnode>
      </node>
      <node id="1018">
        <label>HypergraphAlgorithms.h</label>
        <link refid="HypergraphAlgorithms_8h_source"/>
        <childnode refid="994" relation="include">
        </childnode>
        <childnode refid="1006" relation="include">
        </childnode>
        <childnode refid="989" relation="include">
        </childnode>
      </node>
      <node id="1015">
        <label>mrf.pb.h</label>
      </node>
      <node id="1014">
        <label>graph.pb.h</label>
      </node>
      <node id="991">
        <label>iostream</label>
      </node>
      <node id="988">
        <label>TagLP.h</label>
        <link refid="TagLP_8h_source"/>
        <childnode refid="989" relation="include">
        </childnode>
        <childnode refid="998" relation="include">
        </childnode>
        <childnode refid="999" relation="include">
        </childnode>
        <childnode refid="1009" relation="include">
        </childnode>
        <childnode refid="1005" relation="include">
        </childnode>
      </node>
      <node id="993">
        <label>cy_svector.hpp</label>
      </node>
      <node id="998">
        <label>gurobi_c++.h</label>
      </node>
      <node id="996">
        <label>set</label>
      </node>
      <node id="1004">
        <label>features.pb.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="classTagMrfLP" prot="public">TagMrfLP</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>TAGMRFLP_H</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TAGMRFLP_H</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TagLP.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MRFLP.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TagConstraints.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="classTagMrfLP" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classTagMrfLP" kindref="compound">TagMrfLP</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>align_tag_mrf(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector<sp/>&lt;const<sp/>MRFLP<sp/>*&gt;<sp/>&amp;<sp/>mrflp,<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector<sp/>&lt;const<sp/>TagLP<sp/>*&gt;<sp/>&amp;<sp/>taglp,<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTagMrfAligner" kindref="compound">TagMrfAligner</ref><sp/>aligner,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GRBModel<sp/>&amp;<sp/>model,<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>var_type<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>taglp.size();<sp/>i<sp/>++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTag" kindref="compound">Tag</ref><sp/>&amp;<sp/>t,<sp/>taglp[i]-&gt;p.tags())<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structMrfIndex" kindref="compound">MrfIndex</ref><sp/>mrf_ind;<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTagIndex" kindref="compound">TagIndex</ref><sp/>tag_ind(i,<sp/>t.ind,<sp/>t.tag);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_aligned<sp/>=<sp/>aligner.align(tag_ind,<sp/>mrf_ind);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_aligned)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(mrf_ind.group<sp/>&lt;<sp/>mrflp.size());</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GRBVar<sp/>tag_var<sp/>=<sp/>taglp[i]-&gt;tag_vars.get(t);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GRBVar<sp/>mrf_node_state_var<sp/>=<sp/>mrflp[mrf_ind.group]-&gt;node_vars.store[mrf_ind.node]-&gt;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>store[mrf_ind.state];</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringstream<sp/>buf;<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;tag_mrf_join_&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.addConstr(tag_var<sp/>==<sp/>mrf_node_state_var,<sp/>buf.str());</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>model.update();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/srush/Projects/relax_decode/lp/TagMrfLP.h"/>
  </compounddef>
</doxygen>

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lattice.proto

#ifndef PROTOBUF_lattice_2eproto__INCLUDED
#define PROTOBUF_lattice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace lattice {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_lattice_2eproto();
void protobuf_AssignDesc_lattice_2eproto();
void protobuf_ShutdownFile_lattice_2eproto();

class Lattice;
class Lattice_Node;
class Lattice_Edge;
class Subword;
class Phraselet;
class Phraselets;
class Origin;

// ===================================================================

class Lattice_Node : public ::google::protobuf::Message {
 public:
  Lattice_Node();
  virtual ~Lattice_Node();
  
  Lattice_Node(const Lattice_Node& from);
  
  inline Lattice_Node& operator=(const Lattice_Node& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Lattice_Node& default_instance();
  
  void Swap(Lattice_Node* other);
  
  // implements Message ----------------------------------------------
  
  Lattice_Node* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Lattice_Node& from);
  void MergeFrom(const Lattice_Node& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional string label = 2;
  inline bool has_label() const;
  inline void clear_label();
  static const int kLabelFieldNumber = 2;
  inline const ::std::string& label() const;
  inline void set_label(const ::std::string& value);
  inline void set_label(const char* value);
  inline void set_label(const char* value, size_t size);
  inline ::std::string* mutable_label();
  inline ::std::string* release_label();
  
  // repeated .lattice.Lattice.Edge edge = 3;
  inline int edge_size() const;
  inline void clear_edge();
  static const int kEdgeFieldNumber = 3;
  inline const ::lattice::Lattice_Edge& edge(int index) const;
  inline ::lattice::Lattice_Edge* mutable_edge(int index);
  inline ::lattice::Lattice_Edge* add_edge();
  inline const ::google::protobuf::RepeatedPtrField< ::lattice::Lattice_Edge >&
      edge() const;
  inline ::google::protobuf::RepeatedPtrField< ::lattice::Lattice_Edge >*
      mutable_edge();
  
  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(Lattice_Node)
  // @@protoc_insertion_point(class_scope:lattice.Lattice.Node)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_label();
  inline void clear_has_label();
  
  ::google::protobuf::internal::ExtensionSet _extensions_;
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* label_;
  ::google::protobuf::RepeatedPtrField< ::lattice::Lattice_Edge > edge_;
  ::google::protobuf::int32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_lattice_2eproto();
  friend void protobuf_AssignDesc_lattice_2eproto();
  friend void protobuf_ShutdownFile_lattice_2eproto();
  
  void InitAsDefaultInstance();
  static Lattice_Node* default_instance_;
};
// -------------------------------------------------------------------

class Lattice_Edge : public ::google::protobuf::Message {
 public:
  Lattice_Edge();
  virtual ~Lattice_Edge();
  
  Lattice_Edge(const Lattice_Edge& from);
  
  inline Lattice_Edge& operator=(const Lattice_Edge& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Lattice_Edge& default_instance();
  
  void Swap(Lattice_Edge* other);
  
  // implements Message ----------------------------------------------
  
  Lattice_Edge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Lattice_Edge& from);
  void MergeFrom(const Lattice_Edge& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional string label = 2;
  inline bool has_label() const;
  inline void clear_label();
  static const int kLabelFieldNumber = 2;
  inline const ::std::string& label() const;
  inline void set_label(const ::std::string& value);
  inline void set_label(const char* value);
  inline void set_label(const char* value, size_t size);
  inline ::std::string* mutable_label();
  inline ::std::string* release_label();
  
  // required int32 to_id = 3;
  inline bool has_to_id() const;
  inline void clear_to_id();
  static const int kToIdFieldNumber = 3;
  inline ::google::protobuf::int32 to_id() const;
  inline void set_to_id(::google::protobuf::int32 value);
  
  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(Lattice_Edge)
  // @@protoc_insertion_point(class_scope:lattice.Lattice.Edge)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_label();
  inline void clear_has_label();
  inline void set_has_to_id();
  inline void clear_has_to_id();
  
  ::google::protobuf::internal::ExtensionSet _extensions_;
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* label_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 to_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_lattice_2eproto();
  friend void protobuf_AssignDesc_lattice_2eproto();
  friend void protobuf_ShutdownFile_lattice_2eproto();
  
  void InitAsDefaultInstance();
  static Lattice_Edge* default_instance_;
};
// -------------------------------------------------------------------

class Lattice : public ::google::protobuf::Message {
 public:
  Lattice();
  virtual ~Lattice();
  
  Lattice(const Lattice& from);
  
  inline Lattice& operator=(const Lattice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Lattice& default_instance();
  
  void Swap(Lattice* other);
  
  // implements Message ----------------------------------------------
  
  Lattice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Lattice& from);
  void MergeFrom(const Lattice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef Lattice_Node Node;
  typedef Lattice_Edge Edge;
  
  // accessors -------------------------------------------------------
  
  // required int32 start = 5;
  inline bool has_start() const;
  inline void clear_start();
  static const int kStartFieldNumber = 5;
  inline ::google::protobuf::int32 start() const;
  inline void set_start(::google::protobuf::int32 value);
  
  // repeated int32 final = 6;
  inline int final_size() const;
  inline void clear_final();
  static const int kFinalFieldNumber = 6;
  inline ::google::protobuf::int32 final(int index) const;
  inline void set_final(int index, ::google::protobuf::int32 value);
  inline void add_final(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      final() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_final();
  
  // repeated .lattice.Lattice.Node node = 7;
  inline int node_size() const;
  inline void clear_node();
  static const int kNodeFieldNumber = 7;
  inline const ::lattice::Lattice_Node& node(int index) const;
  inline ::lattice::Lattice_Node* mutable_node(int index);
  inline ::lattice::Lattice_Node* add_node();
  inline const ::google::protobuf::RepeatedPtrField< ::lattice::Lattice_Node >&
      node() const;
  inline ::google::protobuf::RepeatedPtrField< ::lattice::Lattice_Node >*
      mutable_node();
  
  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(Lattice)
  // @@protoc_insertion_point(class_scope:lattice.Lattice)
 private:
  inline void set_has_start();
  inline void clear_has_start();
  
  ::google::protobuf::internal::ExtensionSet _extensions_;
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > final_;
  ::google::protobuf::RepeatedPtrField< ::lattice::Lattice_Node > node_;
  ::google::protobuf::int32 start_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_lattice_2eproto();
  friend void protobuf_AssignDesc_lattice_2eproto();
  friend void protobuf_ShutdownFile_lattice_2eproto();
  
  void InitAsDefaultInstance();
  static Lattice* default_instance_;
};
// -------------------------------------------------------------------

class Subword : public ::google::protobuf::Message {
 public:
  Subword();
  virtual ~Subword();
  
  Subword(const Subword& from);
  
  inline Subword& operator=(const Subword& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Subword& default_instance();
  
  void Swap(Subword* other);
  
  // implements Message ----------------------------------------------
  
  Subword* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Subword& from);
  void MergeFrom(const Subword& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string word = 1;
  inline bool has_word() const;
  inline void clear_word();
  static const int kWordFieldNumber = 1;
  inline const ::std::string& word() const;
  inline void set_word(const ::std::string& value);
  inline void set_word(const char* value);
  inline void set_word(const char* value, size_t size);
  inline ::std::string* mutable_word();
  inline ::std::string* release_word();
  
  // optional int32 subword_original_id = 2;
  inline bool has_subword_original_id() const;
  inline void clear_subword_original_id();
  static const int kSubwordOriginalIdFieldNumber = 2;
  inline ::google::protobuf::int32 subword_original_id() const;
  inline void set_subword_original_id(::google::protobuf::int32 value);
  
  // optional int32 subword_hypergraph_node_id = 3;
  inline bool has_subword_hypergraph_node_id() const;
  inline void clear_subword_hypergraph_node_id();
  static const int kSubwordHypergraphNodeIdFieldNumber = 3;
  inline ::google::protobuf::int32 subword_hypergraph_node_id() const;
  inline void set_subword_hypergraph_node_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:lattice.Subword)
 private:
  inline void set_has_word();
  inline void clear_has_word();
  inline void set_has_subword_original_id();
  inline void clear_has_subword_original_id();
  inline void set_has_subword_hypergraph_node_id();
  inline void clear_has_subword_hypergraph_node_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* word_;
  ::google::protobuf::int32 subword_original_id_;
  ::google::protobuf::int32 subword_hypergraph_node_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_lattice_2eproto();
  friend void protobuf_AssignDesc_lattice_2eproto();
  friend void protobuf_ShutdownFile_lattice_2eproto();
  
  void InitAsDefaultInstance();
  static Subword* default_instance_;
};
// -------------------------------------------------------------------

class Phraselet : public ::google::protobuf::Message {
 public:
  Phraselet();
  virtual ~Phraselet();
  
  Phraselet(const Phraselet& from);
  
  inline Phraselet& operator=(const Phraselet& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Phraselet& default_instance();
  
  void Swap(Phraselet* other);
  
  // implements Message ----------------------------------------------
  
  Phraselet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Phraselet& from);
  void MergeFrom(const Phraselet& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .lattice.Subword word = 1;
  inline int word_size() const;
  inline void clear_word();
  static const int kWordFieldNumber = 1;
  inline const ::lattice::Subword& word(int index) const;
  inline ::lattice::Subword* mutable_word(int index);
  inline ::lattice::Subword* add_word();
  inline const ::google::protobuf::RepeatedPtrField< ::lattice::Subword >&
      word() const;
  inline ::google::protobuf::RepeatedPtrField< ::lattice::Subword >*
      mutable_word();
  
  // optional int32 phraselet_hypergraph_edge = 2;
  inline bool has_phraselet_hypergraph_edge() const;
  inline void clear_phraselet_hypergraph_edge();
  static const int kPhraseletHypergraphEdgeFieldNumber = 2;
  inline ::google::protobuf::int32 phraselet_hypergraph_edge() const;
  inline void set_phraselet_hypergraph_edge(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:lattice.Phraselet)
 private:
  inline void set_has_phraselet_hypergraph_edge();
  inline void clear_has_phraselet_hypergraph_edge();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::lattice::Subword > word_;
  ::google::protobuf::int32 phraselet_hypergraph_edge_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_lattice_2eproto();
  friend void protobuf_AssignDesc_lattice_2eproto();
  friend void protobuf_ShutdownFile_lattice_2eproto();
  
  void InitAsDefaultInstance();
  static Phraselet* default_instance_;
};
// -------------------------------------------------------------------

class Phraselets : public ::google::protobuf::Message {
 public:
  Phraselets();
  virtual ~Phraselets();
  
  Phraselets(const Phraselets& from);
  
  inline Phraselets& operator=(const Phraselets& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Phraselets& default_instance();
  
  void Swap(Phraselets* other);
  
  // implements Message ----------------------------------------------
  
  Phraselets* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Phraselets& from);
  void MergeFrom(const Phraselets& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .lattice.Phraselet phraselet = 1;
  inline int phraselet_size() const;
  inline void clear_phraselet();
  static const int kPhraseletFieldNumber = 1;
  inline const ::lattice::Phraselet& phraselet(int index) const;
  inline ::lattice::Phraselet* mutable_phraselet(int index);
  inline ::lattice::Phraselet* add_phraselet();
  inline const ::google::protobuf::RepeatedPtrField< ::lattice::Phraselet >&
      phraselet() const;
  inline ::google::protobuf::RepeatedPtrField< ::lattice::Phraselet >*
      mutable_phraselet();
  
  // @@protoc_insertion_point(class_scope:lattice.Phraselets)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::lattice::Phraselet > phraselet_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_lattice_2eproto();
  friend void protobuf_AssignDesc_lattice_2eproto();
  friend void protobuf_ShutdownFile_lattice_2eproto();
  
  void InitAsDefaultInstance();
  static Phraselets* default_instance_;
};
// -------------------------------------------------------------------

class Origin : public ::google::protobuf::Message {
 public:
  Origin();
  virtual ~Origin();
  
  Origin(const Origin& from);
  
  inline Origin& operator=(const Origin& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Origin& default_instance();
  
  void Swap(Origin* other);
  
  // implements Message ----------------------------------------------
  
  Origin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Origin& from);
  void MergeFrom(const Origin& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated int32 hypergraph_edge = 1;
  inline int hypergraph_edge_size() const;
  inline void clear_hypergraph_edge();
  static const int kHypergraphEdgeFieldNumber = 1;
  inline ::google::protobuf::int32 hypergraph_edge(int index) const;
  inline void set_hypergraph_edge(int index, ::google::protobuf::int32 value);
  inline void add_hypergraph_edge(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      hypergraph_edge() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_hypergraph_edge();
  
  // optional int32 original_id = 2;
  inline bool has_original_id() const;
  inline void clear_original_id();
  static const int kOriginalIdFieldNumber = 2;
  inline ::google::protobuf::int32 original_id() const;
  inline void set_original_id(::google::protobuf::int32 value);
  
  // optional bool has_origin = 3;
  inline bool has_has_origin() const;
  inline void clear_has_origin();
  static const int kHasOriginFieldNumber = 3;
  inline bool has_origin() const;
  inline void set_has_origin(bool value);
  
  // @@protoc_insertion_point(class_scope:lattice.Origin)
 private:
  inline void set_has_original_id();
  inline void clear_has_original_id();
  inline void set_has_has_origin();
  inline void clear_has_has_origin();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > hypergraph_edge_;
  ::google::protobuf::int32 original_id_;
  bool has_origin_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_lattice_2eproto();
  friend void protobuf_AssignDesc_lattice_2eproto();
  friend void protobuf_ShutdownFile_lattice_2eproto();
  
  void InitAsDefaultInstance();
  static Origin* default_instance_;
};
// ===================================================================

static const int kPhraseletsFieldNumber = 100;
extern ::google::protobuf::internal::ExtensionIdentifier< ::lattice::Lattice_Node,
    ::google::protobuf::internal::MessageTypeTraits< ::lattice::Phraselets >, 11, false >
  phraselets;
static const int kHasPhrasesFieldNumber = 101;
extern ::google::protobuf::internal::ExtensionIdentifier< ::lattice::Lattice_Node,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  has_phrases;
static const int kOriginFieldNumber = 110;
extern ::google::protobuf::internal::ExtensionIdentifier< ::lattice::Lattice_Edge,
    ::google::protobuf::internal::MessageTypeTraits< ::lattice::Origin >, 11, false >
  origin;
static const int kNumHypergraphEdgesFieldNumber = 121;
extern ::google::protobuf::internal::ExtensionIdentifier< ::lattice::Lattice,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  num_hypergraph_edges;
static const int kNumOriginalIdsFieldNumber = 122;
extern ::google::protobuf::internal::ExtensionIdentifier< ::lattice::Lattice,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  num_original_ids;

// ===================================================================

// Lattice_Node

// required int32 id = 1;
inline bool Lattice_Node::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Lattice_Node::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Lattice_Node::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Lattice_Node::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Lattice_Node::id() const {
  return id_;
}
inline void Lattice_Node::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional string label = 2;
inline bool Lattice_Node::has_label() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Lattice_Node::set_has_label() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Lattice_Node::clear_has_label() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Lattice_Node::clear_label() {
  if (label_ != &::google::protobuf::internal::kEmptyString) {
    label_->clear();
  }
  clear_has_label();
}
inline const ::std::string& Lattice_Node::label() const {
  return *label_;
}
inline void Lattice_Node::set_label(const ::std::string& value) {
  set_has_label();
  if (label_ == &::google::protobuf::internal::kEmptyString) {
    label_ = new ::std::string;
  }
  label_->assign(value);
}
inline void Lattice_Node::set_label(const char* value) {
  set_has_label();
  if (label_ == &::google::protobuf::internal::kEmptyString) {
    label_ = new ::std::string;
  }
  label_->assign(value);
}
inline void Lattice_Node::set_label(const char* value, size_t size) {
  set_has_label();
  if (label_ == &::google::protobuf::internal::kEmptyString) {
    label_ = new ::std::string;
  }
  label_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Lattice_Node::mutable_label() {
  set_has_label();
  if (label_ == &::google::protobuf::internal::kEmptyString) {
    label_ = new ::std::string;
  }
  return label_;
}
inline ::std::string* Lattice_Node::release_label() {
  clear_has_label();
  if (label_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = label_;
    label_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .lattice.Lattice.Edge edge = 3;
inline int Lattice_Node::edge_size() const {
  return edge_.size();
}
inline void Lattice_Node::clear_edge() {
  edge_.Clear();
}
inline const ::lattice::Lattice_Edge& Lattice_Node::edge(int index) const {
  return edge_.Get(index);
}
inline ::lattice::Lattice_Edge* Lattice_Node::mutable_edge(int index) {
  return edge_.Mutable(index);
}
inline ::lattice::Lattice_Edge* Lattice_Node::add_edge() {
  return edge_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::lattice::Lattice_Edge >&
Lattice_Node::edge() const {
  return edge_;
}
inline ::google::protobuf::RepeatedPtrField< ::lattice::Lattice_Edge >*
Lattice_Node::mutable_edge() {
  return &edge_;
}

// -------------------------------------------------------------------

// Lattice_Edge

// optional int32 id = 1;
inline bool Lattice_Edge::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Lattice_Edge::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Lattice_Edge::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Lattice_Edge::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Lattice_Edge::id() const {
  return id_;
}
inline void Lattice_Edge::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional string label = 2;
inline bool Lattice_Edge::has_label() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Lattice_Edge::set_has_label() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Lattice_Edge::clear_has_label() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Lattice_Edge::clear_label() {
  if (label_ != &::google::protobuf::internal::kEmptyString) {
    label_->clear();
  }
  clear_has_label();
}
inline const ::std::string& Lattice_Edge::label() const {
  return *label_;
}
inline void Lattice_Edge::set_label(const ::std::string& value) {
  set_has_label();
  if (label_ == &::google::protobuf::internal::kEmptyString) {
    label_ = new ::std::string;
  }
  label_->assign(value);
}
inline void Lattice_Edge::set_label(const char* value) {
  set_has_label();
  if (label_ == &::google::protobuf::internal::kEmptyString) {
    label_ = new ::std::string;
  }
  label_->assign(value);
}
inline void Lattice_Edge::set_label(const char* value, size_t size) {
  set_has_label();
  if (label_ == &::google::protobuf::internal::kEmptyString) {
    label_ = new ::std::string;
  }
  label_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Lattice_Edge::mutable_label() {
  set_has_label();
  if (label_ == &::google::protobuf::internal::kEmptyString) {
    label_ = new ::std::string;
  }
  return label_;
}
inline ::std::string* Lattice_Edge::release_label() {
  clear_has_label();
  if (label_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = label_;
    label_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required int32 to_id = 3;
inline bool Lattice_Edge::has_to_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Lattice_Edge::set_has_to_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Lattice_Edge::clear_has_to_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Lattice_Edge::clear_to_id() {
  to_id_ = 0;
  clear_has_to_id();
}
inline ::google::protobuf::int32 Lattice_Edge::to_id() const {
  return to_id_;
}
inline void Lattice_Edge::set_to_id(::google::protobuf::int32 value) {
  set_has_to_id();
  to_id_ = value;
}

// -------------------------------------------------------------------

// Lattice

// required int32 start = 5;
inline bool Lattice::has_start() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Lattice::set_has_start() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Lattice::clear_has_start() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Lattice::clear_start() {
  start_ = 0;
  clear_has_start();
}
inline ::google::protobuf::int32 Lattice::start() const {
  return start_;
}
inline void Lattice::set_start(::google::protobuf::int32 value) {
  set_has_start();
  start_ = value;
}

// repeated int32 final = 6;
inline int Lattice::final_size() const {
  return final_.size();
}
inline void Lattice::clear_final() {
  final_.Clear();
}
inline ::google::protobuf::int32 Lattice::final(int index) const {
  return final_.Get(index);
}
inline void Lattice::set_final(int index, ::google::protobuf::int32 value) {
  final_.Set(index, value);
}
inline void Lattice::add_final(::google::protobuf::int32 value) {
  final_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Lattice::final() const {
  return final_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Lattice::mutable_final() {
  return &final_;
}

// repeated .lattice.Lattice.Node node = 7;
inline int Lattice::node_size() const {
  return node_.size();
}
inline void Lattice::clear_node() {
  node_.Clear();
}
inline const ::lattice::Lattice_Node& Lattice::node(int index) const {
  return node_.Get(index);
}
inline ::lattice::Lattice_Node* Lattice::mutable_node(int index) {
  return node_.Mutable(index);
}
inline ::lattice::Lattice_Node* Lattice::add_node() {
  return node_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::lattice::Lattice_Node >&
Lattice::node() const {
  return node_;
}
inline ::google::protobuf::RepeatedPtrField< ::lattice::Lattice_Node >*
Lattice::mutable_node() {
  return &node_;
}

// -------------------------------------------------------------------

// Subword

// optional string word = 1;
inline bool Subword::has_word() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Subword::set_has_word() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Subword::clear_has_word() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Subword::clear_word() {
  if (word_ != &::google::protobuf::internal::kEmptyString) {
    word_->clear();
  }
  clear_has_word();
}
inline const ::std::string& Subword::word() const {
  return *word_;
}
inline void Subword::set_word(const ::std::string& value) {
  set_has_word();
  if (word_ == &::google::protobuf::internal::kEmptyString) {
    word_ = new ::std::string;
  }
  word_->assign(value);
}
inline void Subword::set_word(const char* value) {
  set_has_word();
  if (word_ == &::google::protobuf::internal::kEmptyString) {
    word_ = new ::std::string;
  }
  word_->assign(value);
}
inline void Subword::set_word(const char* value, size_t size) {
  set_has_word();
  if (word_ == &::google::protobuf::internal::kEmptyString) {
    word_ = new ::std::string;
  }
  word_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Subword::mutable_word() {
  set_has_word();
  if (word_ == &::google::protobuf::internal::kEmptyString) {
    word_ = new ::std::string;
  }
  return word_;
}
inline ::std::string* Subword::release_word() {
  clear_has_word();
  if (word_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = word_;
    word_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 subword_original_id = 2;
inline bool Subword::has_subword_original_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Subword::set_has_subword_original_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Subword::clear_has_subword_original_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Subword::clear_subword_original_id() {
  subword_original_id_ = 0;
  clear_has_subword_original_id();
}
inline ::google::protobuf::int32 Subword::subword_original_id() const {
  return subword_original_id_;
}
inline void Subword::set_subword_original_id(::google::protobuf::int32 value) {
  set_has_subword_original_id();
  subword_original_id_ = value;
}

// optional int32 subword_hypergraph_node_id = 3;
inline bool Subword::has_subword_hypergraph_node_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Subword::set_has_subword_hypergraph_node_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Subword::clear_has_subword_hypergraph_node_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Subword::clear_subword_hypergraph_node_id() {
  subword_hypergraph_node_id_ = 0;
  clear_has_subword_hypergraph_node_id();
}
inline ::google::protobuf::int32 Subword::subword_hypergraph_node_id() const {
  return subword_hypergraph_node_id_;
}
inline void Subword::set_subword_hypergraph_node_id(::google::protobuf::int32 value) {
  set_has_subword_hypergraph_node_id();
  subword_hypergraph_node_id_ = value;
}

// -------------------------------------------------------------------

// Phraselet

// repeated .lattice.Subword word = 1;
inline int Phraselet::word_size() const {
  return word_.size();
}
inline void Phraselet::clear_word() {
  word_.Clear();
}
inline const ::lattice::Subword& Phraselet::word(int index) const {
  return word_.Get(index);
}
inline ::lattice::Subword* Phraselet::mutable_word(int index) {
  return word_.Mutable(index);
}
inline ::lattice::Subword* Phraselet::add_word() {
  return word_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::lattice::Subword >&
Phraselet::word() const {
  return word_;
}
inline ::google::protobuf::RepeatedPtrField< ::lattice::Subword >*
Phraselet::mutable_word() {
  return &word_;
}

// optional int32 phraselet_hypergraph_edge = 2;
inline bool Phraselet::has_phraselet_hypergraph_edge() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Phraselet::set_has_phraselet_hypergraph_edge() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Phraselet::clear_has_phraselet_hypergraph_edge() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Phraselet::clear_phraselet_hypergraph_edge() {
  phraselet_hypergraph_edge_ = 0;
  clear_has_phraselet_hypergraph_edge();
}
inline ::google::protobuf::int32 Phraselet::phraselet_hypergraph_edge() const {
  return phraselet_hypergraph_edge_;
}
inline void Phraselet::set_phraselet_hypergraph_edge(::google::protobuf::int32 value) {
  set_has_phraselet_hypergraph_edge();
  phraselet_hypergraph_edge_ = value;
}

// -------------------------------------------------------------------

// Phraselets

// repeated .lattice.Phraselet phraselet = 1;
inline int Phraselets::phraselet_size() const {
  return phraselet_.size();
}
inline void Phraselets::clear_phraselet() {
  phraselet_.Clear();
}
inline const ::lattice::Phraselet& Phraselets::phraselet(int index) const {
  return phraselet_.Get(index);
}
inline ::lattice::Phraselet* Phraselets::mutable_phraselet(int index) {
  return phraselet_.Mutable(index);
}
inline ::lattice::Phraselet* Phraselets::add_phraselet() {
  return phraselet_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::lattice::Phraselet >&
Phraselets::phraselet() const {
  return phraselet_;
}
inline ::google::protobuf::RepeatedPtrField< ::lattice::Phraselet >*
Phraselets::mutable_phraselet() {
  return &phraselet_;
}

// -------------------------------------------------------------------

// Origin

// repeated int32 hypergraph_edge = 1;
inline int Origin::hypergraph_edge_size() const {
  return hypergraph_edge_.size();
}
inline void Origin::clear_hypergraph_edge() {
  hypergraph_edge_.Clear();
}
inline ::google::protobuf::int32 Origin::hypergraph_edge(int index) const {
  return hypergraph_edge_.Get(index);
}
inline void Origin::set_hypergraph_edge(int index, ::google::protobuf::int32 value) {
  hypergraph_edge_.Set(index, value);
}
inline void Origin::add_hypergraph_edge(::google::protobuf::int32 value) {
  hypergraph_edge_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Origin::hypergraph_edge() const {
  return hypergraph_edge_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Origin::mutable_hypergraph_edge() {
  return &hypergraph_edge_;
}

// optional int32 original_id = 2;
inline bool Origin::has_original_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Origin::set_has_original_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Origin::clear_has_original_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Origin::clear_original_id() {
  original_id_ = 0;
  clear_has_original_id();
}
inline ::google::protobuf::int32 Origin::original_id() const {
  return original_id_;
}
inline void Origin::set_original_id(::google::protobuf::int32 value) {
  set_has_original_id();
  original_id_ = value;
}

// optional bool has_origin = 3;
inline bool Origin::has_has_origin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Origin::set_has_has_origin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Origin::clear_has_has_origin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Origin::clear_has_origin() {
  has_origin_ = false;
  clear_has_has_origin();
}
inline bool Origin::has_origin() const {
  return has_origin_;
}
inline void Origin::set_has_origin(bool value) {
  set_has_has_origin();
  has_origin_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace lattice

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_lattice_2eproto__INCLUDED
